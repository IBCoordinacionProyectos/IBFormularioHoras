{"ast":null,"code":"import _objectWithoutProperties from\"C:/Users/YeisonDuqueDiaz/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"date\",\"id\",\"employee_id\",\"project_name\"],_excluded2=[\"date\",\"id\",\"employee_id\",\"project_name\"];var _env2;// src/api/horasApi.ts\nimport axios from'axios';// Security: Configure axios with security best practices\naxios.defaults.timeout=30000;// 30 second timeout\naxios.defaults.maxRedirects=5;// Limit redirects\naxios.defaults.validateStatus=status=>status>=200&&status<300;// Additional security headers\naxios.defaults.headers.common['X-Requested-With']='XMLHttpRequest';axios.defaults.headers.common['X-Content-Type-Options']='nosniff';// CSRF protection for non-GET requests\naxios.interceptors.request.use(config=>{if(config.method&&!['get','head','options'].includes(config.method.toLowerCase())){// Add CSRF token if available\nconst csrfToken=localStorage.getItem('csrf_token');if(csrfToken){config.headers['X-CSRF-Token']=csrfToken;}}return config;});// Input validation helpers\nconst isValidUrl=url=>{try{var _env;const parsedUrl=new URL(url);// Only allow HTTPS in production\nconst isProduction=((_env=process.env)===null||_env===void 0?void 0:_env.NODE_ENV)==='production';if(isProduction&&parsedUrl.protocol!=='https:'){return false;}// Prevent SSRF by only allowing specific domains\nconst allowedDomains=['backend.yeisonduque.top','localhost','127.0.0.1'];return allowedDomains.some(domain=>parsedUrl.hostname===domain||parsedUrl.hostname.endsWith('.'+domain));}catch(_unused){return false;}};const sanitizeString=function(input){let maxLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1000;if(typeof input!=='string')return'';// Remove potentially dangerous characters and limit length\nreturn input.slice(0,maxLength).replace(/[<>'\"&]/g,'')// Remove HTML injection chars\n.replace(/[\\x00-\\x1F\\x7F]/g,'');// Remove control characters\n};// Enhanced input validation\nconst validateInput=function(input,type){let maxLength=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;if(input===null||input===undefined)return'';const str=String(input).trim();// Length validation\nif(str.length>maxLength){throw new Error(\"\".concat(type,\" exceeds maximum length of \").concat(maxLength,\" characters\"));}// Pattern validation based on type\nswitch(type){case'project_code':if(!/^[A-Z0-9_\\- .()]+$/i.test(str)){throw new Error('Project code contains invalid characters');}break;case'phase':case'discipline':case'activity':// Allow letters, numbers, spaces, hyphens, underscores, parentheses, forward slashes, and accented characters\nif(!/^[A-Za-z0-9\\s\\-_()/ÁÉÍÓÚáéíóúÑñ]+$/i.test(str)){throw new Error(\"\".concat(type,\" contains invalid characters\"));}break;case'hours':const num=parseFloat(str.replace(',','.'));if(isNaN(num)||num<0||num>24){throw new Error('Hours must be a valid number between 0 and 24');}return num.toString();case'date':if(!/^\\d{4}-\\d{2}-\\d{2}$/.test(str)){throw new Error('Date must be in YYYY-MM-DD format');}break;case'employee_id':const empId=parseInt(str,10);if(isNaN(empId)||empId<=0){throw new Error('Employee ID must be a positive integer');}return empId.toString();}return sanitizeString(str,maxLength);};export const API_BASE_URL=((_env2=process.env)===null||_env2===void 0?void 0:_env2.REACT_APP_API_BASE_URL)||'https://backend.yeisonduque.top';/* =========================\r\n   Tipos base (ajusta si quieres)\r\n   ========================= *//* =========================\r\n   Helpers\r\n   ========================= */const normalizeHours=h=>typeof h==='string'?parseFloat(h.replace(',','.')):h!==null&&h!==void 0?h:0;// Para creación (POST) - incluye date\nconst sanitizeCreate=data=>{try{return{project_code:validateInput(data.project_code,'project_code',50),phase:validateInput(data.phase,'phase',100),discipline:validateInput(data.discipline,'discipline',100),activity:validateInput(data.activity,'activity',200),hours:validateInput(data.hours,'hours'),date:validateInput(data.date,'date'),employee_id:validateInput(data.employee_id,'employee_id'),note:data.note?validateInput(data.note,'note',500):''};}catch(error){throw new Error(\"Validation error in create data: \".concat(error instanceof Error?error.message:'Unknown error'));}};// Para actualización (PUT) - sin date y sin campos no editables\nconst sanitizeUpdate=data=>{try{// Extraer campos no permitidos en el update\nconst{date,id,employee_id,project_name}=data,rest=_objectWithoutProperties(data,_excluded);return{project_code:validateInput(rest.project_code,'project_code',50),phase:validateInput(rest.phase,'phase',100),discipline:validateInput(rest.discipline,'discipline',100),activity:validateInput(rest.activity,'activity',200),hours:validateInput(rest.hours,'hours'),note:rest.note?validateInput(rest.note,'note',500):''};}catch(error){throw new Error(\"Validation error in update data: \".concat(error instanceof Error?error.message:'Unknown error'));}};const encodeId=id=>encodeURIComponent(String(id));/* =========================\r\n   Crear/Actualizar (botón Guardar/Actualizar)\r\n   ========================= */export const submitHours=async data=>{try{if(data!==null&&data!==void 0&&data.id){// UPDATE (PUT)\nconst id=encodeURIComponent(String(data.id));const body=sanitizeUpdate(data);console.log('Enviando datos de actualización:',{hourId:id,payload:body});const res=await axios.put(\"\".concat(API_BASE_URL,\"/hours/\").concat(id),body);return res.data;}else{// CREATE (POST)\nconst body=sanitizeCreate(data);console.log('Creando nueva hora:',body);const res=await axios.post(\"\".concat(API_BASE_URL,\"/hours/\"),body);return res.data;}}catch(error){console.error('Error al enviar las horas:',error);if(axios.isAxiosError(error)&&error.response){var _detail,_error$response$data,_error$response$data2;console.error('Detalles del error (submitHours):',error.response.data);const detail=(_detail=(_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)!==null&&_detail!==void 0?_detail:(_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:_error$response$data2.message;if(detail)throw new Error(typeof detail==='string'?detail:JSON.stringify(detail));}throw error;}};/* =========================\r\n   Update/Delete directos (si los usas en otros lados)\r\n   ========================= */export const updateHour=async(hourId,data)=>{try{const id=encodeURIComponent(String(hourId));// Quitar campos que el backend no acepta en PUT\nconst _ref=data!==null&&data!==void 0?data:{},{date:_dropDate,id:_dropId,employee_id:_dropEmp,project_name:_dropPN}=_ref,rest=_objectWithoutProperties(_ref,_excluded2);const body=sanitizeUpdate(rest);console.log('Enviando datos de actualización:',{hourId:id,payload:body});const res=await axios.put(\"\".concat(API_BASE_URL,\"/hours/\").concat(id),body);return res.data;}catch(error){console.error(\"Error al actualizar la hora \".concat(hourId,\":\"),error);if(axios.isAxiosError(error)&&error.response){var _detail2,_error$response$data3,_error$response$data4;console.error('Detalles del error (updateHour):',error.response.data);const detail=(_detail2=(_error$response$data3=error.response.data)===null||_error$response$data3===void 0?void 0:_error$response$data3.detail)!==null&&_detail2!==void 0?_detail2:(_error$response$data4=error.response.data)===null||_error$response$data4===void 0?void 0:_error$response$data4.message;if(detail)throw new Error(typeof detail==='string'?detail:JSON.stringify(detail));}throw error;}};export const deleteHour=async hourId=>{if(!hourId)throw new Error('hourId vacío para DELETE');const id=encodeURIComponent(String(hourId));// ← NUNCA Number(...)\nconsole.log('DELETE /hours/',id);try{const res=await axios.delete(\"\".concat(API_BASE_URL,\"/hours/\").concat(id));return res.data;}catch(error){console.error(\"Error al eliminar el registro de horas \".concat(hourId,\":\"),error);if(axios.isAxiosError(error)&&error.response){var _detail3,_error$response$data5,_error$response$data6;console.error('Detalles del error (deleteHour):',error.response.data);const detail=(_detail3=(_error$response$data5=error.response.data)===null||_error$response$data5===void 0?void 0:_error$response$data5.detail)!==null&&_detail3!==void 0?_detail3:(_error$response$data6=error.response.data)===null||_error$response$data6===void 0?void 0:_error$response$data6.message;if(detail)throw new Error(typeof detail==='string'?detail:JSON.stringify(detail));}throw error;}};/* =========================\r\n   Catálogos / dependencias\r\n   ========================= */export const getProjects=async()=>{const res=await axios.get(\"\".concat(API_BASE_URL,\"/projects/\"));return res.data;};export const getEmployees=async()=>{const res=await axios.get(\"\".concat(API_BASE_URL,\"/employees/\"));return res.data;};export const getProjectStages=async projectCode=>{const res=await axios.get(\"\".concat(API_BASE_URL,\"/activities/project/\").concat(encodeURIComponent(projectCode),\"/stages\"));return res.data;};export const getDisciplinesByStage=async(projectCode,stage)=>{const res=await axios.get(\"\".concat(API_BASE_URL,\"/activities/\").concat(encodeURIComponent(projectCode),\"::\").concat(encodeURIComponent(stage),\"/disciplines\"));return res.data;};export const getActivitiesByDiscipline=async(projectCode,stage,discipline)=>{const res=await axios.get(\"\".concat(API_BASE_URL,\"/activities/\").concat(encodeURIComponent(projectCode),\"::\").concat(encodeURIComponent(stage),\"::\").concat(encodeURIComponent(discipline),\"/activities\"));return res.data;};/* =========================\r\n   Consultas de horas\r\n   ========================= */export const getDailyActivities=async(date,employeeId)=>{const dateStr=date instanceof Date?date.toISOString().slice(0,10):String(date);const empId=typeof employeeId==='string'?parseInt(employeeId,10):Number(employeeId);const res=await axios.get(\"\".concat(API_BASE_URL,\"/daily-activities\"),{params:{date:dateStr,employee_id:empId},validateStatus:s=>s>=200&&s<300});return res.data||[];};/* =========================\r\n   Auth (si lo usas)\r\n   ========================= */export const loginUser=async credentials=>{const res=await axios.post(\"\".concat(API_BASE_URL,\"/auth/login\"),credentials);return res.data;};/* =========================\r\n   Reportes\r\n   ========================= */export const getMonthlyHoursReport=async(year,month)=>{try{const res=await axios.get(\"\".concat(API_BASE_URL,\"/hours/monthly-report/\").concat(year,\"/\").concat(month));return res.data||[];}catch(error){console.error(\"Error al obtener el reporte mensual de horas para \".concat(year,\"-\").concat(month,\":\"),error);if(axios.isAxiosError(error)&&error.response){var _detail4,_error$response$data7,_error$response$data8;console.error('Detalles del error (getMonthlyHoursReport):',error.response.data);const detail=(_detail4=(_error$response$data7=error.response.data)===null||_error$response$data7===void 0?void 0:_error$response$data7.detail)!==null&&_detail4!==void 0?_detail4:(_error$response$data8=error.response.data)===null||_error$response$data8===void 0?void 0:_error$response$data8.message;if(detail)throw new Error(typeof detail==='string'?detail:JSON.stringify(detail));}throw error;}};export const getMonthlyHoursMatrix=async(year,month)=>{try{const res=await axios.get(\"\".concat(API_BASE_URL,\"/hours/monthly-matrix/\").concat(year,\"/\").concat(month));return res.data||{employees:[],days:[],matrix:[],totals:{rows:[],cols:[]}};}catch(error){console.error(\"Error al obtener el reporte mensual de horas en formato matriz para \".concat(year,\"-\").concat(month,\":\"),error);if(axios.isAxiosError(error)&&error.response){var _detail5,_error$response$data9,_error$response$data0;console.error('Detalles del error (getMonthlyHoursMatrix):',error.response.data);const detail=(_detail5=(_error$response$data9=error.response.data)===null||_error$response$data9===void 0?void 0:_error$response$data9.detail)!==null&&_detail5!==void 0?_detail5:(_error$response$data0=error.response.data)===null||_error$response$data0===void 0?void 0:_error$response$data0.message;if(detail)throw new Error(typeof detail==='string'?detail:JSON.stringify(detail));}throw error;}};export const getGroupedHoursByEmployee=async(year,month)=>{try{const res=await axios.get(\"\".concat(API_BASE_URL,\"/hours/grouped-by-employee\"),{params:{year,month}});return res.data||[];}catch(error){console.error(\"Error al obtener las horas agrupadas por empleado para \".concat(year,\"-\").concat(month,\":\"),error);if(axios.isAxiosError(error)&&error.response){var _detail6,_error$response$data1,_error$response$data10;console.error('Detalles del error (getGroupedHoursByEmployee):',error.response.data);const detail=(_detail6=(_error$response$data1=error.response.data)===null||_error$response$data1===void 0?void 0:_error$response$data1.detail)!==null&&_detail6!==void 0?_detail6:(_error$response$data10=error.response.data)===null||_error$response$data10===void 0?void 0:_error$response$data10.message;if(detail)throw new Error(typeof detail==='string'?detail:JSON.stringify(detail));}throw error;}};","map":{"version":3,"names":["axios","defaults","timeout","maxRedirects","validateStatus","status","headers","common","interceptors","request","use","config","method","includes","toLowerCase","csrfToken","localStorage","getItem","isValidUrl","url","_env","parsedUrl","URL","isProduction","process","env","NODE_ENV","protocol","allowedDomains","some","domain","hostname","endsWith","_unused","sanitizeString","input","maxLength","arguments","length","undefined","slice","replace","validateInput","type","str","String","trim","Error","concat","test","num","parseFloat","isNaN","toString","empId","parseInt","API_BASE_URL","_env2","REACT_APP_API_BASE_URL","normalizeHours","h","sanitizeCreate","data","project_code","phase","discipline","activity","hours","date","employee_id","note","error","message","sanitizeUpdate","id","project_name","rest","_objectWithoutProperties","_excluded","encodeId","encodeURIComponent","submitHours","body","console","log","hourId","payload","res","put","post","isAxiosError","response","_detail","_error$response$data","_error$response$data2","detail","JSON","stringify","updateHour","_ref","_dropDate","_dropId","_dropEmp","_dropPN","_excluded2","_detail2","_error$response$data3","_error$response$data4","deleteHour","delete","_detail3","_error$response$data5","_error$response$data6","getProjects","get","getEmployees","getProjectStages","projectCode","getDisciplinesByStage","stage","getActivitiesByDiscipline","getDailyActivities","employeeId","dateStr","Date","toISOString","Number","params","s","loginUser","credentials","getMonthlyHoursReport","year","month","_detail4","_error$response$data7","_error$response$data8","getMonthlyHoursMatrix","employees","days","matrix","totals","rows","cols","_detail5","_error$response$data9","_error$response$data0","getGroupedHoursByEmployee","_detail6","_error$response$data1","_error$response$data10"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\r\nimport axios from 'axios';\r\n\r\n// Security: Configure axios with security best practices\r\naxios.defaults.timeout = 30000; // 30 second timeout\r\naxios.defaults.maxRedirects = 5; // Limit redirects\r\naxios.defaults.validateStatus = (status) => status >= 200 && status < 300;\r\n\r\n// Additional security headers\r\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\naxios.defaults.headers.common['X-Content-Type-Options'] = 'nosniff';\r\n\r\n// CSRF protection for non-GET requests\r\naxios.interceptors.request.use((config) => {\r\n  if (config.method && !['get', 'head', 'options'].includes(config.method.toLowerCase())) {\r\n    // Add CSRF token if available\r\n    const csrfToken = localStorage.getItem('csrf_token');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRF-Token'] = csrfToken;\r\n    }\r\n  }\r\n  return config;\r\n});\r\n\r\n// Input validation helpers\r\nconst isValidUrl = (url: string): boolean => {\r\n  try {\r\n    const parsedUrl = new URL(url);\r\n    // Only allow HTTPS in production\r\n    const isProduction = (process as any).env?.NODE_ENV === 'production';\r\n    if (isProduction && parsedUrl.protocol !== 'https:') {\r\n      return false;\r\n    }\r\n    // Prevent SSRF by only allowing specific domains\r\n    const allowedDomains = [\r\n      'backend.yeisonduque.top',\r\n      'localhost',\r\n      '127.0.0.1'\r\n    ];\r\n    return allowedDomains.some(domain =>\r\n      parsedUrl.hostname === domain || parsedUrl.hostname.endsWith('.' + domain)\r\n    );\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst sanitizeString = (input: string, maxLength: number = 1000): string => {\r\n  if (typeof input !== 'string') return '';\r\n  // Remove potentially dangerous characters and limit length\r\n  return input\r\n    .slice(0, maxLength)\r\n    .replace(/[<>'\"&]/g, '') // Remove HTML injection chars\r\n    .replace(/[\\x00-\\x1F\\x7F]/g, ''); // Remove control characters\r\n};\r\n\r\n// Enhanced input validation\r\nconst validateInput = (input: any, type: string, maxLength: number = 1000): string => {\r\n  if (input === null || input === undefined) return '';\r\n\r\n  const str = String(input).trim();\r\n\r\n  // Length validation\r\n  if (str.length > maxLength) {\r\n    throw new Error(`${type} exceeds maximum length of ${maxLength} characters`);\r\n  }\r\n\r\n  // Pattern validation based on type\r\n  switch (type) {\r\n    case 'project_code':\r\n      if (!/^[A-Z0-9_\\- .()]+$/i.test(str)) {\r\n        throw new Error('Project code contains invalid characters');\r\n      }\r\n      break;\r\n    case 'phase':\r\n    case 'discipline':\r\n    case 'activity':\r\n      // Allow letters, numbers, spaces, hyphens, underscores, parentheses, forward slashes, and accented characters\r\n      if (!/^[A-Za-z0-9\\s\\-_()/ÁÉÍÓÚáéíóúÑñ]+$/i.test(str)) {\r\n        throw new Error(`${type} contains invalid characters`);\r\n      }\r\n      break;\r\n    case 'hours':\r\n      const num = parseFloat(str.replace(',', '.'));\r\n      if (isNaN(num) || num < 0 || num > 24) {\r\n        throw new Error('Hours must be a valid number between 0 and 24');\r\n      }\r\n      return num.toString();\r\n    case 'date':\r\n      if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(str)) {\r\n        throw new Error('Date must be in YYYY-MM-DD format');\r\n      }\r\n      break;\r\n    case 'employee_id':\r\n      const empId = parseInt(str, 10);\r\n      if (isNaN(empId) || empId <= 0) {\r\n        throw new Error('Employee ID must be a positive integer');\r\n      }\r\n      return empId.toString();\r\n  }\r\n\r\n  return sanitizeString(str, maxLength);\r\n};\r\n\r\nexport const API_BASE_URL = (process as any).env?.REACT_APP_API_BASE_URL || 'https://backend.yeisonduque.top';\r\n\r\n/* =========================\r\n   Tipos base (ajusta si quieres)\r\n   ========================= */\r\nexport interface DailyActivity {\r\n  id: string;\r\n  date: string;              // \"YYYY-MM-DD\"\r\n  employee_id: number;\r\n  project_code: string;\r\n  project_name: string;\r\n  phase: string;\r\n  discipline: string;\r\n  activity: string;\r\n  hours: number;\r\n  note?: string;\r\n}\r\n\r\nexport interface HourData {\r\n  id?: string;               // <- presente SOLO al editar\r\n  project_code: string;\r\n  phase: string;\r\n  discipline: string;\r\n  activity: string;\r\n  hours: number | string;\r\n  date: string;              // \"YYYY-MM-DD\"\r\n  employee_id?: number | string; // requerido en creación\r\n  note?: string;\r\n}\r\n\r\n/* =========================\r\n   Helpers\r\n   ========================= */\r\nconst normalizeHours = (h: number | string | undefined) =>\r\n  typeof h === 'string' ? parseFloat(h.replace(',', '.')) : (h ?? 0);\r\n\r\n// Para creación (POST) - incluye date\r\nconst sanitizeCreate = (data: any) => {\r\n  try {\r\n    return {\r\n      project_code: validateInput(data.project_code, 'project_code', 50),\r\n      phase: validateInput(data.phase, 'phase', 100),\r\n      discipline: validateInput(data.discipline, 'discipline', 100),\r\n      activity: validateInput(data.activity, 'activity', 200),\r\n      hours: validateInput(data.hours, 'hours'),\r\n      date: validateInput(data.date, 'date'),\r\n      employee_id: validateInput(data.employee_id, 'employee_id'),\r\n      note: data.note ? validateInput(data.note, 'note', 500) : '',\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Validation error in create data: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n  }\r\n};\r\n\r\n// Para actualización (PUT) - sin date y sin campos no editables\r\nconst sanitizeUpdate = (data: any) => {\r\n  try {\r\n    // Extraer campos no permitidos en el update\r\n    const { date, id, employee_id, project_name, ...rest } = data;\r\n    return {\r\n      project_code: validateInput(rest.project_code, 'project_code', 50),\r\n      phase: validateInput(rest.phase, 'phase', 100),\r\n      discipline: validateInput(rest.discipline, 'discipline', 100),\r\n      activity: validateInput(rest.activity, 'activity', 200),\r\n      hours: validateInput(rest.hours, 'hours'),\r\n      note: rest.note ? validateInput(rest.note, 'note', 500) : '',\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Validation error in update data: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n  }\r\n};\r\n\r\nconst encodeId = (id: string | number) => encodeURIComponent(String(id));\r\n\r\n/* =========================\r\n   Crear/Actualizar (botón Guardar/Actualizar)\r\n   ========================= */\r\nexport const submitHours = async (data: any) => {\r\n  try {\r\n    if (data?.id) {\r\n      // UPDATE (PUT)\r\n      const id = encodeURIComponent(String(data.id));\r\n      const body = sanitizeUpdate(data);\r\n      console.log('Enviando datos de actualización:', { hourId: id, payload: body });\r\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\r\n      return res.data;\r\n    } else {\r\n      // CREATE (POST)\r\n      const body = sanitizeCreate(data);\r\n      console.log('Creando nueva hora:', body);\r\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\r\n      return res.data;\r\n    }\r\n  } catch (error: any) {\r\n    console.error('Error al enviar las horas:', error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (submitHours):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* =========================\r\n   Update/Delete directos (si los usas en otros lados)\r\n   ========================= */\r\nexport const updateHour = async (hourId: string | number, data: any) => {\r\n  try {\r\n    const id = encodeURIComponent(String(hourId));\r\n    // Quitar campos que el backend no acepta en PUT\r\n    const { date: _dropDate, id: _dropId, employee_id: _dropEmp, project_name: _dropPN, ...rest } = data ?? {};\r\n    const body = sanitizeUpdate(rest);\r\n    console.log('Enviando datos de actualización:', { hourId: id, payload: body });\r\n    const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (updateHour):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteHour = async (hourId: string | number) => {\r\n  if (!hourId) throw new Error('hourId vacío para DELETE');\r\n  const id = encodeURIComponent(String(hourId)); // ← NUNCA Number(...)\r\n  console.log('DELETE /hours/', id);\r\n  try {\r\n    const res = await axios.delete(`${API_BASE_URL}/hours/${id}`);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (deleteHour):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* =========================\r\n   Catálogos / dependencias\r\n   ========================= */\r\nexport const getProjects = async () => {\r\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\r\n  return res.data;\r\n};\r\n\r\nexport const getEmployees = async () => {\r\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\r\n  return res.data;\r\n};\r\n\r\nexport const getProjectStages = async (projectCode: string) => {\r\n  const res = await axios.get(\r\n    `${API_BASE_URL}/activities/project/${encodeURIComponent(projectCode)}/stages`\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\r\n  const res = await axios.get(\r\n    `${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}/disciplines`\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const getActivitiesByDiscipline = async (\r\n  projectCode: string,\r\n  stage: string,\r\n  discipline: string\r\n) => {\r\n  const res = await axios.get(\r\n    `${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}::${encodeURIComponent(discipline)}/activities`\r\n  );\r\n  return res.data;\r\n};\r\n\r\n/* =========================\r\n   Consultas de horas\r\n   ========================= */\r\nexport const getDailyActivities = async (\r\n  date: Date | string,\r\n  employeeId: number | string\r\n): Promise<DailyActivity[]> => {\r\n  const dateStr = date instanceof Date ? date.toISOString().slice(0, 10) : String(date);\r\n  const empId =\r\n    typeof employeeId === 'string' ? parseInt(employeeId, 10) : Number(employeeId);\r\n\r\n  const res = await axios.get<DailyActivity[]>(`${API_BASE_URL}/daily-activities`, {\r\n    params: { date: dateStr, employee_id: empId },\r\n    validateStatus: (s) => s >= 200 && s < 300,\r\n  });\r\n  return res.data || [];\r\n};\r\n\r\n/* =========================\r\n   Auth (si lo usas)\r\n   ========================= */\r\nexport const loginUser = async (credentials: any) => {\r\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\r\n  return res.data;\r\n};\r\n\r\n/* =========================\r\n   Reportes\r\n   ========================= */\r\nexport interface MonthlyReportEntry {\r\n  id: string;\r\n  date: string;              // \"YYYY-MM-DD\"\r\n  employee_id: number;\r\n  employee_name: string;\r\n  employee_short_name: string;\r\n  project_code: string;\r\n  phase: string;\r\n  discipline: string;\r\n  activity: string;\r\n  hours: number;\r\n  note?: string;\r\n}\r\n\r\nexport const getMonthlyHoursReport = async (year: number, month: number): Promise<MonthlyReportEntry[]> => {\r\n  try {\r\n    const res = await axios.get<MonthlyReportEntry[]>(`${API_BASE_URL}/hours/monthly-report/${year}/${month}`);\r\n    return res.data || [];\r\n  } catch (error: any) {\r\n    console.error(`Error al obtener el reporte mensual de horas para ${year}-${month}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (getMonthlyHoursReport):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport interface MonthlyMatrixData {\r\n  employees: Array<{\r\n    id: number;\r\n    name: string;\r\n    short_name: string;\r\n  }>;\r\n  days: string[];\r\n  matrix: number[][];\r\n  totals: {\r\n    rows: number[];\r\n    cols: number[];\r\n  };\r\n}\r\n\r\nexport const getMonthlyHoursMatrix = async (year: number, month: number): Promise<MonthlyMatrixData> => {\r\n  try {\r\n    const res = await axios.get<MonthlyMatrixData>(`${API_BASE_URL}/hours/monthly-matrix/${year}/${month}`);\r\n    return res.data || { employees: [], days: [], matrix: [], totals: { rows: [], cols: [] } };\r\n  } catch (error: any) {\r\n    console.error(`Error al obtener el reporte mensual de horas en formato matriz para ${year}-${month}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (getMonthlyHoursMatrix):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport interface GroupedHour {\r\n  date: string;\r\n  employee_id: string;\r\n  short_name: string;\r\n  hours: number;\r\n}\r\n\r\nexport const getGroupedHoursByEmployee = async (year: number, month: number): Promise<GroupedHour[]> => {\r\n  try {\r\n    const res = await axios.get<GroupedHour[]>(`${API_BASE_URL}/hours/grouped-by-employee`, {\r\n      params: { year, month }\r\n    });\r\n    return res.data || [];\r\n  } catch (error: any) {\r\n    console.error(`Error al obtener las horas agrupadas por empleado para ${year}-${month}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (getGroupedHoursByEmployee):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}