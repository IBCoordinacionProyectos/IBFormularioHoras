{"ast":null,"code":"import React,{useState,useEffect}from'react';import{format,subMonths,getDaysInMonth}from'date-fns';import{es}from'date-fns/locale';import{Card,CardContent,CardHeader,CardTitle}from'./ui/card';import{Button}from'./ui/button';import{ChevronLeft,Calendar}from'lucide-react';import{getGroupedHoursByEmployee}from'../api/horasApi';import{Table,TableBody,TableFooter,TableCell,TableHead,TableHeader,TableRow}from'./ui/table';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TablaHoras=()=>{const[currentMonth,setCurrentMonth]=useState(new Date());const[matrixData,setMatrixData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Transform grouped data to matrix format\nconst transformGroupedData=groupedData=>{// Extract unique employees and days\nconst employeesMap=new Map();const daysSet=new Set();groupedData.forEach(item=>{// Add employee to map\nconst employeeId=parseInt(item.employee_id,10);if(!employeesMap.has(item.employee_id)){employeesMap.set(item.employee_id,{id:employeeId,name:item.short_name,// Using short_name as name for display\nshort_name:item.short_name});}// Add day to set\ndaysSet.add(item.date);});// Convert to arrays and sort\nconst employees=Array.from(employeesMap.values()).sort((a,b)=>a.short_name.localeCompare(b.short_name));const days=Array.from(daysSet).sort();// Create matrix\nconst matrix=[];const rowTotals=[];const colTotals=Array(days.length).fill(0);employees.forEach((employee,rowIndex)=>{const row=Array(days.length).fill(0);let rowTotal=0;days.forEach((day,colIndex)=>{const matchingItem=groupedData.find(item=>item.employee_id===employee.id.toString()&&item.date===day);if(matchingItem){row[colIndex]=matchingItem.hours;rowTotal+=matchingItem.hours;colTotals[colIndex]+=matchingItem.hours;}});matrix.push(row);rowTotals.push(rowTotal);});return{employees,days,matrix,totals:{rows:rowTotals,cols:colTotals}};};// Fetch matrix data for the current month\nuseEffect(()=>{const fetchMatrixData=async()=>{setLoading(true);setError(null);try{const year=currentMonth.getFullYear();const month=currentMonth.getMonth()+1;// getMonth() is zero-indexed\nconst groupedData=await getGroupedHoursByEmployee(year,month);const transformedData=transformGroupedData(groupedData);setMatrixData(transformedData);}catch(err){console.error('Error fetching matrix data:',err);setError(err.message||'Error al cargar el reporte de horas');}finally{setLoading(false);}};fetchMatrixData();},[currentMonth]);const handlePreviousMonth=()=>{setCurrentMonth(subMonths(currentMonth,1));};const handleCurrentMonth=()=>{setCurrentMonth(new Date());};if(loading){return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:format(currentMonth,'MMMM yyyy',{locale:es})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handlePreviousMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handleCurrentMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4 rotate-180\"})})]})]})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-32\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Cargando datos...\"})})})]});}if(error){return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:format(currentMonth,'MMMM yyyy',{locale:es})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handlePreviousMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handleCurrentMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4 rotate-180\"})})]})]})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-32 text-red-500\",children:/*#__PURE__*/_jsx(\"p\",{children:error})})})]});}// If we have data, render the matrix table\nif(matrixData){const{employees,days,matrix,totals}=matrixData;// Filter out days where no collaborator has hours\nconst daysWithHours=days.filter((_,index)=>totals.cols[index]>0);const filteredMatrix=matrix.map(row=>row.filter((_,colIndex)=>totals.cols[colIndex]>0));const filteredTotalsCols=totals.cols.filter(total=>total>0);// Get the number of days in the month for proper column count\nconst daysInMonth=getDaysInMonth(currentMonth);return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Calendar,{className:\"h-5 w-5\"}),/*#__PURE__*/_jsx(\"span\",{children:format(currentMonth,'MMMM yyyy',{locale:es})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handlePreviousMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handleCurrentMonth,disabled:currentMonth.getMonth()===new Date().getMonth()&&currentMonth.getFullYear()===new Date().getFullYear(),children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4 rotate-180\"})})]})]})}),/*#__PURE__*/_jsx(CardContent,{children:employees.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-32\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No hay datos para el mes seleccionado.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHead,{className:\"text-black font-bold sticky left-0 z-10 p-2\",children:\"Colaborador\"}),daysWithHours.map((day,index)=>/*#__PURE__*/_jsx(TableHead,{className:\"text-black font-bold text-center p-2\",children:parseInt(day.split('-')[2],10)},index)),/*#__PURE__*/_jsx(TableHead,{className:\"text-black font-bold text-center p-2\",children:\"Total\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:employees.map((employee,rowIndex)=>{var _filteredMatrix$rowIn,_totals$rows$rowIndex;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{className:\"font-medium sticky left-0 z-10 p-2\",children:employee.short_name}),(_filteredMatrix$rowIn=filteredMatrix[rowIndex])===null||_filteredMatrix$rowIn===void 0?void 0:_filteredMatrix$rowIn.map((hours,colIndex)=>/*#__PURE__*/_jsx(TableCell,{className:\"text-center p-2\",children:hours>0?hours.toFixed(1):''},colIndex)),/*#__PURE__*/_jsx(TableCell,{className:\"text-center font-bold p-2\",children:((_totals$rows$rowIndex=totals.rows[rowIndex])===null||_totals$rows$rowIndex===void 0?void 0:_totals$rows$rowIndex.toFixed(1))||'0.0'})]},employee.id);})}),/*#__PURE__*/_jsx(TableFooter,{children:/*#__PURE__*/_jsxs(TableRow,{className:\"font-bold\",children:[/*#__PURE__*/_jsx(TableCell,{className:\"text-right p-2\",children:\"Total\"}),filteredTotalsCols.map((total,index)=>/*#__PURE__*/_jsx(TableCell,{className:\"text-center p-2\",children:total.toFixed(1)},index)),/*#__PURE__*/_jsx(TableCell,{className:\"text-center p-2\",children:totals.rows.reduce((sum,rowTotal)=>sum+rowTotal,0).toFixed(1)})]})})]})})})]});}// Fallback in case we have no data and no error\nreturn/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:format(currentMonth,'MMMM yyyy',{locale:es})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handlePreviousMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4\"})}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",size:\"sm\",onClick:handleCurrentMonth,children:/*#__PURE__*/_jsx(ChevronLeft,{className:\"h-4 w-4 rotate-180\"})})]})]})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-32\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No hay datos disponibles.\"})})})]});};export default TablaHoras;","map":{"version":3,"names":["React","useState","useEffect","format","subMonths","getDaysInMonth","es","Card","CardContent","CardHeader","CardTitle","Button","ChevronLeft","Calendar","getGroupedHoursByEmployee","Table","TableBody","TableFooter","TableCell","TableHead","TableHeader","TableRow","jsx","_jsx","jsxs","_jsxs","TablaHoras","currentMonth","setCurrentMonth","Date","matrixData","setMatrixData","loading","setLoading","error","setError","transformGroupedData","groupedData","employeesMap","Map","daysSet","Set","forEach","item","employeeId","parseInt","employee_id","has","set","id","name","short_name","add","date","employees","Array","from","values","sort","a","b","localeCompare","days","matrix","rowTotals","colTotals","length","fill","employee","rowIndex","row","rowTotal","day","colIndex","matchingItem","find","toString","hours","push","totals","rows","cols","fetchMatrixData","year","getFullYear","month","getMonth","transformedData","err","console","message","handlePreviousMonth","handleCurrentMonth","children","className","locale","variant","size","onClick","daysWithHours","filter","_","index","filteredMatrix","map","filteredTotalsCols","total","daysInMonth","disabled","split","_filteredMatrix$rowIn","_totals$rows$rowIndex","toFixed","reduce","sum"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/TablaHoras.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format, subMonths, startOfMonth, endOfMonth, getDaysInMonth } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport { ChevronLeft, Calendar } from 'lucide-react';\r\nimport { getGroupedHoursByEmployee } from '../api/horasApi';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableFooter,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from './ui/table';\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  short_name: string;\r\n}\r\n\r\ninterface GroupedHour {\r\n  date: string;\r\n  employee_id: string;\r\n  short_name: string;\r\n  hours: number;\r\n}\r\n\r\ninterface TransformedData {\r\n  employees: Employee[];\r\n  days: string[];\r\n  matrix: number[][];\r\n  totals: {\r\n    rows: number[];\r\n    cols: number[];\r\n  };\r\n}\r\n\r\nconst TablaHoras: React.FC = () => {\r\n  const [currentMonth, setCurrentMonth] = useState<Date>(new Date());\r\n  const [matrixData, setMatrixData] = useState<TransformedData | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Transform grouped data to matrix format\r\n  const transformGroupedData = (groupedData: GroupedHour[]): TransformedData => {\r\n    // Extract unique employees and days\r\n    const employeesMap = new Map<string, { id: number; name: string; short_name: string }>();\r\n    const daysSet = new Set<string>();\r\n    \r\n    groupedData.forEach(item => {\r\n      // Add employee to map\r\n      const employeeId = parseInt(item.employee_id, 10);\r\n      if (!employeesMap.has(item.employee_id)) {\r\n        employeesMap.set(item.employee_id, {\r\n          id: employeeId,\r\n          name: item.short_name, // Using short_name as name for display\r\n          short_name: item.short_name\r\n        });\r\n      }\r\n      \r\n      // Add day to set\r\n      daysSet.add(item.date);\r\n    });\r\n    \r\n    // Convert to arrays and sort\r\n    const employees = Array.from(employeesMap.values()).sort((a, b) => a.short_name.localeCompare(b.short_name));\r\n    const days = Array.from(daysSet).sort();\r\n    \r\n    // Create matrix\r\n    const matrix: number[][] = [];\r\n    const rowTotals: number[] = [];\r\n    const colTotals: number[] = Array(days.length).fill(0);\r\n    \r\n    employees.forEach((employee, rowIndex) => {\r\n      const row: number[] = Array(days.length).fill(0);\r\n      let rowTotal = 0;\r\n      \r\n      days.forEach((day, colIndex) => {\r\n        const matchingItem = groupedData.find(\r\n          item => item.employee_id === employee.id.toString() && item.date === day\r\n        );\r\n        \r\n        if (matchingItem) {\r\n          row[colIndex] = matchingItem.hours;\r\n          rowTotal += matchingItem.hours;\r\n          colTotals[colIndex] += matchingItem.hours;\r\n        }\r\n      });\r\n      \r\n      matrix.push(row);\r\n      rowTotals.push(rowTotal);\r\n    });\r\n    \r\n    return {\r\n      employees,\r\n      days,\r\n      matrix,\r\n      totals: {\r\n        rows: rowTotals,\r\n        cols: colTotals\r\n      }\r\n    };\r\n  };\r\n\r\n  // Fetch matrix data for the current month\r\n  useEffect(() => {\r\n    const fetchMatrixData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const year = currentMonth.getFullYear();\r\n        const month = currentMonth.getMonth() + 1; // getMonth() is zero-indexed\r\n        \r\n        const groupedData = await getGroupedHoursByEmployee(year, month);\r\n        const transformedData = transformGroupedData(groupedData);\r\n        \r\n        setMatrixData(transformedData);\r\n      } catch (err: any) {\r\n        console.error('Error fetching matrix data:', err);\r\n        setError(err.message || 'Error al cargar el reporte de horas');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMatrixData();\r\n  }, [currentMonth]);\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentMonth(subMonths(currentMonth, 1));\r\n  };\r\n\r\n  const handleCurrentMonth = () => {\r\n    setCurrentMonth(new Date());\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleCurrentMonth}>\r\n                <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-32\">\r\n            <p>Cargando datos...</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleCurrentMonth}>\r\n                <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-32 text-red-500\">\r\n            <p>{error}</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n   // If we have data, render the matrix table\r\n   if (matrixData) {\r\n     const { employees, days, matrix, totals } = matrixData;\r\n     \r\n     // Filter out days where no collaborator has hours\r\n     const daysWithHours = days.filter((_, index) => totals.cols[index] > 0);\r\n     const filteredMatrix = matrix.map(row =>\r\n       row.filter((_, colIndex) => totals.cols[colIndex] > 0)\r\n     );\r\n     const filteredTotalsCols = totals.cols.filter(total => total > 0);\r\n     \r\n     // Get the number of days in the month for proper column count\r\n     const daysInMonth = getDaysInMonth(currentMonth);\r\n     \r\n     return (\r\n       <Card>\r\n         <CardHeader>\r\n          <CardTitle className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Calendar className=\"h-5 w-5\" />\r\n              <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={handleCurrentMonth}\r\n                disabled={currentMonth.getMonth() === new Date().getMonth() &&\r\n                         currentMonth.getFullYear() === new Date().getFullYear()}\r\n              >\r\n                <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {employees.length === 0 ? (\r\n            <div className=\"flex items-center justify-center h-32\">\r\n              <p>No hay datos para el mes seleccionado.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead className=\"text-black font-bold sticky left-0 z-10 p-2\">Colaborador</TableHead>\r\n                    {daysWithHours.map((day, index) => (\r\n                      <TableHead key={index} className=\"text-black font-bold text-center p-2\">\r\n                        {parseInt(day.split('-')[2], 10)}\r\n                      </TableHead>\r\n                    ))}\r\n                    <TableHead className=\"text-black font-bold text-center p-2\">Total</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {employees.map((employee, rowIndex) => (\r\n                    <TableRow key={employee.id}>\r\n                      <TableCell className=\"font-medium sticky left-0 z-10 p-2\">\r\n                        {employee.short_name}\r\n                      </TableCell>\r\n                      {filteredMatrix[rowIndex]?.map((hours, colIndex) => (\r\n                        <TableCell key={colIndex} className=\"text-center p-2\">\r\n                          {hours > 0 ? hours.toFixed(1) : ''}\r\n                        </TableCell>\r\n                      ))}\r\n                      <TableCell className=\"text-center font-bold p-2\">\r\n                        {totals.rows[rowIndex]?.toFixed(1) || '0.0'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n                <TableFooter>\r\n                  <TableRow className=\"font-bold\">\r\n                    <TableCell className=\"text-right p-2\">Total</TableCell>\r\n                    {filteredTotalsCols.map((total, index) => (\r\n                      <TableCell key={index} className=\"text-center p-2\">\r\n                        {total.toFixed(1)}\r\n                      </TableCell>\r\n                    ))}\r\n                    <TableCell className=\"text-center p-2\">\r\n                      {totals.rows.reduce((sum, rowTotal) => sum + rowTotal, 0).toFixed(1)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableFooter>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  // Fallback in case we have no data and no error\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center justify-between\">\r\n          <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={handleCurrentMonth}>\r\n              <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n            </Button>\r\n          </div>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"flex items-center justify-center h-32\">\r\n          <p>No hay datos disponibles.</p>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TablaHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}