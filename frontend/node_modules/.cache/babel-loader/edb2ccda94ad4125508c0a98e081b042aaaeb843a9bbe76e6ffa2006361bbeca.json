{"ast":null,"code":"/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n  let {\n    startMonth,\n    endMonth\n  } = props;\n  const {\n    startOfYear,\n    startOfDay,\n    startOfMonth,\n    endOfMonth,\n    addYears,\n    endOfYear,\n    newDate,\n    today\n  } = dateLib;\n  // Handle deprecated code\n  const {\n    fromYear,\n    toYear,\n    fromMonth,\n    toMonth\n  } = props;\n  if (!startMonth && fromMonth) {\n    startMonth = fromMonth;\n  }\n  if (!startMonth && fromYear) {\n    startMonth = dateLib.newDate(fromYear, 0, 1);\n  }\n  if (!endMonth && toMonth) {\n    endMonth = toMonth;\n  }\n  if (!endMonth && toYear) {\n    endMonth = newDate(toYear, 11, 31);\n  }\n  const hasYearDropdown = props.captionLayout === \"dropdown\" || props.captionLayout === \"dropdown-years\";\n  if (startMonth) {\n    startMonth = startOfMonth(startMonth);\n  } else if (fromYear) {\n    startMonth = newDate(fromYear, 0, 1);\n  } else if (!startMonth && hasYearDropdown) {\n    var _props$today;\n    startMonth = startOfYear(addYears((_props$today = props.today) !== null && _props$today !== void 0 ? _props$today : today(), -100));\n  }\n  if (endMonth) {\n    endMonth = endOfMonth(endMonth);\n  } else if (toYear) {\n    endMonth = newDate(toYear, 11, 31);\n  } else if (!endMonth && hasYearDropdown) {\n    var _props$today2;\n    endMonth = endOfYear((_props$today2 = props.today) !== null && _props$today2 !== void 0 ? _props$today2 : today());\n  }\n  return [startMonth ? startOfDay(startMonth) : startMonth, endMonth ? startOfDay(endMonth) : endMonth];\n}","map":{"version":3,"names":["getNavMonths","props","dateLib","startMonth","endMonth","startOfYear","startOfDay","startOfMonth","endOfMonth","addYears","endOfYear","newDate","today","fromYear","toYear","fromMonth","toMonth","hasYearDropdown","captionLayout","_props$today","_props$today2"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js"],"sourcesContent":["/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today, } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth,\n    ];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,KAAK,EAAEC,OAAO,EAAE;EACzC,IAAI;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGH,KAAK;EACpC,MAAM;IAAEI,WAAW;IAAEC,UAAU;IAAEC,YAAY;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGV,OAAO;EAC3G;EACA,MAAM;IAAEW,QAAQ;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGf,KAAK;EACtD,IAAI,CAACE,UAAU,IAAIY,SAAS,EAAE;IAC1BZ,UAAU,GAAGY,SAAS;EAC1B;EACA,IAAI,CAACZ,UAAU,IAAIU,QAAQ,EAAE;IACzBV,UAAU,GAAGD,OAAO,CAACS,OAAO,CAACE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;EAChD;EACA,IAAI,CAACT,QAAQ,IAAIY,OAAO,EAAE;IACtBZ,QAAQ,GAAGY,OAAO;EACtB;EACA,IAAI,CAACZ,QAAQ,IAAIU,MAAM,EAAE;IACrBV,QAAQ,GAAGO,OAAO,CAACG,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;EACtC;EACA,MAAMG,eAAe,GAAGhB,KAAK,CAACiB,aAAa,KAAK,UAAU,IACtDjB,KAAK,CAACiB,aAAa,KAAK,gBAAgB;EAC5C,IAAIf,UAAU,EAAE;IACZA,UAAU,GAAGI,YAAY,CAACJ,UAAU,CAAC;EACzC,CAAC,MACI,IAAIU,QAAQ,EAAE;IACfV,UAAU,GAAGQ,OAAO,CAACE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;EACxC,CAAC,MACI,IAAI,CAACV,UAAU,IAAIc,eAAe,EAAE;IAAA,IAAAE,YAAA;IACrChB,UAAU,GAAGE,WAAW,CAACI,QAAQ,EAAAU,YAAA,GAAClB,KAAK,CAACW,KAAK,cAAAO,YAAA,cAAAA,YAAA,GAAIP,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;EACpE;EACA,IAAIR,QAAQ,EAAE;IACVA,QAAQ,GAAGI,UAAU,CAACJ,QAAQ,CAAC;EACnC,CAAC,MACI,IAAIU,MAAM,EAAE;IACbV,QAAQ,GAAGO,OAAO,CAACG,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;EACtC,CAAC,MACI,IAAI,CAACV,QAAQ,IAAIa,eAAe,EAAE;IAAA,IAAAG,aAAA;IACnChB,QAAQ,GAAGM,SAAS,EAAAU,aAAA,GAACnB,KAAK,CAACW,KAAK,cAAAQ,aAAA,cAAAA,aAAA,GAAIR,KAAK,CAAC,CAAC,CAAC;EAChD;EACA,OAAO,CACHT,UAAU,GAAGG,UAAU,CAACH,UAAU,CAAC,GAAGA,UAAU,EAChDC,QAAQ,GAAGE,UAAU,CAACF,QAAQ,CAAC,GAAGA,QAAQ,CAC7C;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}