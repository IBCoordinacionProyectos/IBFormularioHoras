{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\formulario\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { toast } from 'sonner';\nimport { Card, Button } from '@/components/ui';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { cn } from '@/lib/utils';\nimport { ActivityForm } from './components/ActivityForm';\nimport { ActivityList } from './components/ActivityList';\nimport { useFormData } from './hooks/useFormData';\nimport { useActivities } from './hooks/useActivities';\nimport { useProjectData } from './hooks/useProjectData';\nimport { submitHours, updateHour } from '../../api/horasApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormularioHoras = ({\n  onSuccess,\n  employeeId,\n  employeeName,\n  onLogout\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleDateChange = date => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  // Estado y lógica del formulario\n  const {\n    formData,\n    editingActivityId,\n    setFormData,\n    setEditingActivityId,\n    handleChange,\n    resetForm,\n    handleEditActivity\n  } = useFormData(employeeId);\n\n  // Estado y lógica de las actividades\n  const {\n    dailyActivities,\n    loading: activitiesLoading,\n    refreshDailyActivities,\n    handleDelete\n  } = useActivities(employeeId, selectedDate, [formData]);\n\n  // Estado y lógica de los datos del proyecto\n  const {\n    projects,\n    stages,\n    disciplines,\n    activities,\n    loading: projectDataLoading,\n    fetchProjects,\n    fetchStages,\n    fetchDisciplines,\n    fetchActivities\n  } = useProjectData();\n\n  // Estado de carga para el formulario\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Estado combinado de carga\n  const loading = {\n    ...projectDataLoading,\n    submit: isSubmitting || projectDataLoading.activities || activitiesLoading.dailyActivities,\n    delete: activitiesLoading.delete\n  };\n\n  // Cargar proyectos al montar el componente\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n\n  // Efecto para manejar la edición de actividades\n  useEffect(() => {\n    if (!editingActivityId) return;\n    const activity = dailyActivities.find(a => a.id === editingActivityId);\n    if (!activity) return;\n    console.log('Encontrada actividad para editar:', activity);\n\n    // Actualizamos el formulario con los valores de la actividad\n    handleEditActivity(activity);\n\n    // Cargamos los datos necesarios sin mostrar indicadores de carga\n    if (activity.project_code) {\n      // Cargar etapas si no están ya cargadas\n      if (stages.length === 0) {\n        fetchStages(activity.project_code);\n      }\n\n      // Cargar disciplinas si no están ya cargadas\n      if (activity.phase && disciplines.length === 0) {\n        fetchDisciplines(activity.project_code, activity.phase);\n      }\n\n      // Cargar actividades si no están ya cargadas\n      if (activity.phase && activity.discipline) {\n        fetchActivities(activity.project_code, activity.phase, activity.discipline);\n      }\n    }\n  }, [editingActivityId, dailyActivities, handleEditActivity, fetchStages, fetchDisciplines, fetchActivities, stages.length, disciplines.length]);\n\n  // Manejar cambios en los selectores\n  const handleProjectSelect = useCallback(projectCode => {\n    setFormData(prev => ({\n      ...prev,\n      project_code: projectCode,\n      phase: '',\n      discipline: '',\n      activity: ''\n    }));\n\n    // Cargar etapas sin mostrar indicador de carga si no están ya cargadas\n    if (stages.length === 0 || stages[0] !== projectCode) {\n      fetchStages(projectCode);\n    }\n  }, [stages, fetchStages]);\n  const handleStageSelect = useCallback(stage => {\n    setFormData(prev => ({\n      ...prev,\n      phase: stage,\n      discipline: '',\n      activity: ''\n    }));\n\n    // Cargar disciplinas sin mostrar indicador de carga si no están ya cargadas\n    if (formData.project_code && (disciplines.length === 0 || disciplines[0] !== stage)) {\n      fetchDisciplines(formData.project_code, stage);\n    }\n  }, [formData.project_code, disciplines, fetchDisciplines]);\n  const handleDisciplineSelect = useCallback(discipline => {\n    setFormData(prev => ({\n      ...prev,\n      discipline,\n      activity: ''\n    }));\n\n    // Cargar actividades sin mostrar indicador de carga si no están ya cargadas\n    if (formData.project_code && formData.phase) {\n      fetchActivities(formData.project_code, formData.phase, discipline);\n    }\n  }, [formData.project_code, formData.phase, fetchActivities]);\n  const handleActivitySelect = useCallback(activity => {\n    // Actualizamos la actividad en el formulario\n    setFormData(prev => ({\n      ...prev,\n      activity\n    }));\n\n    // Si estamos editando, actualizamos el estado de edición\n    // para reflejar que el usuario ha realizado un cambio manual\n    if (editingActivityId) {\n      setEditingActivityId(null);\n    }\n  }, [setFormData, editingActivityId, setEditingActivityId]);\n\n  // Validar el formulario antes de guardar/actualizar\n  const validateForm = useCallback(() => {\n    // Validar campos requeridos\n    if (!formData.project_code || !formData.phase || !formData.discipline || !formData.activity || !formData.hours) {\n      toast.error('Por favor complete todos los campos requeridos.', {\n        duration: 3000\n      });\n      return false;\n    }\n\n    // Validar formato de horas\n    const hoursValue = parseFloat(formData.hours.replace(',', '.'));\n    if (isNaN(hoursValue) || hoursValue <= 0) {\n      toast.error('Por favor ingrese un número válido de horas.', {\n        duration: 3000\n      });\n      return false;\n    }\n    return {\n      hoursValue\n    };\n  }, [formData]);\n\n  // Crear una nueva actividad\n  const handleCreateActivity = useCallback(async e => {\n    e.preventDefault();\n    const validation = validateForm();\n    if (!validation) return;\n    const {\n      hoursValue\n    } = validation;\n    setIsSubmitting(true);\n    try {\n      const activityData = {\n        ...formData,\n        hours: hoursValue,\n        date: format(selectedDate, 'yyyy-MM-dd')\n      };\n      console.log('Creando nueva actividad con datos:', activityData);\n      await submitHours(activityData);\n      toast.success('Actividad guardada correctamente', {\n        duration: 3000\n      });\n\n      // Actualizar la lista de actividades\n      await refreshDailyActivities(selectedDate, String(employeeId));\n\n      // Limpiar el formulario\n      resetForm();\n      if (onSuccess) onSuccess();\n    } catch (error) {\n      console.error('Error al guardar la actividad:', error);\n      toast.error('Error al guardar la actividad. Por favor, intente nuevamente.', {\n        duration: 4000\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [formData, selectedDate, employeeId, onSuccess, refreshDailyActivities, resetForm, validateForm]);\n\n  // Actualizar una actividad existente\n  const handleUpdateActivity = useCallback(async e => {\n    e.preventDefault();\n    if (!editingActivityId) return;\n    const validation = validateForm();\n    if (!validation) return;\n    const {\n      hoursValue\n    } = validation;\n    setIsSubmitting(true);\n    try {\n      const activityData = {\n        ...formData,\n        hours: hoursValue,\n        date: format(selectedDate, 'yyyy-MM-dd')\n      };\n      console.log('Actualizando actividad con ID:', editingActivityId, 'y datos:', activityData);\n      await updateHour(editingActivityId, activityData);\n      toast.success('Actividad actualizada correctamente', {\n        duration: 3000\n      });\n\n      // Actualizar la lista de actividades\n      await refreshDailyActivities(selectedDate, String(employeeId));\n\n      // Limpiar el formulario\n      resetForm();\n      if (onSuccess) onSuccess();\n    } catch (error) {\n      console.error('Error al actualizar la actividad:', error);\n      toast.error('Error al actualizar la actividad. Por favor, intente nuevamente.', {\n        duration: 4000\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [formData, selectedDate, editingActivityId, employeeId, onSuccess, refreshDailyActivities, resetForm, validateForm]);\n\n  // Manejar el envío del formulario (selecciona la acción correcta)\n  const handleSubmit = useCallback(e => {\n    if (editingActivityId) {\n      return handleUpdateActivity(e);\n    } else {\n      return handleCreateActivity(e);\n    }\n  }, [editingActivityId, handleUpdateActivity, handleCreateActivity]);\n\n  // Manejadores de eventos para los campos del formulario\n  const handleHoursChange = useCallback(e => {\n    handleChange(e);\n  }, [handleChange]);\n  const handleNoteChange = useCallback(e => {\n    handleChange(e);\n  }, [handleChange]);\n\n  // Manejar tecla Enter en el textarea de notas\n  const handleNoteKeyDown = useCallback(e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n    }\n  }, []);\n\n  // Calcular total de horas del día\n  const totalHoursToday = useMemo(() => dailyActivities.reduce((sum, a) => sum + a.hours, 0), [dailyActivities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-gray-900\",\n            children: \"Registro de Horas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: format(selectedDate, \"EEEE, d 'de' MMMM 'de' yyyy\", {\n              locale: es\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(Popover, {\n            children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n              asChild: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline\",\n                className: cn('w-[240px] justify-start text-left font-normal', !selectedDate && 'text-muted-foreground'),\n                children: format(selectedDate, 'PPP', {\n                  locale: es\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n              className: \"w-auto p-0\",\n              align: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Calendar, {\n                mode: \"single\",\n                selected: selectedDate,\n                onSelect: date => date && handleDateChange(date),\n                initialFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            onClick: onLogout,\n            children: \"Cerrar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium text-gray-900 mb-2\",\n          children: \"Resumen del d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium text-gray-500\",\n            children: \"Total de horas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-semibold\",\n            children: [totalHoursToday.toFixed(2), \" hrs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: editingActivityId ? 'Editar Actividad' : 'Registrar Actividad'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActivityForm, {\n          formData: formData,\n          projects: projects,\n          stages: stages,\n          disciplines: disciplines,\n          activities: activities,\n          loading: loading,\n          onProjectSelect: handleProjectSelect,\n          onStageSelect: handleStageSelect,\n          onDisciplineSelect: handleDisciplineSelect,\n          onActivitySelect: handleActivitySelect,\n          onHoursChange: handleHoursChange,\n          onNoteChange: handleNoteChange,\n          onNoteKeyDown: handleNoteKeyDown,\n          onSave: handleCreateActivity,\n          onUpdate: handleUpdateActivity,\n          onCancel: resetForm,\n          isEditing: !!editingActivityId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Actividades registradas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActivityList, {\n          activities: dailyActivities,\n          loading: activitiesLoading.dailyActivities,\n          selectedDate: selectedDate,\n          onEdit: handleEditActivity,\n          onDelete: handleDelete,\n          deleteLoadingId: activitiesLoading.delete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(FormularioHoras, \"XzpyW+ddynje83nWLr5uGpkO8wM=\", false, function () {\n  return [useFormData, useActivities, useProjectData];\n});\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","format","es","toast","Card","Button","Calendar","Popover","PopoverContent","PopoverTrigger","cn","ActivityForm","ActivityList","useFormData","useActivities","useProjectData","submitHours","updateHour","jsxDEV","_jsxDEV","FormularioHoras","onSuccess","employeeId","employeeName","onLogout","_s","selectedDate","setSelectedDate","Date","handleDateChange","date","formData","editingActivityId","setFormData","setEditingActivityId","handleChange","resetForm","handleEditActivity","dailyActivities","loading","activitiesLoading","refreshDailyActivities","handleDelete","projects","stages","disciplines","activities","projectDataLoading","fetchProjects","fetchStages","fetchDisciplines","fetchActivities","isSubmitting","setIsSubmitting","submit","delete","activity","find","a","id","console","log","project_code","length","phase","discipline","handleProjectSelect","projectCode","prev","handleStageSelect","stage","handleDisciplineSelect","handleActivitySelect","validateForm","hours","error","duration","hoursValue","parseFloat","replace","isNaN","handleCreateActivity","e","preventDefault","validation","activityData","success","String","handleUpdateActivity","handleSubmit","handleHoursChange","handleNoteChange","handleNoteKeyDown","key","shiftKey","totalHoursToday","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","locale","asChild","variant","align","mode","selected","onSelect","initialFocus","onClick","toFixed","onProjectSelect","onStageSelect","onDisciplineSelect","onActivitySelect","onHoursChange","onNoteChange","onNoteKeyDown","onSave","onUpdate","onCancel","isEditing","onEdit","onDelete","deleteLoadingId","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/formulario/FormularioHoras.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { toast } from 'sonner';\nimport { Card, Button } from '@/components/ui';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { cn } from '@/lib/utils';\nimport { ActivityForm } from './components/ActivityForm';\nimport { ActivityList } from './components/ActivityList';\nimport { useFormData } from './hooks/useFormData';\nimport { useActivities } from './hooks/useActivities';\nimport { useProjectData } from './hooks/useProjectData';\nimport { submitHours, updateHour } from '../../api/horasApi';\nimport { Activity, FormularioHorasProps } from './types';\n\nexport const FormularioHoras: React.FC<FormularioHorasProps> = ({\n  onSuccess,\n  employeeId,\n  employeeName,\n  onLogout,\n}) => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  \n  const handleDateChange = (date: Date | undefined) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  // Estado y lógica del formulario\n  const {\n    formData,\n    editingActivityId,\n    setFormData,\n    setEditingActivityId,\n    handleChange,\n    resetForm,\n    handleEditActivity,\n  } = useFormData(employeeId);\n\n  // Estado y lógica de las actividades\n  const {\n    dailyActivities,\n    loading: activitiesLoading,\n    refreshDailyActivities,\n    handleDelete,\n  } = useActivities(employeeId, selectedDate, [formData]);\n\n  // Estado y lógica de los datos del proyecto\n  const {\n    projects,\n    stages,\n    disciplines,\n    activities,\n    loading: projectDataLoading,\n    fetchProjects,\n    fetchStages,\n    fetchDisciplines,\n    fetchActivities,\n  } = useProjectData();\n\n  // Estado de carga para el formulario\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Estado combinado de carga\n  const loading = {\n    ...projectDataLoading,\n    submit: isSubmitting || projectDataLoading.activities || activitiesLoading.dailyActivities,\n    delete: activitiesLoading.delete,\n  };\n\n  // Cargar proyectos al montar el componente\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n\n  // Efecto para manejar la edición de actividades\n  useEffect(() => {\n    if (!editingActivityId) return;\n    \n    const activity = dailyActivities.find(a => a.id === editingActivityId);\n    if (!activity) return;\n    \n    console.log('Encontrada actividad para editar:', activity);\n    \n    // Actualizamos el formulario con los valores de la actividad\n    handleEditActivity(activity);\n    \n    // Cargamos los datos necesarios sin mostrar indicadores de carga\n    if (activity.project_code) {\n      // Cargar etapas si no están ya cargadas\n      if (stages.length === 0) {\n        fetchStages(activity.project_code);\n      }\n      \n      // Cargar disciplinas si no están ya cargadas\n      if (activity.phase && disciplines.length === 0) {\n        fetchDisciplines(activity.project_code, activity.phase);\n      }\n      \n      // Cargar actividades si no están ya cargadas\n      if (activity.phase && activity.discipline) {\n        fetchActivities(\n          activity.project_code,\n          activity.phase,\n          activity.discipline\n        );\n      }\n    }\n  }, [editingActivityId, dailyActivities, handleEditActivity, fetchStages, fetchDisciplines, fetchActivities, stages.length, disciplines.length]);\n  \n  // Manejar cambios en los selectores\n  const handleProjectSelect = useCallback(\n    (projectCode: string) => {\n      setFormData(prev => ({\n        ...prev,\n        project_code: projectCode,\n        phase: '',\n        discipline: '',\n        activity: '',\n      }));\n      \n      // Cargar etapas sin mostrar indicador de carga si no están ya cargadas\n      if (stages.length === 0 || stages[0] !== projectCode) {\n        fetchStages(projectCode);\n      }\n    },\n    [stages, fetchStages]\n  );\n\n  const handleStageSelect = useCallback(\n    (stage: string) => {\n      setFormData(prev => ({\n        ...prev,\n        phase: stage,\n        discipline: '',\n        activity: '',\n      }));\n      \n      // Cargar disciplinas sin mostrar indicador de carga si no están ya cargadas\n      if (formData.project_code && (disciplines.length === 0 || disciplines[0] !== stage)) {\n        fetchDisciplines(formData.project_code, stage);\n      }\n    },\n    [formData.project_code, disciplines, fetchDisciplines]\n  );\n\n  const handleDisciplineSelect = useCallback(\n    (discipline: string) => {\n      setFormData(prev => ({\n        ...prev,\n        discipline,\n        activity: '',\n      }));\n      \n      // Cargar actividades sin mostrar indicador de carga si no están ya cargadas\n      if (formData.project_code && formData.phase) {\n        fetchActivities(formData.project_code, formData.phase, discipline);\n      }\n    },\n    [formData.project_code, formData.phase, fetchActivities]\n  );\n\n  const handleActivitySelect = useCallback(\n    (activity: string) => {\n      // Actualizamos la actividad en el formulario\n      setFormData(prev => ({\n        ...prev,\n        activity,\n      }));\n      \n      // Si estamos editando, actualizamos el estado de edición\n      // para reflejar que el usuario ha realizado un cambio manual\n      if (editingActivityId) {\n        setEditingActivityId(null);\n      }\n    },\n    [setFormData, editingActivityId, setEditingActivityId]\n  );\n\n  // Validar el formulario antes de guardar/actualizar\n  const validateForm = useCallback(() => {\n    // Validar campos requeridos\n    if (!formData.project_code || !formData.phase || !formData.discipline || !formData.activity || !formData.hours) {\n      toast.error('Por favor complete todos los campos requeridos.', { duration: 3000 });\n      return false;\n    }\n\n    // Validar formato de horas\n    const hoursValue = parseFloat(formData.hours.replace(',', '.'));\n    if (isNaN(hoursValue) || hoursValue <= 0) {\n      toast.error('Por favor ingrese un número válido de horas.', { duration: 3000 });\n      return false;\n    }\n    \n    return { hoursValue };\n  }, [formData]);\n\n  // Crear una nueva actividad\n  const handleCreateActivity = useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n      \n      const validation = validateForm();\n      if (!validation) return;\n      const { hoursValue } = validation;\n      \n      setIsSubmitting(true);\n      \n      try {\n        const activityData = {\n          ...formData,\n          hours: hoursValue,\n          date: format(selectedDate, 'yyyy-MM-dd'),\n        };\n        \n        console.log('Creando nueva actividad con datos:', activityData);\n        await submitHours(activityData);\n        toast.success('Actividad guardada correctamente', { duration: 3000 });\n        \n        // Actualizar la lista de actividades\n        await refreshDailyActivities(selectedDate, String(employeeId));\n        \n        // Limpiar el formulario\n        resetForm();\n        \n        if (onSuccess) onSuccess();\n        \n      } catch (error) {\n        console.error('Error al guardar la actividad:', error);\n        toast.error('Error al guardar la actividad. Por favor, intente nuevamente.', { \n          duration: 4000,\n        });\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [formData, selectedDate, employeeId, onSuccess, refreshDailyActivities, resetForm, validateForm]\n  );\n\n  // Actualizar una actividad existente\n  const handleUpdateActivity = useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n      \n      if (!editingActivityId) return;\n      \n      const validation = validateForm();\n      if (!validation) return;\n      const { hoursValue } = validation;\n      \n      setIsSubmitting(true);\n      \n      try {\n        const activityData = {\n          ...formData,\n          hours: hoursValue,\n          date: format(selectedDate, 'yyyy-MM-dd'),\n        };\n        \n        console.log('Actualizando actividad con ID:', editingActivityId, 'y datos:', activityData);\n        await updateHour(editingActivityId, activityData);\n        toast.success('Actividad actualizada correctamente', { duration: 3000 });\n        \n        // Actualizar la lista de actividades\n        await refreshDailyActivities(selectedDate, String(employeeId));\n        \n        // Limpiar el formulario\n        resetForm();\n        \n        if (onSuccess) onSuccess();\n        \n      } catch (error) {\n        console.error('Error al actualizar la actividad:', error);\n        toast.error('Error al actualizar la actividad. Por favor, intente nuevamente.', { \n          duration: 4000,\n        });\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [formData, selectedDate, editingActivityId, employeeId, onSuccess, refreshDailyActivities, resetForm, validateForm]\n  );\n  \n  // Manejar el envío del formulario (selecciona la acción correcta)\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (editingActivityId) {\n        return handleUpdateActivity(e);\n      } else {\n        return handleCreateActivity(e);\n      }\n    },\n    [editingActivityId, handleUpdateActivity, handleCreateActivity]\n  );\n\n  // Manejadores de eventos para los campos del formulario\n  const handleHoursChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(e);\n  }, [handleChange]);\n\n  const handleNoteChange = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    handleChange(e);\n  }, [handleChange]);\n\n  // Manejar tecla Enter en el textarea de notas\n  const handleNoteKeyDown = useCallback((e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n    }\n  }, []);\n\n  // Calcular total de horas del día\n  const totalHoursToday = useMemo(\n    () => dailyActivities.reduce((sum, a) => sum + a.hours, 0),\n    [dailyActivities]\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        {/* Encabezado */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Registro de Horas</h1>\n            <p className=\"text-sm text-gray-500\">\n              {format(selectedDate, \"EEEE, d 'de' MMMM 'de' yyyy\", { locale: es })}\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Popover>\n              <PopoverTrigger asChild>\n                <Button\n                  variant=\"outline\"\n                  className={cn(\n                    'w-[240px] justify-start text-left font-normal',\n                    !selectedDate && 'text-muted-foreground'\n                  )}\n                >\n                  {format(selectedDate, 'PPP', { locale: es })}\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                <Calendar\n                  mode=\"single\"\n                  selected={selectedDate}\n                  onSelect={(date) => date && handleDateChange(date)}\n                  initialFocus\n                />\n              </PopoverContent>\n            </Popover>\n            <Button variant=\"outline\" onClick={onLogout}>\n              Cerrar Sesión\n            </Button>\n          </div>\n        </div>\n\n        {/* Resumen de horas */}\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-2\">Resumen del día</h2>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium text-gray-500\">Total de horas:</span>\n            <span className=\"text-lg font-semibold\">{totalHoursToday.toFixed(2)} hrs</span>\n          </div>\n        </div>\n\n        {/* Formulario */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">\n            {editingActivityId ? 'Editar Actividad' : 'Registrar Actividad'}\n          </h2>\n          <ActivityForm\n            formData={formData}\n            projects={projects}\n            stages={stages}\n            disciplines={disciplines}\n            activities={activities}\n            loading={loading}\n            onProjectSelect={handleProjectSelect}\n            onStageSelect={handleStageSelect}\n            onDisciplineSelect={handleDisciplineSelect}\n            onActivitySelect={handleActivitySelect}\n            onHoursChange={handleHoursChange}\n            onNoteChange={handleNoteChange}\n            onNoteKeyDown={handleNoteKeyDown}\n            onSave={handleCreateActivity}\n            onUpdate={handleUpdateActivity}\n            onCancel={resetForm}\n            isEditing={!!editingActivityId}\n          />\n        </Card>\n\n        {/* Lista de actividades */}\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h2 className=\"text-xl font-semibold mb-4\">Actividades registradas</h2>\n          <ActivityList\n            activities={dailyActivities}\n            loading={activitiesLoading.dailyActivities}\n            selectedDate={selectedDate}\n            onEdit={handleEditActivity}\n            onDelete={handleDelete}\n            deleteLoadingId={activitiesLoading.delete}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormularioHoras;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}