{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\formulario\\\\TotalHoursProgress.tsx\";\nimport React from 'react';\nimport { getDay } from 'date-fns';\nimport { Progress } from '../ui/progress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TotalHoursProgress = ({\n  totalHours,\n  selectedDate\n}) => {\n  const dayOfWeek = getDay(selectedDate); // Domingo = 0, Lunes = 1, ..., Sábado = 6\n  const maxHours = dayOfWeek === 5 ? 8 : 9; // Viernes es 8, el resto 9\n\n  const progress = totalHours > 0 ? Math.min(totalHours / maxHours * 100, 100) : 0;\n  const remainingHours = maxHours - totalHours;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-primary/5 p-4 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-medium\",\n        children: \"Horas trabajadas hoy:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-semibold\",\n        children: [totalHours.toFixed(1), \" / \", maxHours.toFixed(1), \" horas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      value: progress,\n      className: \"h-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-muted-foreground mt-2\",\n      children: totalHours < maxHours ? `Faltan ${remainingHours.toFixed(1)} horas para completar la jornada.` : '¡Jornada completa! Buen trabajo.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = TotalHoursProgress;\nvar _c;\n$RefreshReg$(_c, \"TotalHoursProgress\");","map":{"version":3,"names":["React","getDay","Progress","jsxDEV","_jsxDEV","TotalHoursProgress","totalHours","selectedDate","dayOfWeek","maxHours","progress","Math","min","remainingHours","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","value","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/formulario/TotalHoursProgress.tsx"],"sourcesContent":["import React from 'react';\r\nimport { getDay } from 'date-fns';\r\nimport { Progress } from '../ui/progress';\r\n\r\ninterface TotalHoursProgressProps {\r\n    totalHours: number;\r\n    selectedDate: Date;\r\n}\r\n\r\nexport const TotalHoursProgress: React.FC<TotalHoursProgressProps> = ({ totalHours, selectedDate }) => {\r\n    const dayOfWeek = getDay(selectedDate); // Domingo = 0, Lunes = 1, ..., Sábado = 6\r\n    const maxHours = (dayOfWeek === 5) ? 8 : 9; // Viernes es 8, el resto 9\r\n\r\n    const progress = totalHours > 0 ? Math.min((totalHours / maxHours) * 100, 100) : 0;\r\n    const remainingHours = maxHours - totalHours;\r\n\r\n    return (\r\n        <div className=\"bg-primary/5 p-4 rounded-lg\">\r\n            <div className=\"flex items-center justify-between mb-1\">\r\n                <span className=\"text-sm font-medium\">Horas trabajadas hoy:</span>\r\n                <span className=\"text-sm font-semibold\">{totalHours.toFixed(1)} / {maxHours.toFixed(1)} horas</span>\r\n            </div>\r\n            <Progress value={progress} className=\"h-2\" />\r\n            <p className=\"text-xs text-muted-foreground mt-2\">\r\n                {totalHours < maxHours\r\n                    ? `Faltan ${remainingHours.toFixed(1)} horas para completar la jornada.`\r\n                    : '¡Jornada completa! Buen trabajo.'}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1C,OAAO,MAAMC,kBAAqD,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EACnG,MAAMC,SAAS,GAAGP,MAAM,CAACM,YAAY,CAAC,CAAC,CAAC;EACxC,MAAME,QAAQ,GAAID,SAAS,KAAK,CAAC,GAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE5C,MAAME,QAAQ,GAAGJ,UAAU,GAAG,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAEN,UAAU,GAAGG,QAAQ,GAAI,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC;EAClF,MAAMI,cAAc,GAAGJ,QAAQ,GAAGH,UAAU;EAE5C,oBACIF,OAAA;IAAKU,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBACxCX,OAAA;MAAKU,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACnDX,OAAA;QAAMU,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClEf,OAAA;QAAMU,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAET,UAAU,CAACc,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG,EAACX,QAAQ,CAACW,OAAO,CAAC,CAAC,CAAC,EAAC,QAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC,eACNf,OAAA,CAACF,QAAQ;MAACmB,KAAK,EAAEX,QAAS;MAACI,SAAS,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7Cf,OAAA;MAAGU,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAC5CT,UAAU,GAAGG,QAAQ,GAChB,UAAUI,cAAc,CAACO,OAAO,CAAC,CAAC,CAAC,mCAAmC,GACtE;IAAkC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACG,EAAA,GArBWjB,kBAAqD;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}