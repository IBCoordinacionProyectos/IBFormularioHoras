{"ast":null,"code":"var _process$env$REACT_AP;\n// src/api/horasApi.ts\nimport axios from 'axios';\n\n/** Ajusta la URL si tu backend usa otra ruta */\nconst api = axios.create({\n  baseURL: (_process$env$REACT_AP = process.env.REACT_APP_API_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n/* ===================== Auth helpers ===================== */\nexport function setAuthToken(token) {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n}\n(function loadTokenFromStorage() {\n  try {\n    const token = localStorage.getItem('token');\n    if (token) setAuthToken(token);\n  } catch {\n    // noop\n  }\n})();\n\n/* ===================== Tipos ===================== */\n\n/* ===================== Auth API ===================== */\n/** Ajusta endpoint/shape seg칰n tu backend */\nasync function doLogin(payload) {\n  var _ref, _res$data$token, _res$data, _res$data2, _res$data3, _res$data3$data, _ref2, _res$data$user, _res$data4, _res$data5, _res$data5$data;\n  // 游대 Cambia la ruta si tu back usa otra (p. ej. '/login' o '/auth/sign-in')\n  const res = await api.post('/auth/login', payload);\n\n  // 游대 Ajusta la forma del token si es distinta\n  const token = (_ref = (_res$data$token = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token) !== null && _res$data$token !== void 0 ? _res$data$token : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.access_token) !== null && _ref !== void 0 ? _ref : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$data = _res$data3.data) === null || _res$data3$data === void 0 ? void 0 : _res$data3$data.token;\n  if (!token) throw new Error('No se recibi칩 token del servidor');\n  const user = (_ref2 = (_res$data$user = (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.user) !== null && _res$data$user !== void 0 ? _res$data$user : (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : (_res$data5$data = _res$data5.data) === null || _res$data5$data === void 0 ? void 0 : _res$data5$data.user) !== null && _ref2 !== void 0 ? _ref2 : null;\n  localStorage.setItem('token', token);\n  if (user) localStorage.setItem('user', JSON.stringify(user));\n  setAuthToken(token);\n  return {\n    token,\n    user\n  };\n}\n\n/** Export oficial */\nexport async function login(payload) {\n  return doLogin(payload);\n}\n\n/** Alias para mantener compatibilidad con tu LoginPage */\nexport const loginUser = login;\nexport function logout() {\n  try {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  } catch {}\n  setAuthToken(null);\n}\n\n/* ===================== Horas API ===================== */\n/**\n * Crea o actualiza una hora.\n * - Si viene id -> PUT /hours/{id}\n * - Si no viene id -> POST /hours\n * (No env칤a \"id\" en el body)\n */\nexport async function submitHours(data) {\n  const {\n    id,\n    ...payload\n  } = data;\n  if (id != null) {\n    const res = await api.put(`/hours/${id}`, payload);\n    return res.data;\n  } else {\n    const res = await api.post('/hours', payload);\n    return res.data;\n  }\n}\nexport async function getProjects() {\n  const res = await api.get('/projects');\n  return res.data;\n}\nexport async function getProjectStages(projectCode) {\n  const res = await api.get(`/projects/${encodeURIComponent(projectCode)}/stages`);\n  return res.data;\n}\nexport async function getDisciplinesByStage(projectCode, stage) {\n  const res = await api.get(`/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines`);\n  return res.data;\n}\nexport async function getActivitiesByDiscipline(projectCode, stage, discipline) {\n  const res = await api.get(`/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines/${encodeURIComponent(discipline)}/activities`);\n  return res.data;\n}\nexport async function getDailyActivities(date, employee_id) {\n  // GET /hours?date=YYYY-MM-DD&employee_id=#\n  const res = await api.get('/hours', {\n    params: {\n      date,\n      employee_id\n    }\n  });\n  return res.data;\n}\nexport async function deleteHour(id) {\n  await api.delete(`/hours/${id}`);\n}","map":{"version":3,"names":["axios","api","create","baseURL","_process$env$REACT_AP","process","env","REACT_APP_API_URL","headers","setAuthToken","token","defaults","common","loadTokenFromStorage","localStorage","getItem","doLogin","payload","_ref","_res$data$token","_res$data","_res$data2","_res$data3","_res$data3$data","_ref2","_res$data$user","_res$data4","_res$data5","_res$data5$data","res","post","data","access_token","Error","user","setItem","JSON","stringify","login","loginUser","logout","removeItem","submitHours","id","put","getProjects","get","getProjectStages","projectCode","encodeURIComponent","getDisciplinesByStage","stage","getActivitiesByDiscipline","discipline","getDailyActivities","date","employee_id","params","deleteHour","delete"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\nimport axios from 'axios';\n\n/** Ajusta la URL si tu backend usa otra ruta */\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL ?? 'http://localhost:8000/api',\n  headers: { 'Content-Type': 'application/json' },\n});\n\n/* ===================== Auth helpers ===================== */\nexport function setAuthToken(token: string | null) {\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n}\n\n(function loadTokenFromStorage() {\n  try {\n    const token = localStorage.getItem('token');\n    if (token) setAuthToken(token);\n  } catch {\n    // noop\n  }\n})();\n\n/* ===================== Tipos ===================== */\nexport type Project = {\n  code: string;\n  name: string;\n};\n\nexport type Activity = {\n  id: number;\n  date: string; // yyyy-mm-dd\n  employee_id: number;\n  project_code: string;\n  project_name: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number;\n  note: string;\n};\n\nexport type HourPayload = {\n  id?: number;             // presente solo cuando editas\n  date: string;            // yyyy-mm-dd\n  employee_id: number;\n  project_code: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number;\n  note?: string;\n  project_name?: string;\n};\n\nexport type LoginPayload = {\n  email?: string;\n  username?: string;\n  password: string;\n};\n\nexport type LoginResult = {\n  token: string;\n  user: any | null;\n};\n\n/* ===================== Auth API ===================== */\n/** Ajusta endpoint/shape seg칰n tu backend */\nasync function doLogin(payload: LoginPayload): Promise<LoginResult> {\n  // 游대 Cambia la ruta si tu back usa otra (p. ej. '/login' o '/auth/sign-in')\n  const res = await api.post('/auth/login', payload);\n\n  // 游대 Ajusta la forma del token si es distinta\n  const token: string =\n    res.data?.token ?? res.data?.access_token ?? res.data?.data?.token;\n\n  if (!token) throw new Error('No se recibi칩 token del servidor');\n\n  const user = res.data?.user ?? res.data?.data?.user ?? null;\n\n  localStorage.setItem('token', token);\n  if (user) localStorage.setItem('user', JSON.stringify(user));\n  setAuthToken(token);\n\n  return { token, user };\n}\n\n/** Export oficial */\nexport async function login(payload: LoginPayload): Promise<LoginResult> {\n  return doLogin(payload);\n}\n\n/** Alias para mantener compatibilidad con tu LoginPage */\nexport const loginUser = login;\n\nexport function logout() {\n  try {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  } catch {}\n  setAuthToken(null);\n}\n\n/* ===================== Horas API ===================== */\n/**\n * Crea o actualiza una hora.\n * - Si viene id -> PUT /hours/{id}\n * - Si no viene id -> POST /hours\n * (No env칤a \"id\" en el body)\n */\nexport async function submitHours(data: HourPayload): Promise<Activity> {\n  const { id, ...payload } = data;\n\n  if (id != null) {\n    const res = await api.put<Activity>(`/hours/${id}`, payload);\n    return res.data;\n  } else {\n    const res = await api.post<Activity>('/hours', payload);\n    return res.data;\n  }\n}\n\nexport async function getProjects(): Promise<Project[]> {\n  const res = await api.get<Project[]>('/projects');\n  return res.data;\n}\n\nexport async function getProjectStages(projectCode: string): Promise<string[]> {\n  const res = await api.get<string[]>(\n    `/projects/${encodeURIComponent(projectCode)}/stages`\n  );\n  return res.data;\n}\n\nexport async function getDisciplinesByStage(\n  projectCode: string,\n  stage: string\n): Promise<string[]> {\n  const res = await api.get<string[]>(\n    `/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines`\n  );\n  return res.data;\n}\n\nexport async function getActivitiesByDiscipline(\n  projectCode: string,\n  stage: string,\n  discipline: string\n): Promise<string[]> {\n  const res = await api.get<string[]>(\n    `/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines/${encodeURIComponent(\n      discipline\n    )}/activities`\n  );\n  return res.data;\n}\n\nexport async function getDailyActivities(\n  date: string,\n  employee_id: number\n): Promise<Activity[]> {\n  // GET /hours?date=YYYY-MM-DD&employee_id=#\n  const res = await api.get<Activity[]>('/hours', {\n    params: { date, employee_id },\n  });\n  return res.data;\n}\n\nexport async function deleteHour(id: number): Promise<void> {\n  await api.delete(`/hours/${id}`);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}