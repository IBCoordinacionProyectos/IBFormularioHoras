{"ast":null,"code":"// src/api/horasApi.ts\nimport axios from 'axios';\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\n/* =========================\n   Tipos base (ajusta si quieres)\n   ========================= */\n\n/* =========================\n   Helpers\n   ========================= */\nconst normalizeHours = h => typeof h === 'string' ? parseFloat(h.replace(',', '.')) : h !== null && h !== void 0 ? h : 0;\n\n// Para creación (POST) - incluye date\nconst sanitizeCreate = data => {\n  var _data$project_code, _data$phase, _data$discipline, _data$activity, _data$hours, _data$date;\n  return {\n    project_code: String((_data$project_code = data.project_code) !== null && _data$project_code !== void 0 ? _data$project_code : ''),\n    phase: String((_data$phase = data.phase) !== null && _data$phase !== void 0 ? _data$phase : ''),\n    discipline: String((_data$discipline = data.discipline) !== null && _data$discipline !== void 0 ? _data$discipline : ''),\n    activity: String((_data$activity = data.activity) !== null && _data$activity !== void 0 ? _data$activity : ''),\n    hours: typeof data.hours === 'string' ? parseFloat(data.hours.replace(',', '.')) : Number((_data$hours = data.hours) !== null && _data$hours !== void 0 ? _data$hours : 0),\n    date: String((_data$date = data.date) !== null && _data$date !== void 0 ? _data$date : ''),\n    // En POST sí va date\n    employee_id: typeof data.employee_id === 'string' ? parseInt(data.employee_id, 10) : Number(data.employee_id),\n    note: data.note ? String(data.note) : ''\n  };\n};\n\n// Para actualización (PUT) - sin date y sin campos no editables\nconst sanitizeUpdate = data => {\n  var _rest$project_code, _rest$phase, _rest$discipline, _rest$activity, _rest$hours;\n  // Extraer campos no permitidos en el update\n  const {\n    date,\n    id,\n    employee_id,\n    project_name,\n    ...rest\n  } = data;\n  return {\n    ...rest,\n    project_code: String((_rest$project_code = rest.project_code) !== null && _rest$project_code !== void 0 ? _rest$project_code : ''),\n    phase: String((_rest$phase = rest.phase) !== null && _rest$phase !== void 0 ? _rest$phase : ''),\n    discipline: String((_rest$discipline = rest.discipline) !== null && _rest$discipline !== void 0 ? _rest$discipline : ''),\n    activity: String((_rest$activity = rest.activity) !== null && _rest$activity !== void 0 ? _rest$activity : ''),\n    hours: typeof rest.hours === 'string' ? parseFloat(rest.hours.replace(',', '.')) : Number((_rest$hours = rest.hours) !== null && _rest$hours !== void 0 ? _rest$hours : 0),\n    note: rest.note ? String(rest.note) : ''\n  };\n};\nconst encodeId = id => encodeURIComponent(String(id));\n\n/* =========================\n   Crear/Actualizar (botón Guardar/Actualizar)\n   ========================= */\nexport const submitHours = async data => {\n  try {\n    if (data !== null && data !== void 0 && data.id) {\n      // UPDATE (PUT)\n      const id = encodeURIComponent(String(data.id));\n      const body = sanitizeUpdate(data);\n      console.log('Enviando datos de actualización:', {\n        hourId: id,\n        payload: body\n      });\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n      return res.data;\n    } else {\n      // CREATE (POST)\n      const body = sanitizeCreate(data);\n      console.log('Creando nueva hora:', body);\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\n      return res.data;\n    }\n  } catch (error) {\n    console.error('Error al enviar las horas:', error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail, _error$response$data, _error$response$data2;\n      console.error('Detalles del error (submitHours):', error.response.data);\n      const detail = (_detail = (_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) !== null && _detail !== void 0 ? _detail : (_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\n\n/* =========================\n   Update/Delete directos (si los usas en otros lados)\n   ========================= */\nexport const updateHour = async (hourId, data) => {\n  try {\n    const id = encodeURIComponent(String(hourId));\n    // Quitar campos que el backend no acepta en PUT\n    const {\n      date: _dropDate,\n      id: _dropId,\n      employee_id: _dropEmp,\n      project_name: _dropPN,\n      ...rest\n    } = data !== null && data !== void 0 ? data : {};\n    const body = sanitizeUpdate(rest);\n    console.log('Enviando datos de actualización:', {\n      hourId: id,\n      payload: body\n    });\n    const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n    return res.data;\n  } catch (error) {\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail2, _error$response$data3, _error$response$data4;\n      console.error('Detalles del error (updateHour):', error.response.data);\n      const detail = (_detail2 = (_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.detail) !== null && _detail2 !== void 0 ? _detail2 : (_error$response$data4 = error.response.data) === null || _error$response$data4 === void 0 ? void 0 : _error$response$data4.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\nexport const deleteHour = async hourId => {\n  const id = encodeId(hourId);\n  const res = await axios.delete(`${API_BASE_URL}/hours/${id}`);\n  return res.data;\n};\n\n/* =========================\n   Catálogos / dependencias\n   ========================= */\nexport const getProjects = async () => {\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\n  return res.data;\n};\nexport const getEmployees = async () => {\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\n  return res.data;\n};\nexport const getProjectStages = async projectCode => {\n  const res = await axios.get(`${API_BASE_URL}/activities/project/${encodeURIComponent(projectCode)}/stages`);\n  return res.data;\n};\nexport const getDisciplinesByStage = async (projectCode, stage) => {\n  const res = await axios.get(`${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}/disciplines`);\n  return res.data;\n};\nexport const getActivitiesByDiscipline = async (projectCode, stage, discipline) => {\n  const res = await axios.get(`${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}::${encodeURIComponent(discipline)}/activities`);\n  return res.data;\n};\n\n/* =========================\n   Consultas de horas\n   ========================= */\nexport const getDailyActivities = async (date, employeeId) => {\n  const dateStr = date instanceof Date ? date.toISOString().slice(0, 10) : String(date);\n  const empId = typeof employeeId === 'string' ? parseInt(employeeId, 10) : Number(employeeId);\n  const res = await axios.get(`${API_BASE_URL}/daily-activities`, {\n    params: {\n      date: dateStr,\n      employee_id: empId\n    },\n    validateStatus: s => s >= 200 && s < 300\n  });\n  return res.data || [];\n};\n\n/* =========================\n   Auth (si lo usas)\n   ========================= */\nexport const loginUser = async credentials => {\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n  return res.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","normalizeHours","h","parseFloat","replace","sanitizeCreate","data","_data$project_code","_data$phase","_data$discipline","_data$activity","_data$hours","_data$date","project_code","String","phase","discipline","activity","hours","Number","date","employee_id","parseInt","note","sanitizeUpdate","_rest$project_code","_rest$phase","_rest$discipline","_rest$activity","_rest$hours","id","project_name","rest","encodeId","encodeURIComponent","submitHours","body","console","log","hourId","payload","res","put","post","error","isAxiosError","response","_detail","_error$response$data","_error$response$data2","detail","message","Error","JSON","stringify","updateHour","_dropDate","_dropId","_dropEmp","_dropPN","_detail2","_error$response$data3","_error$response$data4","deleteHour","delete","getProjects","get","getEmployees","getProjectStages","projectCode","getDisciplinesByStage","stage","getActivitiesByDiscipline","getDailyActivities","employeeId","dateStr","Date","toISOString","slice","empId","params","validateStatus","s","loginUser","credentials"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\n/* =========================\n   Tipos base (ajusta si quieres)\n   ========================= */\nexport interface DailyActivity {\n  id: string;\n  date: string;              // \"YYYY-MM-DD\"\n  employee_id: number;\n  project_code: string;\n  project_name: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number;\n  note?: string;\n}\n\nexport interface HourData {\n  id?: string;               // <- presente SOLO al editar\n  project_code: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number | string;\n  date: string;              // \"YYYY-MM-DD\"\n  employee_id?: number | string; // requerido en creación\n  note?: string;\n}\n\n/* =========================\n   Helpers\n   ========================= */\nconst normalizeHours = (h: number | string | undefined) =>\n  typeof h === 'string' ? parseFloat(h.replace(',', '.')) : (h ?? 0);\n\n// Para creación (POST) - incluye date\nconst sanitizeCreate = (data: any) => ({\n  project_code: String(data.project_code ?? ''),\n  phase: String(data.phase ?? ''),\n  discipline: String(data.discipline ?? ''),\n  activity: String(data.activity ?? ''),\n  hours: typeof data.hours === 'string' ? parseFloat(data.hours.replace(',', '.')) : Number(data.hours ?? 0),\n  date: String(data.date ?? ''), // En POST sí va date\n  employee_id: typeof data.employee_id === 'string' ? parseInt(data.employee_id, 10) : Number(data.employee_id),\n  note: data.note ? String(data.note) : '',\n});\n\n// Para actualización (PUT) - sin date y sin campos no editables\nconst sanitizeUpdate = (data: any) => {\n  // Extraer campos no permitidos en el update\n  const { date, id, employee_id, project_name, ...rest } = data;\n  return {\n    ...rest,\n    project_code: String(rest.project_code ?? ''),\n    phase: String(rest.phase ?? ''),\n    discipline: String(rest.discipline ?? ''),\n    activity: String(rest.activity ?? ''),\n    hours: typeof rest.hours === 'string' ? parseFloat(rest.hours.replace(',', '.')) : Number(rest.hours ?? 0),\n    note: rest.note ? String(rest.note) : '',\n  };\n};\n\nconst encodeId = (id: string | number) => encodeURIComponent(String(id));\n\n/* =========================\n   Crear/Actualizar (botón Guardar/Actualizar)\n   ========================= */\nexport const submitHours = async (data: any) => {\n  try {\n    if (data?.id) {\n      // UPDATE (PUT)\n      const id = encodeURIComponent(String(data.id));\n      const body = sanitizeUpdate(data);\n      console.log('Enviando datos de actualización:', { hourId: id, payload: body });\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n      return res.data;\n    } else {\n      // CREATE (POST)\n      const body = sanitizeCreate(data);\n      console.log('Creando nueva hora:', body);\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\n      return res.data;\n    }\n  } catch (error: any) {\n    console.error('Error al enviar las horas:', error);\n    if (axios.isAxiosError(error) && error.response) {\n      console.error('Detalles del error (submitHours):', error.response.data);\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\n\n/* =========================\n   Update/Delete directos (si los usas en otros lados)\n   ========================= */\nexport const updateHour = async (hourId: string | number, data: any) => {\n  try {\n    const id = encodeURIComponent(String(hourId));\n    // Quitar campos que el backend no acepta en PUT\n    const { date: _dropDate, id: _dropId, employee_id: _dropEmp, project_name: _dropPN, ...rest } = data ?? {};\n    const body = sanitizeUpdate(rest);\n    console.log('Enviando datos de actualización:', { hourId: id, payload: body });\n    const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n    return res.data;\n  } catch (error: any) {\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      console.error('Detalles del error (updateHour):', error.response.data);\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\n\nexport const deleteHour = async (hourId: string | number) => {\n  const id = encodeId(hourId);\n  const res = await axios.delete(`${API_BASE_URL}/hours/${id}`);\n  return res.data;\n};\n\n/* =========================\n   Catálogos / dependencias\n   ========================= */\nexport const getProjects = async () => {\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\n  return res.data;\n};\n\nexport const getEmployees = async () => {\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\n  return res.data;\n};\n\nexport const getProjectStages = async (projectCode: string) => {\n  const res = await axios.get(\n    `${API_BASE_URL}/activities/project/${encodeURIComponent(projectCode)}/stages`\n  );\n  return res.data;\n};\n\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\n  const res = await axios.get(\n    `${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}/disciplines`\n  );\n  return res.data;\n};\n\nexport const getActivitiesByDiscipline = async (\n  projectCode: string,\n  stage: string,\n  discipline: string\n) => {\n  const res = await axios.get(\n    `${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}::${encodeURIComponent(discipline)}/activities`\n  );\n  return res.data;\n};\n\n/* =========================\n   Consultas de horas\n   ========================= */\nexport const getDailyActivities = async (\n  date: Date | string,\n  employeeId: number | string\n): Promise<DailyActivity[]> => {\n  const dateStr = date instanceof Date ? date.toISOString().slice(0, 10) : String(date);\n  const empId =\n    typeof employeeId === 'string' ? parseInt(employeeId, 10) : Number(employeeId);\n\n  const res = await axios.get<DailyActivity[]>(`${API_BASE_URL}/daily-activities`, {\n    params: { date: dateStr, employee_id: empId },\n    validateStatus: (s) => s >= 200 && s < 300,\n  });\n  return res.data || [];\n};\n\n/* =========================\n   Auth (si lo usas)\n   ========================= */\nexport const loginUser = async (credentials: any) => {\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n  return res.data;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}