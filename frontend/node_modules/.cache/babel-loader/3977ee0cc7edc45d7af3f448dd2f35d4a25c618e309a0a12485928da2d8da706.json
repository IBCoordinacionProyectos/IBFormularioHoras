{"ast":null,"code":"var _env2;\n// src/api/horasApi.ts\nimport axios from 'axios';\n\n// Security: Configure axios with security best practices\naxios.defaults.timeout = 30000; // 30 second timeout\naxios.defaults.maxRedirects = 5; // Limit redirects\naxios.defaults.validateStatus = status => status >= 200 && status < 300;\n\n// Additional security headers\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.headers.common['X-Content-Type-Options'] = 'nosniff';\n\n// CSRF protection for non-GET requests\naxios.interceptors.request.use(config => {\n  if (config.method && !['get', 'head', 'options'].includes(config.method.toLowerCase())) {\n    // Add CSRF token if available\n    const csrfToken = localStorage.getItem('csrf_token');\n    if (csrfToken) {\n      config.headers['X-CSRF-Token'] = csrfToken;\n    }\n  }\n  return config;\n});\n\n// Input validation helpers\nconst isValidUrl = url => {\n  try {\n    var _env;\n    const parsedUrl = new URL(url);\n    // Only allow HTTPS in production\n    const isProduction = ((_env = process.env) === null || _env === void 0 ? void 0 : _env.NODE_ENV) === 'production';\n    if (isProduction && parsedUrl.protocol !== 'https:') {\n      return false;\n    }\n    // Prevent SSRF by only allowing specific domains\n    const allowedDomains = ['backend.yeisonduque.top', 'localhost', '127.0.0.1'];\n    return allowedDomains.some(domain => parsedUrl.hostname === domain || parsedUrl.hostname.endsWith('.' + domain));\n  } catch {\n    return false;\n  }\n};\nconst sanitizeString = (input, maxLength = 1000) => {\n  if (typeof input !== 'string') return '';\n  // Remove potentially dangerous characters and limit length\n  return input.slice(0, maxLength).replace(/[<>'\"&]/g, '') // Remove HTML injection chars\n  .replace(/[\\x00-\\x1F\\x7F]/g, ''); // Remove control characters\n};\n\n// Enhanced input validation\nconst validateInput = (input, type, maxLength = 1000) => {\n  if (input === null || input === undefined) return '';\n  const str = String(input).trim();\n\n  // Length validation\n  if (str.length > maxLength) {\n    throw new Error(`${type} exceeds maximum length of ${maxLength} characters`);\n  }\n\n  // Pattern validation based on type\n  switch (type) {\n    case 'project_code':\n      if (!/^[A-Z0-9_\\- .()/]+$/i.test(str)) {\n        throw new Error('Project code contains invalid characters');\n      }\n      break;\n    case 'phase':\n    case 'discipline':\n    case 'activity':\n      // Allow letters, numbers, spaces, hyphens, underscores, parentheses, forward slashes,\n      // commas, periods, colons, semicolons, question marks, exclamation marks, quotes, and accented characters\n      if (!/^[A-Za-z0-9\\s\\-_()/,.:;?!\"'ÁÉÍÓÚáéíóúÑñüÜ]+$/i.test(str)) {\n        throw new Error(`${type} contains invalid characters`);\n      }\n      break;\n    case 'hours':\n      const num = parseFloat(str.replace(',', '.'));\n      if (isNaN(num) || num < 0 || num > 24) {\n        throw new Error('Hours must be a valid number between 0 and 24');\n      }\n      return num.toString();\n    case 'date':\n      if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(str)) {\n        throw new Error('Date must be in YYYY-MM-DD format');\n      }\n      break;\n    case 'employee_id':\n      const empId = parseInt(str, 10);\n      if (isNaN(empId) || empId <= 0) {\n        throw new Error('Employee ID must be a positive integer');\n      }\n      return empId.toString();\n  }\n  return sanitizeString(str, maxLength);\n};\nexport const API_BASE_URL = ((_env2 = process.env) === null || _env2 === void 0 ? void 0 : _env2.REACT_APP_API_BASE_URL) || 'https://backend.yeisonduque.top';\n\n/* =========================\r\n   Tipos base (ajusta si quieres)\r\n   ========================= */\n\n/* =========================\r\n   Helpers\r\n   ========================= */\nconst normalizeHours = h => typeof h === 'string' ? parseFloat(h.replace(',', '.')) : h !== null && h !== void 0 ? h : 0;\n\n// Para creación (POST) - incluye date\nconst sanitizeCreate = data => {\n  try {\n    return {\n      project_code: validateInput(data.project_code, 'project_code', 50),\n      phase: validateInput(data.phase, 'phase', 100),\n      discipline: validateInput(data.discipline, 'discipline', 100),\n      activity: validateInput(data.activity, 'activity', 200),\n      hours: validateInput(data.hours, 'hours'),\n      date: validateInput(data.date, 'date'),\n      employee_id: validateInput(data.employee_id, 'employee_id'),\n      note: data.note ? validateInput(data.note, 'note', 500) : ''\n    };\n  } catch (error) {\n    throw new Error(`Validation error in create data: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n};\n\n// Para actualización (PUT) - sin date y sin campos no editables\nconst sanitizeUpdate = data => {\n  try {\n    // Extraer campos no permitidos en el update\n    const {\n      date,\n      id,\n      employee_id,\n      project_name,\n      ...rest\n    } = data;\n    return {\n      project_code: validateInput(rest.project_code, 'project_code', 50),\n      phase: validateInput(rest.phase, 'phase', 100),\n      discipline: validateInput(rest.discipline, 'discipline', 100),\n      activity: validateInput(rest.activity, 'activity', 200),\n      hours: validateInput(rest.hours, 'hours'),\n      note: rest.note ? validateInput(rest.note, 'note', 500) : ''\n    };\n  } catch (error) {\n    throw new Error(`Validation error in update data: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n};\nconst encodeId = id => encodeURIComponent(String(id));\n\n/* =========================\r\n   Crear/Actualizar (botón Guardar/Actualizar)\r\n   ========================= */\nexport const submitHours = async data => {\n  try {\n    if (data !== null && data !== void 0 && data.id) {\n      // UPDATE (PUT)\n      const id = encodeURIComponent(String(data.id));\n      const body = sanitizeUpdate(data);\n      console.log('Enviando datos de actualización:', {\n        hourId: id,\n        payload: body\n      });\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n      return res.data;\n    } else {\n      // CREATE (POST)\n      const body = sanitizeCreate(data);\n      console.log('Creando nueva hora:', body);\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\n      return res.data;\n    }\n  } catch (error) {\n    console.error('Error al enviar las horas:', error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail, _error$response$data, _error$response$data2;\n      console.error('Detalles del error (submitHours):', error.response.data);\n      const detail = (_detail = (_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) !== null && _detail !== void 0 ? _detail : (_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\n\n/* =========================\r\n   Update/Delete directos (si los usas en otros lados)\r\n   ========================= */\nexport const updateHour = async (hourId, data) => {\n  try {\n    const id = encodeURIComponent(String(hourId));\n    // Quitar campos que el backend no acepta en PUT\n    const {\n      date: _dropDate,\n      id: _dropId,\n      employee_id: _dropEmp,\n      project_name: _dropPN,\n      ...rest\n    } = data !== null && data !== void 0 ? data : {};\n    const body = sanitizeUpdate(rest);\n    console.log('Enviando datos de actualización:', {\n      hourId: id,\n      payload: body\n    });\n    const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n    return res.data;\n  } catch (error) {\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail2, _error$response$data3, _error$response$data4;\n      console.error('Detalles del error (updateHour):', error.response.data);\n      const detail = (_detail2 = (_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.detail) !== null && _detail2 !== void 0 ? _detail2 : (_error$response$data4 = error.response.data) === null || _error$response$data4 === void 0 ? void 0 : _error$response$data4.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\nexport const deleteHour = async hourId => {\n  if (!hourId) throw new Error('hourId vacío para DELETE');\n  const id = encodeURIComponent(String(hourId)); // ← NUNCA Number(...)\n  console.log('DELETE /hours/', id);\n  try {\n    const res = await axios.delete(`${API_BASE_URL}/hours/${id}`);\n    return res.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail3, _error$response$data5, _error$response$data6;\n      console.error('Detalles del error (deleteHour):', error.response.data);\n      const detail = (_detail3 = (_error$response$data5 = error.response.data) === null || _error$response$data5 === void 0 ? void 0 : _error$response$data5.detail) !== null && _detail3 !== void 0 ? _detail3 : (_error$response$data6 = error.response.data) === null || _error$response$data6 === void 0 ? void 0 : _error$response$data6.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\n\n/* =========================\r\n   Catálogos / dependencias\r\n   ========================= */\nexport const getProjects = async () => {\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\n  return res.data;\n};\nexport const getEmployees = async () => {\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\n  return res.data;\n};\nexport const getProjectStages = async projectCode => {\n  const res = await axios.get(`${API_BASE_URL}/activities/project/${encodeURIComponent(projectCode)}/stages`);\n  return res.data;\n};\nexport const getDisciplinesByStage = async (projectCode, stage) => {\n  const res = await axios.get(`${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}/disciplines`);\n  return res.data;\n};\nexport const getActivitiesByDiscipline = async (projectCode, stage, discipline) => {\n  const res = await axios.get(`${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}::${encodeURIComponent(discipline)}/activities`);\n  return res.data;\n};\n\n/* =========================\r\n   Consultas de horas\r\n   ========================= */\nexport const getDailyActivities = async (date, employeeId) => {\n  const dateStr = date instanceof Date ? date.toISOString().slice(0, 10) : String(date);\n  const empId = typeof employeeId === 'string' ? parseInt(employeeId, 10) : Number(employeeId);\n  const res = await axios.get(`${API_BASE_URL}/daily-activities`, {\n    params: {\n      date: dateStr,\n      employee_id: empId\n    },\n    validateStatus: s => s >= 200 && s < 300\n  });\n  return res.data || [];\n};\n\n/* =========================\r\n   Auth (si lo usas)\r\n   ========================= */\nexport const loginUser = async credentials => {\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n  return res.data;\n};\n\n/* =========================\r\n   Reportes\r\n   ========================= */\n\nexport const getMonthlyHoursReport = async (year, month) => {\n  try {\n    const res = await axios.get(`${API_BASE_URL}/hours/monthly-report/${year}/${month}`);\n    return res.data || [];\n  } catch (error) {\n    console.error(`Error al obtener el reporte mensual de horas para ${year}-${month}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail4, _error$response$data7, _error$response$data8;\n      console.error('Detalles del error (getMonthlyHoursReport):', error.response.data);\n      const detail = (_detail4 = (_error$response$data7 = error.response.data) === null || _error$response$data7 === void 0 ? void 0 : _error$response$data7.detail) !== null && _detail4 !== void 0 ? _detail4 : (_error$response$data8 = error.response.data) === null || _error$response$data8 === void 0 ? void 0 : _error$response$data8.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\nexport const getMonthlyHoursMatrix = async (year, month) => {\n  try {\n    const res = await axios.get(`${API_BASE_URL}/hours/monthly-matrix/${year}/${month}`);\n    return res.data || {\n      employees: [],\n      days: [],\n      matrix: [],\n      totals: {\n        rows: [],\n        cols: []\n      }\n    };\n  } catch (error) {\n    console.error(`Error al obtener el reporte mensual de horas en formato matriz para ${year}-${month}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail5, _error$response$data9, _error$response$data0;\n      console.error('Detalles del error (getMonthlyHoursMatrix):', error.response.data);\n      const detail = (_detail5 = (_error$response$data9 = error.response.data) === null || _error$response$data9 === void 0 ? void 0 : _error$response$data9.detail) !== null && _detail5 !== void 0 ? _detail5 : (_error$response$data0 = error.response.data) === null || _error$response$data0 === void 0 ? void 0 : _error$response$data0.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};\nexport const getGroupedHoursByEmployee = async (year, month) => {\n  try {\n    const res = await axios.get(`${API_BASE_URL}/hours/grouped-by-employee`, {\n      params: {\n        year,\n        month\n      }\n    });\n    return res.data || [];\n  } catch (error) {\n    console.error(`Error al obtener las horas agrupadas por empleado para ${year}-${month}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      var _detail6, _error$response$data1, _error$response$data10;\n      console.error('Detalles del error (getGroupedHoursByEmployee):', error.response.data);\n      const detail = (_detail6 = (_error$response$data1 = error.response.data) === null || _error$response$data1 === void 0 ? void 0 : _error$response$data1.detail) !== null && _detail6 !== void 0 ? _detail6 : (_error$response$data10 = error.response.data) === null || _error$response$data10 === void 0 ? void 0 : _error$response$data10.message;\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","defaults","timeout","maxRedirects","validateStatus","status","headers","common","interceptors","request","use","config","method","includes","toLowerCase","csrfToken","localStorage","getItem","isValidUrl","url","_env","parsedUrl","URL","isProduction","process","env","NODE_ENV","protocol","allowedDomains","some","domain","hostname","endsWith","sanitizeString","input","maxLength","slice","replace","validateInput","type","undefined","str","String","trim","length","Error","test","num","parseFloat","isNaN","toString","empId","parseInt","API_BASE_URL","_env2","REACT_APP_API_BASE_URL","normalizeHours","h","sanitizeCreate","data","project_code","phase","discipline","activity","hours","date","employee_id","note","error","message","sanitizeUpdate","id","project_name","rest","encodeId","encodeURIComponent","submitHours","body","console","log","hourId","payload","res","put","post","isAxiosError","response","_detail","_error$response$data","_error$response$data2","detail","JSON","stringify","updateHour","_dropDate","_dropId","_dropEmp","_dropPN","_detail2","_error$response$data3","_error$response$data4","deleteHour","delete","_detail3","_error$response$data5","_error$response$data6","getProjects","get","getEmployees","getProjectStages","projectCode","getDisciplinesByStage","stage","getActivitiesByDiscipline","getDailyActivities","employeeId","dateStr","Date","toISOString","Number","params","s","loginUser","credentials","getMonthlyHoursReport","year","month","_detail4","_error$response$data7","_error$response$data8","getMonthlyHoursMatrix","employees","days","matrix","totals","rows","cols","_detail5","_error$response$data9","_error$response$data0","getGroupedHoursByEmployee","_detail6","_error$response$data1","_error$response$data10"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\r\nimport axios from 'axios';\r\n\r\n// Security: Configure axios with security best practices\r\naxios.defaults.timeout = 30000; // 30 second timeout\r\naxios.defaults.maxRedirects = 5; // Limit redirects\r\naxios.defaults.validateStatus = (status) => status >= 200 && status < 300;\r\n\r\n// Additional security headers\r\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\naxios.defaults.headers.common['X-Content-Type-Options'] = 'nosniff';\r\n\r\n// CSRF protection for non-GET requests\r\naxios.interceptors.request.use((config) => {\r\n  if (config.method && !['get', 'head', 'options'].includes(config.method.toLowerCase())) {\r\n    // Add CSRF token if available\r\n    const csrfToken = localStorage.getItem('csrf_token');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRF-Token'] = csrfToken;\r\n    }\r\n  }\r\n  return config;\r\n});\r\n\r\n// Input validation helpers\r\nconst isValidUrl = (url: string): boolean => {\r\n  try {\r\n    const parsedUrl = new URL(url);\r\n    // Only allow HTTPS in production\r\n    const isProduction = (process as any).env?.NODE_ENV === 'production';\r\n    if (isProduction && parsedUrl.protocol !== 'https:') {\r\n      return false;\r\n    }\r\n    // Prevent SSRF by only allowing specific domains\r\n    const allowedDomains = [\r\n      'backend.yeisonduque.top',\r\n      'localhost',\r\n      '127.0.0.1'\r\n    ];\r\n    return allowedDomains.some(domain =>\r\n      parsedUrl.hostname === domain || parsedUrl.hostname.endsWith('.' + domain)\r\n    );\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst sanitizeString = (input: string, maxLength: number = 1000): string => {\r\n  if (typeof input !== 'string') return '';\r\n  // Remove potentially dangerous characters and limit length\r\n  return input\r\n    .slice(0, maxLength)\r\n    .replace(/[<>'\"&]/g, '') // Remove HTML injection chars\r\n    .replace(/[\\x00-\\x1F\\x7F]/g, ''); // Remove control characters\r\n};\r\n\r\n// Enhanced input validation\r\nconst validateInput = (input: any, type: string, maxLength: number = 1000): string => {\r\n  if (input === null || input === undefined) return '';\r\n\r\n  const str = String(input).trim();\r\n\r\n  // Length validation\r\n  if (str.length > maxLength) {\r\n    throw new Error(`${type} exceeds maximum length of ${maxLength} characters`);\r\n  }\r\n\r\n  // Pattern validation based on type\r\n  switch (type) {\r\n    case 'project_code':\r\n      if (!/^[A-Z0-9_\\- .()/]+$/i.test(str)) {\r\n        throw new Error('Project code contains invalid characters');\r\n      }\r\n      break;\r\n    case 'phase':\r\n    case 'discipline':\r\n    case 'activity':\r\n      // Allow letters, numbers, spaces, hyphens, underscores, parentheses, forward slashes,\r\n      // commas, periods, colons, semicolons, question marks, exclamation marks, quotes, and accented characters\r\n      if (!/^[A-Za-z0-9\\s\\-_()/,.:;?!\"'ÁÉÍÓÚáéíóúÑñüÜ]+$/i.test(str)) {\r\n        throw new Error(`${type} contains invalid characters`);\r\n      }\r\n      break;\r\n    case 'hours':\r\n      const num = parseFloat(str.replace(',', '.'));\r\n      if (isNaN(num) || num < 0 || num > 24) {\r\n        throw new Error('Hours must be a valid number between 0 and 24');\r\n      }\r\n      return num.toString();\r\n    case 'date':\r\n      if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(str)) {\r\n        throw new Error('Date must be in YYYY-MM-DD format');\r\n      }\r\n      break;\r\n    case 'employee_id':\r\n      const empId = parseInt(str, 10);\r\n      if (isNaN(empId) || empId <= 0) {\r\n        throw new Error('Employee ID must be a positive integer');\r\n      }\r\n      return empId.toString();\r\n  }\r\n\r\n  return sanitizeString(str, maxLength);\r\n};\r\n\r\nexport const API_BASE_URL = (process as any).env?.REACT_APP_API_BASE_URL || 'https://backend.yeisonduque.top';\r\n\r\n/* =========================\r\n   Tipos base (ajusta si quieres)\r\n   ========================= */\r\nexport interface DailyActivity {\r\n  id: string;\r\n  date: string;              // \"YYYY-MM-DD\"\r\n  employee_id: number;\r\n  project_code: string;\r\n  project_name: string;\r\n  phase: string;\r\n  discipline: string;\r\n  activity: string;\r\n  hours: number;\r\n  note?: string;\r\n}\r\n\r\nexport interface HourData {\r\n  id?: string;               // <- presente SOLO al editar\r\n  project_code: string;\r\n  phase: string;\r\n  discipline: string;\r\n  activity: string;\r\n  hours: number | string;\r\n  date: string;              // \"YYYY-MM-DD\"\r\n  employee_id?: number | string; // requerido en creación\r\n  note?: string;\r\n}\r\n\r\n/* =========================\r\n   Helpers\r\n   ========================= */\r\nconst normalizeHours = (h: number | string | undefined) =>\r\n  typeof h === 'string' ? parseFloat(h.replace(',', '.')) : (h ?? 0);\r\n\r\n// Para creación (POST) - incluye date\r\nconst sanitizeCreate = (data: any) => {\r\n  try {\r\n    return {\r\n      project_code: validateInput(data.project_code, 'project_code', 50),\r\n      phase: validateInput(data.phase, 'phase', 100),\r\n      discipline: validateInput(data.discipline, 'discipline', 100),\r\n      activity: validateInput(data.activity, 'activity', 200),\r\n      hours: validateInput(data.hours, 'hours'),\r\n      date: validateInput(data.date, 'date'),\r\n      employee_id: validateInput(data.employee_id, 'employee_id'),\r\n      note: data.note ? validateInput(data.note, 'note', 500) : '',\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Validation error in create data: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n  }\r\n};\r\n\r\n// Para actualización (PUT) - sin date y sin campos no editables\r\nconst sanitizeUpdate = (data: any) => {\r\n  try {\r\n    // Extraer campos no permitidos en el update\r\n    const { date, id, employee_id, project_name, ...rest } = data;\r\n    return {\r\n      project_code: validateInput(rest.project_code, 'project_code', 50),\r\n      phase: validateInput(rest.phase, 'phase', 100),\r\n      discipline: validateInput(rest.discipline, 'discipline', 100),\r\n      activity: validateInput(rest.activity, 'activity', 200),\r\n      hours: validateInput(rest.hours, 'hours'),\r\n      note: rest.note ? validateInput(rest.note, 'note', 500) : '',\r\n    };\r\n  } catch (error) {\r\n    throw new Error(`Validation error in update data: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n  }\r\n};\r\n\r\nconst encodeId = (id: string | number) => encodeURIComponent(String(id));\r\n\r\n/* =========================\r\n   Crear/Actualizar (botón Guardar/Actualizar)\r\n   ========================= */\r\nexport const submitHours = async (data: any) => {\r\n  try {\r\n    if (data?.id) {\r\n      // UPDATE (PUT)\r\n      const id = encodeURIComponent(String(data.id));\r\n      const body = sanitizeUpdate(data);\r\n      console.log('Enviando datos de actualización:', { hourId: id, payload: body });\r\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\r\n      return res.data;\r\n    } else {\r\n      // CREATE (POST)\r\n      const body = sanitizeCreate(data);\r\n      console.log('Creando nueva hora:', body);\r\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\r\n      return res.data;\r\n    }\r\n  } catch (error: any) {\r\n    console.error('Error al enviar las horas:', error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (submitHours):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* =========================\r\n   Update/Delete directos (si los usas en otros lados)\r\n   ========================= */\r\nexport const updateHour = async (hourId: string | number, data: any) => {\r\n  try {\r\n    const id = encodeURIComponent(String(hourId));\r\n    // Quitar campos que el backend no acepta en PUT\r\n    const { date: _dropDate, id: _dropId, employee_id: _dropEmp, project_name: _dropPN, ...rest } = data ?? {};\r\n    const body = sanitizeUpdate(rest);\r\n    console.log('Enviando datos de actualización:', { hourId: id, payload: body });\r\n    const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (updateHour):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteHour = async (hourId: string | number) => {\r\n  if (!hourId) throw new Error('hourId vacío para DELETE');\r\n  const id = encodeURIComponent(String(hourId)); // ← NUNCA Number(...)\r\n  console.log('DELETE /hours/', id);\r\n  try {\r\n    const res = await axios.delete(`${API_BASE_URL}/hours/${id}`);\r\n    return res.data;\r\n  } catch (error: any) {\r\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (deleteHour):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n/* =========================\r\n   Catálogos / dependencias\r\n   ========================= */\r\nexport const getProjects = async () => {\r\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\r\n  return res.data;\r\n};\r\n\r\nexport const getEmployees = async () => {\r\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\r\n  return res.data;\r\n};\r\n\r\nexport const getProjectStages = async (projectCode: string) => {\r\n  const res = await axios.get(\r\n    `${API_BASE_URL}/activities/project/${encodeURIComponent(projectCode)}/stages`\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\r\n  const res = await axios.get(\r\n    `${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}/disciplines`\r\n  );\r\n  return res.data;\r\n};\r\n\r\nexport const getActivitiesByDiscipline = async (\r\n  projectCode: string,\r\n  stage: string,\r\n  discipline: string\r\n) => {\r\n  const res = await axios.get(\r\n    `${API_BASE_URL}/activities/${encodeURIComponent(projectCode)}::${encodeURIComponent(stage)}::${encodeURIComponent(discipline)}/activities`\r\n  );\r\n  return res.data;\r\n};\r\n\r\n/* =========================\r\n   Consultas de horas\r\n   ========================= */\r\nexport const getDailyActivities = async (\r\n  date: Date | string,\r\n  employeeId: number | string\r\n): Promise<DailyActivity[]> => {\r\n  const dateStr = date instanceof Date ? date.toISOString().slice(0, 10) : String(date);\r\n  const empId =\r\n    typeof employeeId === 'string' ? parseInt(employeeId, 10) : Number(employeeId);\r\n\r\n  const res = await axios.get<DailyActivity[]>(`${API_BASE_URL}/daily-activities`, {\r\n    params: { date: dateStr, employee_id: empId },\r\n    validateStatus: (s) => s >= 200 && s < 300,\r\n  });\r\n  return res.data || [];\r\n};\r\n\r\n/* =========================\r\n   Auth (si lo usas)\r\n   ========================= */\r\nexport const loginUser = async (credentials: any) => {\r\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\r\n  return res.data;\r\n};\r\n\r\n/* =========================\r\n   Reportes\r\n   ========================= */\r\nexport interface MonthlyReportEntry {\r\n  id: string;\r\n  date: string;              // \"YYYY-MM-DD\"\r\n  employee_id: number;\r\n  employee_name: string;\r\n  employee_short_name: string;\r\n  project_code: string;\r\n  phase: string;\r\n  discipline: string;\r\n  activity: string;\r\n  hours: number;\r\n  note?: string;\r\n}\r\n\r\nexport const getMonthlyHoursReport = async (year: number, month: number): Promise<MonthlyReportEntry[]> => {\r\n  try {\r\n    const res = await axios.get<MonthlyReportEntry[]>(`${API_BASE_URL}/hours/monthly-report/${year}/${month}`);\r\n    return res.data || [];\r\n  } catch (error: any) {\r\n    console.error(`Error al obtener el reporte mensual de horas para ${year}-${month}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (getMonthlyHoursReport):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport interface MonthlyMatrixData {\r\n  employees: Array<{\r\n    id: number;\r\n    name: string;\r\n    short_name: string;\r\n  }>;\r\n  days: string[];\r\n  matrix: number[][];\r\n  totals: {\r\n    rows: number[];\r\n    cols: number[];\r\n  };\r\n}\r\n\r\nexport const getMonthlyHoursMatrix = async (year: number, month: number): Promise<MonthlyMatrixData> => {\r\n  try {\r\n    const res = await axios.get<MonthlyMatrixData>(`${API_BASE_URL}/hours/monthly-matrix/${year}/${month}`);\r\n    return res.data || { employees: [], days: [], matrix: [], totals: { rows: [], cols: [] } };\r\n  } catch (error: any) {\r\n    console.error(`Error al obtener el reporte mensual de horas en formato matriz para ${year}-${month}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (getMonthlyHoursMatrix):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport interface GroupedHour {\r\n  date: string;\r\n  employee_id: string;\r\n  short_name: string;\r\n  hours: number;\r\n}\r\n\r\nexport const getGroupedHoursByEmployee = async (year: number, month: number): Promise<GroupedHour[]> => {\r\n  try {\r\n    const res = await axios.get<GroupedHour[]>(`${API_BASE_URL}/hours/grouped-by-employee`, {\r\n      params: { year, month }\r\n    });\r\n    return res.data || [];\r\n  } catch (error: any) {\r\n    console.error(`Error al obtener las horas agrupadas por empleado para ${year}-${month}:`, error);\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      console.error('Detalles del error (getGroupedHoursByEmployee):', error.response.data);\r\n      const detail = (error.response.data as any)?.detail ?? (error.response.data as any)?.message;\r\n      if (detail) throw new Error(typeof detail === 'string' ? detail : JSON.stringify(detail));\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}