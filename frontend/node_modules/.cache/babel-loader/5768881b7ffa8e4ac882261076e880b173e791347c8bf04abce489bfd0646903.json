{"ast":null,"code":"import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames) {\n  let modifiersClassNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const modifierClassNames = Object.entries(modifiers).filter(_ref => {\n    let [, active] = _ref;\n    return active === true;\n  }).reduce((previousValue, _ref2) => {\n    let [key] = _ref2;\n    if (modifiersClassNames[key]) {\n      previousValue.push(modifiersClassNames[key]);\n    } else if (classNames[DayFlag[key]]) {\n      previousValue.push(classNames[DayFlag[key]]);\n    } else if (classNames[SelectionState[key]]) {\n      previousValue.push(classNames[SelectionState[key]]);\n    }\n    return previousValue;\n  }, [classNames[UI.Day]]);\n  return modifierClassNames;\n}","map":{"version":3,"names":["DayFlag","SelectionState","UI","getClassNamesForModifiers","modifiers","classNames","modifiersClassNames","arguments","length","undefined","modifierClassNames","Object","entries","filter","_ref","active","reduce","previousValue","_ref2","key","push","Day"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/helpers/getClassNamesForModifiers.js"],"sourcesContent":["import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {\n    const modifierClassNames = Object.entries(modifiers)\n        .filter(([, active]) => active === true)\n        .reduce((previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n            previousValue.push(modifiersClassNames[key]);\n        }\n        else if (classNames[DayFlag[key]]) {\n            previousValue.push(classNames[DayFlag[key]]);\n        }\n        else if (classNames[SelectionState[key]]) {\n            previousValue.push(classNames[SelectionState[key]]);\n        }\n        return previousValue;\n    }, [classNames[UI.Day]]);\n    return modifierClassNames;\n}\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,cAAc,EAAEC,EAAE,QAAQ,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACC,SAAS,EAAEC,UAAU,EAA4B;EAAA,IAA1BC,mBAAmB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACrF,MAAMG,kBAAkB,GAAGC,MAAM,CAACC,OAAO,CAACR,SAAS,CAAC,CAC/CS,MAAM,CAACC,IAAA;IAAA,IAAC,GAAGC,MAAM,CAAC,GAAAD,IAAA;IAAA,OAAKC,MAAM,KAAK,IAAI;EAAA,EAAC,CACvCC,MAAM,CAAC,CAACC,aAAa,EAAAC,KAAA,KAAY;IAAA,IAAV,CAACC,GAAG,CAAC,GAAAD,KAAA;IAC7B,IAAIZ,mBAAmB,CAACa,GAAG,CAAC,EAAE;MAC1BF,aAAa,CAACG,IAAI,CAACd,mBAAmB,CAACa,GAAG,CAAC,CAAC;IAChD,CAAC,MACI,IAAId,UAAU,CAACL,OAAO,CAACmB,GAAG,CAAC,CAAC,EAAE;MAC/BF,aAAa,CAACG,IAAI,CAACf,UAAU,CAACL,OAAO,CAACmB,GAAG,CAAC,CAAC,CAAC;IAChD,CAAC,MACI,IAAId,UAAU,CAACJ,cAAc,CAACkB,GAAG,CAAC,CAAC,EAAE;MACtCF,aAAa,CAACG,IAAI,CAACf,UAAU,CAACJ,cAAc,CAACkB,GAAG,CAAC,CAAC,CAAC;IACvD;IACA,OAAOF,aAAa;EACxB,CAAC,EAAE,CAACZ,UAAU,CAACH,EAAE,CAACmB,GAAG,CAAC,CAAC,CAAC;EACxB,OAAOX,kBAAkB;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}