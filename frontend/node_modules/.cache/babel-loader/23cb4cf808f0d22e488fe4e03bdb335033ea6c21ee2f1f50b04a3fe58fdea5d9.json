{"ast":null,"code":"/**\n * Returns the years to display in the dropdown.\n *\n * This function generates a list of years between the navigation start and end\n * dates, formatted using the provided formatter.\n *\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the year labels.\n * @param dateLib The date library to use for date manipulation.\n * @param reverse If true, reverses the order of the years (descending).\n * @returns An array of dropdown options representing the years, or `undefined`\n *   if `navStart` or `navEnd` is not provided.\n */\nexport function getYearOptions(navStart, navEnd, formatters, dateLib) {\n  let reverse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (!navStart) return undefined;\n  if (!navEnd) return undefined;\n  const {\n    startOfYear,\n    endOfYear,\n    addYears,\n    getYear,\n    isBefore,\n    isSameYear\n  } = dateLib;\n  const firstNavYear = startOfYear(navStart);\n  const lastNavYear = endOfYear(navEnd);\n  const years = [];\n  let year = firstNavYear;\n  while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n    years.push(year);\n    year = addYears(year, 1);\n  }\n  if (reverse) years.reverse();\n  return years.map(year => {\n    const label = formatters.formatYearDropdown(year, dateLib);\n    return {\n      value: getYear(year),\n      label,\n      disabled: false\n    };\n  });\n}","map":{"version":3,"names":["getYearOptions","navStart","navEnd","formatters","dateLib","reverse","arguments","length","undefined","startOfYear","endOfYear","addYears","getYear","isBefore","isSameYear","firstNavYear","lastNavYear","years","year","push","map","label","formatYearDropdown","value","disabled"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/helpers/getYearOptions.js"],"sourcesContent":["/**\n * Returns the years to display in the dropdown.\n *\n * This function generates a list of years between the navigation start and end\n * dates, formatted using the provided formatter.\n *\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the year labels.\n * @param dateLib The date library to use for date manipulation.\n * @param reverse If true, reverses the order of the years (descending).\n * @returns An array of dropdown options representing the years, or `undefined`\n *   if `navStart` or `navEnd` is not provided.\n */\nexport function getYearOptions(navStart, navEnd, formatters, dateLib, reverse = false) {\n    if (!navStart)\n        return undefined;\n    if (!navEnd)\n        return undefined;\n    const { startOfYear, endOfYear, addYears, getYear, isBefore, isSameYear } = dateLib;\n    const firstNavYear = startOfYear(navStart);\n    const lastNavYear = endOfYear(navEnd);\n    const years = [];\n    let year = firstNavYear;\n    while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n        years.push(year);\n        year = addYears(year, 1);\n    }\n    if (reverse)\n        years.reverse();\n    return years.map((year) => {\n        const label = formatters.formatYearDropdown(year, dateLib);\n        return {\n            value: getYear(year),\n            label,\n            disabled: false,\n        };\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAcA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAmB;EAAA,IAAjBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACjF,IAAI,CAACL,QAAQ,EACT,OAAOO,SAAS;EACpB,IAAI,CAACN,MAAM,EACP,OAAOM,SAAS;EACpB,MAAM;IAAEC,WAAW;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGV,OAAO;EACnF,MAAMW,YAAY,GAAGN,WAAW,CAACR,QAAQ,CAAC;EAC1C,MAAMe,WAAW,GAAGN,SAAS,CAACR,MAAM,CAAC;EACrC,MAAMe,KAAK,GAAG,EAAE;EAChB,IAAIC,IAAI,GAAGH,YAAY;EACvB,OAAOF,QAAQ,CAACK,IAAI,EAAEF,WAAW,CAAC,IAAIF,UAAU,CAACI,IAAI,EAAEF,WAAW,CAAC,EAAE;IACjEC,KAAK,CAACE,IAAI,CAACD,IAAI,CAAC;IAChBA,IAAI,GAAGP,QAAQ,CAACO,IAAI,EAAE,CAAC,CAAC;EAC5B;EACA,IAAIb,OAAO,EACPY,KAAK,CAACZ,OAAO,CAAC,CAAC;EACnB,OAAOY,KAAK,CAACG,GAAG,CAAEF,IAAI,IAAK;IACvB,MAAMG,KAAK,GAAGlB,UAAU,CAACmB,kBAAkB,CAACJ,IAAI,EAAEd,OAAO,CAAC;IAC1D,OAAO;MACHmB,KAAK,EAAEX,OAAO,CAACM,IAAI,CAAC;MACpBG,KAAK;MACLG,QAAQ,EAAE;IACd,CAAC;EACL,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}