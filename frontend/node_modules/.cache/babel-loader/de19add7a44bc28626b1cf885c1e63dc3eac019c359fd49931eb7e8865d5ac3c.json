{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { format, parseISO } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport Header from './Header';\nimport { toast } from 'sonner';\nimport { Calendar as CalendarIcon, Briefcase, Save, Pencil, ListChecks, ClipboardList, XCircle, PlusCircle, Loader2 } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Calendar } from './ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { cn } from '../lib/utils';\nimport { FormSelect } from './formulario/FormSelect';\nimport { ActivityItem } from './formulario/ActivityItem';\nimport { ActivityListSkeleton } from './formulario/ActivityListSkeleton';\nimport { EmptyState } from './formulario/EmptyState';\nimport { TotalHoursProgress } from './formulario/TotalHoursProgress';\nimport { submitHours, getProjects, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline, getDailyActivities, deleteHour } from '../api/horasApi';\nimport { updateHour } from '../api/horasApiFUNCIONANDO';\n\n// Props e interfaces\n\n// Importar la interfaz DailyActivity desde horasApi\n\n// Usar la interfaz DailyActivity en lugar de definir Activity\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormData = employeeId => ({\n  employee_id: String(employeeId),\n  project_code: '',\n  phase: '',\n  discipline: '',\n  activity: '',\n  hours: '',\n  note: ''\n});\nconst FormularioHoras = ({\n  onSuccess,\n  employeeId,\n  employeeName,\n  onLogout\n}) => {\n  _s();\n  // State\n  const [formData, setFormData] = useState(initialFormData(employeeId));\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [dailyActivities, setDailyActivities] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [disciplines, setDisciplines] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [editingActivityId, setEditingActivityId] = useState(null);\n\n  // Loading\n  const [loading, setLoading] = useState({\n    submit: false,\n    projects: true,\n    stages: false,\n    disciplines: false,\n    activities: false,\n    dailyActivities: true,\n    delete: null // ID de la actividad que se está eliminando o null\n  });\n\n  // Derivados\n  const totalHoursToday = useMemo(() => dailyActivities.reduce((sum, a) => sum + a.hours, 0), [dailyActivities]);\n  const selectedProjectName = useMemo(() => {\n    var _projects$find;\n    return ((_projects$find = projects.find(p => p.code === formData.project_code)) === null || _projects$find === void 0 ? void 0 : _projects$find.name) || '';\n  }, [formData.project_code, projects]);\n\n  // Normaliza horas: '1,5' -> 1.5\n  const hoursNumber = useMemo(() => {\n    var _formData$hours;\n    const raw = String((_formData$hours = formData.hours) !== null && _formData$hours !== void 0 ? _formData$hours : '').replace(',', '.').trim();\n    const n = Number(raw);\n    return Number.isFinite(n) ? n : 0;\n  }, [formData.hours]);\n\n  // Validación booleana real\n  const isFormValid = useMemo(() => {\n    const required = [formData.project_code, formData.phase, formData.discipline, formData.activity];\n    const allFilled = required.every(v => typeof v === 'string' ? v.trim().length > 0 : Boolean(v));\n    return allFilled && hoursNumber > 0;\n  }, [formData.project_code, formData.phase, formData.discipline, formData.activity, hoursNumber]);\n\n  // Fetchers\n  const refreshDailyActivities = useCallback(async (date, id) => {\n    setLoading(prev => ({\n      ...prev,\n      dailyActivities: true\n    }));\n    try {\n      const dateString = format(date, 'yyyy-MM-dd');\n      const acts = await getDailyActivities(dateString, Number(id));\n      setDailyActivities(acts);\n    } catch (error) {\n      toast.error('Error al cargar las actividades del día.');\n      console.error(error);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        dailyActivities: false\n      }));\n    }\n  }, []);\n  const fetchProjects = useCallback(async () => {\n    setLoading(prev => ({\n      ...prev,\n      projects: true\n    }));\n    try {\n      const projectData = await getProjects();\n      setProjects(projectData);\n    } catch (error) {\n      toast.error('Error al cargar proyectos.');\n      console.error(error);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        projects: false\n      }));\n    }\n  }, []);\n  const fetchStages = useCallback(async projectCode => {\n    if (!projectCode) return;\n    setLoading(prev => ({\n      ...prev,\n      stages: true\n    }));\n    try {\n      const stageData = await getProjectStages(projectCode);\n      // Filtrar valores nulos o vacíos y convertir a string\n      const validStages = stageData.filter(stage => stage != null && String(stage).trim() !== '').map(String);\n      setStages(validStages);\n      return validStages;\n    } catch (error) {\n      console.error('Error al cargar las etapas:', error);\n      toast.error('Error al cargar las etapas del proyecto.');\n      setStages([]);\n      return [];\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        stages: false\n      }));\n    }\n  }, []);\n  const fetchDisciplines = useCallback(async (projectCode, stage) => {\n    if (!projectCode || !stage) {\n      setDisciplines([]);\n      return [];\n    }\n    setLoading(prev => ({\n      ...prev,\n      disciplines: true\n    }));\n    try {\n      const disciplineData = await getDisciplinesByStage(projectCode, stage);\n      // Filtrar valores nulos o vacíos y convertir a string\n      const validDisciplines = disciplineData.filter(discipline => discipline != null && String(discipline).trim() !== '').map(String);\n      setDisciplines(validDisciplines);\n      return validDisciplines;\n    } catch (error) {\n      console.error('Error al cargar las disciplinas:', error);\n      toast.error('Error al cargar las disciplinas.');\n      setDisciplines([]);\n      return [];\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        disciplines: false\n      }));\n    }\n  }, []);\n  const fetchActivities = useCallback(async (projectCode, stage, discipline) => {\n    if (!projectCode || !stage || !discipline) {\n      setActivities([]);\n      return [];\n    }\n    setLoading(prev => ({\n      ...prev,\n      activities: true\n    }));\n    try {\n      const activityData = await getActivitiesByDiscipline(projectCode, stage, discipline);\n      // Filtrar valores nulos o vacíos y convertir a string\n      const validActivities = activityData.filter(activity => activity != null && String(activity).trim() !== '').map(String);\n      setActivities(validActivities);\n      return validActivities;\n    } catch (error) {\n      console.error('Error al cargar las actividades:', error);\n      toast.error('Error al cargar las actividades.');\n      setActivities([]);\n      return [];\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        activities: false\n      }));\n    }\n  }, []);\n\n  // Effects\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n  useEffect(() => {\n    refreshDailyActivities(selectedDate, String(employeeId));\n  }, [selectedDate, employeeId, refreshDailyActivities]);\n\n  // Handlers\n  const handleDateChange = date => {\n    if (date) {\n      setSelectedDate(date);\n      refreshDailyActivities(date, String(employeeId));\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const v = name === 'hours' ? value.replace(',', '.') : value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: v\n    }));\n  };\n\n  // Manejar la tecla Enter en el textarea de notas\n  const handleNoteKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n    }\n  };\n  const handleSelectChange = async (name, value) => {\n    // Crear una copia actualizada del formulario\n    const updatedFormData = {\n      ...formData,\n      [name]: value\n    };\n\n    // Manejar cambios en cascada basados en el campo modificado\n    switch (name) {\n      case 'project_code':\n        // Limpiar campos dependientes\n        updatedFormData.phase = '';\n        updatedFormData.discipline = '';\n        updatedFormData.activity = '';\n\n        // Limpiar estados de opciones\n        setStages([]);\n        setDisciplines([]);\n        setActivities([]);\n\n        // Cargar etapas si hay un proyecto seleccionado\n        if (value) {\n          await fetchStages(value);\n        }\n        break;\n      case 'phase':\n        // Limpiar campos dependientes\n        updatedFormData.discipline = '';\n        updatedFormData.activity = '';\n\n        // Limpiar estados de opciones dependientes\n        setDisciplines([]);\n        setActivities([]);\n\n        // Cargar disciplinas si hay una fase seleccionada\n        if (value && updatedFormData.project_code) {\n          await fetchDisciplines(updatedFormData.project_code, value);\n        }\n        break;\n      case 'discipline':\n        // Limpiar actividad\n        updatedFormData.activity = '';\n\n        // Limpiar actividades\n        setActivities([]);\n\n        // Cargar actividades si hay una disciplina seleccionada\n        if (value && updatedFormData.project_code && updatedFormData.phase) {\n          await fetchActivities(updatedFormData.project_code, updatedFormData.phase, value);\n        }\n        break;\n    }\n\n    // Actualizar el estado del formulario\n    setFormData(updatedFormData);\n  };\n  const resetForm = useCallback(() => {\n    setFormData(initialFormData(employeeId));\n    setEditingActivityId(null);\n  }, [employeeId]);\n\n  // Precarga dependencias al editar + rellena form\n  const handleEditActivity = useCallback(async activity => {\n    try {\n      setLoading(prev => ({\n        ...prev,\n        form: true\n      }));\n\n      // 1. Primero actualizamos la fecha si es necesario\n      if (activity.date) {\n        try {\n          const activityDate = parseISO(activity.date);\n          // Solo actualizar la fecha si es diferente a la actual\n          if (format(activityDate, 'yyyy-MM-dd') !== format(selectedDate, 'yyyy-MM-dd')) {\n            setSelectedDate(activityDate);\n            // Esperamos un momento para que se actualice la fecha\n            await new Promise(resolve => setTimeout(resolve, 100));\n          }\n        } catch (error) {\n          console.error('Error al analizar la fecha:', error);\n        }\n      }\n\n      // 2. Establecer el ID de edición y datos iniciales del formulario\n      setEditingActivityId(activity.id);\n\n      // 3. Crear un objeto con los datos iniciales\n      const initialData = {\n        ...initialFormData(employeeId),\n        project_code: activity.project_code || '',\n        phase: activity.phase || '',\n        discipline: activity.discipline || '',\n        activity: activity.activity || '',\n        hours: activity.hours ? String(activity.hours).replace('.', ',') : '',\n        note: activity.note || ''\n      };\n\n      // 4. Actualizar el formulario con los datos iniciales\n      setFormData(initialData);\n\n      // 5. Si hay proyecto, cargar etapas\n      if (activity.project_code) {\n        await fetchStages(activity.project_code);\n\n        // 6. Si hay fase, cargar disciplinas\n        if (activity.phase) {\n          await fetchDisciplines(activity.project_code, activity.phase);\n\n          // 7. Si hay disciplina, cargar actividades\n          if (activity.discipline) {\n            await fetchActivities(activity.project_code, activity.phase, activity.discipline);\n          }\n        }\n      }\n\n      // Desplazar al formulario\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } catch (error) {\n      console.error('Error al cargar la actividad para edición:', error);\n      toast.error('Error al cargar la actividad para edición');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        form: false\n      }));\n    }\n  }, [fetchStages, fetchDisciplines, fetchActivities, selectedDate, formData, employeeId]);\n  const handleDelete = async idToDelete => {\n    try {\n      setLoading(prev => ({\n        ...prev,\n        delete: idToDelete\n      }));\n\n      // Mostrar mensaje de carga\n      const toastId = toast.loading('Eliminando actividad...');\n\n      // Convertir a número si es necesario para la función deleteHour\n      await deleteHour(Number(idToDelete));\n\n      // Actualizar la lista de actividades\n      await refreshDailyActivities(selectedDate, String(employeeId));\n\n      // Si la actividad eliminada es la que se estaba editando, limpiar el formulario\n      if (editingActivityId === idToDelete) {\n        resetForm();\n      }\n\n      // Mostrar mensaje de éxito\n      toast.success('Actividad eliminada correctamente', {\n        id: toastId,\n        duration: 3000\n      });\n    } catch (error) {\n      console.error('Error al eliminar la actividad:', error);\n      toast.error('Error al eliminar la actividad. Por favor, intente nuevamente.', {\n        duration: 4000\n      });\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        delete: null\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validar campos requeridos\n    const requiredFields = ['project_code', 'phase', 'discipline', 'activity', 'hours'];\n    const missingFields = requiredFields.filter(field => {\n      const value = formData[field];\n      // Considerar el campo como faltante si es undefined, null, string vacío o array/objeto vacío\n      return value === undefined || value === null || value === '' || Array.isArray(value) && value.length === 0 || typeof value === 'object' && Object.keys(value).length === 0;\n    });\n    if (missingFields.length > 0) {\n      toast.error('Por favor complete todos los campos requeridos.', {\n        duration: 3000\n      });\n      return;\n    }\n\n    // Validar formato de horas\n    const hoursValue = typeof formData.hours === 'string' ? parseFloat(formData.hours.replace(',', '.')) : formData.hours;\n    if (isNaN(hoursValue) || hoursValue <= 0) {\n      toast.error('Por favor ingrese un número válido de horas.', {\n        duration: 3000\n      });\n      return;\n    }\n    setLoading(prev => ({\n      ...prev,\n      submit: true\n    }));\n    try {\n      // Buscar el nombre del proyecto\n      const project = projects.find(p => p.code === formData.project_code);\n\n      // Preparar datos para enviar\n      const submissionData = {\n        project_code: formData.project_code,\n        phase: formData.phase,\n        discipline: formData.discipline,\n        activity: formData.activity,\n        hours: hoursValue,\n        note: formData.note || '',\n        date: format(selectedDate, 'yyyy-MM-dd'),\n        project_name: (project === null || project === void 0 ? void 0 : project.name) || formData.project_code,\n        employee_id: employeeId,\n        // Solo incluir el ID si estamos editando una actividad existente\n        ...(editingActivityId && {\n          id: editingActivityId\n        })\n      };\n      console.log('Datos a enviar:', submissionData);\n\n      // Mostrar mensaje de carga\n      const loadingMessage = editingActivityId ? 'Actualizando actividad...' : 'Guardando actividad...';\n      const toastId = toast.loading(loadingMessage);\n      try {\n        // Usar updateHour si estamos editando, de lo contrario usar submitHours\n        if (editingActivityId) {\n          await updateHour(Number(editingActivityId), {\n            date: format(selectedDate, 'yyyy-MM-dd'),\n            employee_id: employeeId,\n            project_code: formData.project_code,\n            phase: formData.phase,\n            discipline: formData.discipline,\n            activity: formData.activity,\n            hours: hoursValue,\n            note: formData.note || ''\n          });\n        } else {\n          await submitHours(submissionData);\n        }\n\n        // Mostrar mensaje de éxito\n        toast.success(`Actividad ${editingActivityId ? 'actualizada' : 'guardada'} con éxito.`, {\n          id: toastId,\n          duration: 3000,\n          style: {\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            fontSize: '14px',\n            padding: '12px 20px',\n            borderRadius: '4px'\n          }\n        });\n\n        // Limpiar formulario y actualizar lista de actividades\n        resetForm();\n        await refreshDailyActivities(selectedDate, String(employeeId));\n\n        // Llamar a la función de éxito si existe\n        if (onSuccess) {\n          onSuccess();\n        }\n      } catch (error) {\n        // Mostrar mensaje de error específico\n        toast.error(`Error al ${editingActivityId ? 'actualizar' : 'guardar'} la actividad.`, {\n          id: toastId,\n          duration: 4000\n        });\n        throw error; // Relanzar el error para que sea capturado por el catch externo\n      }\n    } catch (error) {\n      console.error('Error al guardar la actividad:', error);\n      toast.error('Error al guardar la actividad. Por favor, intente nuevamente.', {\n        duration: 4000,\n        style: {\n          backgroundColor: '#dc3545',\n          color: 'white',\n          fontSize: '14px',\n          padding: '12px 20px',\n          borderRadius: '4px'\n        }\n      });\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        submit: false\n      }));\n    }\n  };\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userName: employeeName,\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 sm:p-6 lg:p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-5 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"lg:col-span-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"relative z-10\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \"flex items-center justify-center\",\n                children: [editingActivityId ? /*#__PURE__*/_jsxDEV(Pencil, {\n                  className: \"mr-2 h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(PlusCircle, {\n                  className: \"mr-2 h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 21\n                }, this), editingActivityId ? 'Editar Actividad' : 'Registrar Actividad']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full md:w-1/3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"date\",\n                    className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                    children: \"Fecha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Popover, {\n                    children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n                      asChild: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline\",\n                        className: cn('w-full justify-start text-left font-normal', !selectedDate && 'text-muted-foreground'),\n                        children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                          className: \"mr-2 h-4 w-4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 603,\n                          columnNumber: 27\n                        }, this), selectedDate ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: format(selectedDate, 'PPP', {\n                            locale: es\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 605,\n                          columnNumber: 29\n                        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Seleccione una fecha\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 607,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 596,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n                      className: \"w-auto p-0\",\n                      children: /*#__PURE__*/_jsxDEV(Calendar, {\n                        mode: \"single\",\n                        selected: selectedDate,\n                        onSelect: handleDateChange,\n                        initialFocus: true,\n                        locale: es\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 613,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n                  children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"C\\xF3digo de Proyecto\",\n                    name: \"project_code\",\n                    value: formData.project_code,\n                    onValueChange: handleSelectChange,\n                    options: projects.map(p => ({\n                      value: p.code,\n                      label: p.code,\n                      // En el trigger solo se ve el código\n                      dropdownLabel: `${p.code} - ${p.name}` // En la lista: código - nombre\n                    })),\n                    placeholder: \"Seleccione un proyecto\",\n                    loading: loading.projects,\n                    disabled: loading.projects,\n                    icon: /*#__PURE__*/_jsxDEV(Briefcase, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 29\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                      children: \"Nombre del Proyecto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: selectedProjectName,\n                      readOnly: true,\n                      className: \"bg-muted/50\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"Etapa\",\n                    name: \"phase\",\n                    value: formData.phase,\n                    onValueChange: handleSelectChange,\n                    options: stages.map(s => ({\n                      value: s,\n                      label: s\n                    })),\n                    placeholder: \"Seleccione una etapa\",\n                    loading: loading.stages,\n                    disabled: !formData.project_code || loading.stages,\n                    icon: /*#__PURE__*/_jsxDEV(ListChecks, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 29\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"Disciplina\",\n                    name: \"discipline\",\n                    value: formData.discipline,\n                    onValueChange: handleSelectChange,\n                    options: disciplines.map(d => ({\n                      value: d,\n                      label: d\n                    })),\n                    placeholder: \"Seleccione una disciplina\",\n                    loading: loading.disciplines,\n                    disabled: !formData.phase || loading.disciplines,\n                    icon: /*#__PURE__*/_jsxDEV(Pencil, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 29\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"Actividad\",\n                    name: \"activity\",\n                    value: formData.activity,\n                    onValueChange: handleSelectChange,\n                    options: activities.map(a => ({\n                      value: a,\n                      label: a\n                    })),\n                    placeholder: \"Seleccione una actividad\",\n                    loading: loading.activities,\n                    disabled: !formData.discipline || loading.activities,\n                    icon: /*#__PURE__*/_jsxDEV(ClipboardList, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 29\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"hours\",\n                      className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                      children: [\"Horas \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-destructive\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 693,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"hours\",\n                      name: \"hours\",\n                      type: \"number\",\n                      value: formData.hours,\n                      onChange: handleChange,\n                      min: \"0.5\",\n                      step: \"0.5\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"note\",\n                    className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                    children: \"Nota (Opcional)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"note\",\n                    name: \"note\",\n                    value: formData.note,\n                    onChange: handleChange,\n                    onKeyDown: handleNoteKeyDown,\n                    rows: 3,\n                    className: \"flex h-20 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    placeholder: \"Escriba una nota (opcional)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-end items-center gap-3 pt-4\",\n                  children: [editingActivityId && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"outline\",\n                    onClick: resetForm,\n                    children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                      className: \"mr-2 h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 25\n                    }, this), \"Cancelar Edici\\xF3n\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    disabled: !isFormValid || loading.submit,\n                    className: \"min-w-[150px]\",\n                    children: [loading.submit ? /*#__PURE__*/_jsxDEV(Loader2, {\n                      className: \"mr-2 h-4 w-4 animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(Save, {\n                      className: \"mr-2 h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 25\n                    }, this), editingActivityId ? 'Actualizar' : 'Guardar']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \"text-center\",\n                children: \"Actividades del D\\xEDa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: loading.dailyActivities ? /*#__PURE__*/_jsxDEV(ActivityListSkeleton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this) : dailyActivities.length > 0 ? dailyActivities.map(activity => /*#__PURE__*/_jsxDEV(ActivityItem, {\n                  activity: activity,\n                  onEdit: handleEditActivity,\n                  onDelete: handleDelete\n                }, activity.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(EmptyState, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-6\",\n                children: /*#__PURE__*/_jsxDEV(TotalHoursProgress, {\n                  totalHours: totalHoursToday,\n                  selectedDate: selectedDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 567,\n    columnNumber: 5\n  }, this);\n};\n_s(FormularioHoras, \"dYAYnrH2wybwbYpuIFOPmt1Z2Tk=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","format","parseISO","es","Header","toast","Calendar","CalendarIcon","Briefcase","Save","Pencil","ListChecks","ClipboardList","XCircle","PlusCircle","Loader2","Card","CardContent","CardHeader","CardTitle","Button","Input","Popover","PopoverContent","PopoverTrigger","cn","FormSelect","ActivityItem","ActivityListSkeleton","EmptyState","TotalHoursProgress","submitHours","getProjects","getProjectStages","getDisciplinesByStage","getActivitiesByDiscipline","getDailyActivities","deleteHour","updateHour","jsxDEV","_jsxDEV","initialFormData","employeeId","employee_id","String","project_code","phase","discipline","activity","hours","note","FormularioHoras","onSuccess","employeeName","onLogout","_s","formData","setFormData","selectedDate","setSelectedDate","Date","dailyActivities","setDailyActivities","projects","setProjects","stages","setStages","disciplines","setDisciplines","activities","setActivities","editingActivityId","setEditingActivityId","loading","setLoading","submit","delete","totalHoursToday","reduce","sum","a","selectedProjectName","_projects$find","find","p","code","name","hoursNumber","_formData$hours","raw","replace","trim","n","Number","isFinite","isFormValid","required","allFilled","every","v","length","Boolean","refreshDailyActivities","date","id","prev","dateString","acts","error","console","fetchProjects","projectData","fetchStages","projectCode","stageData","validStages","filter","stage","map","fetchDisciplines","disciplineData","validDisciplines","fetchActivities","activityData","validActivities","handleDateChange","handleChange","e","value","target","handleNoteKeyDown","key","shiftKey","preventDefault","handleSelectChange","updatedFormData","resetForm","handleEditActivity","form","activityDate","Promise","resolve","setTimeout","initialData","window","scrollTo","top","behavior","handleDelete","idToDelete","toastId","success","duration","handleSubmit","requiredFields","missingFields","field","undefined","Array","isArray","Object","keys","hoursValue","parseFloat","isNaN","project","submissionData","project_name","log","loadingMessage","style","backgroundColor","color","border","fontSize","padding","borderRadius","children","userName","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","asChild","variant","locale","mode","selected","onSelect","initialFocus","label","onValueChange","options","dropdownLabel","placeholder","disabled","icon","readOnly","s","d","type","onChange","min","step","onKeyDown","rows","onClick","onEdit","onDelete","totalHours","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { format, parseISO } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport Header from './Header';\n\nimport { toast } from 'sonner';\nimport {\n  Calendar as CalendarIcon,\n  Briefcase,\n  Save,\n  Pencil,\n  ListChecks,\n  ClipboardList,\n  XCircle,\n  PlusCircle,\n  Loader2,\n} from 'lucide-react';\n\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Calendar } from './ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { cn } from '../lib/utils';\n\nimport { FormSelect } from './formulario/FormSelect';\nimport { ActivityItem } from './formulario/ActivityItem';\nimport { ActivityListSkeleton } from './formulario/ActivityListSkeleton';\nimport { EmptyState } from './formulario/EmptyState';\nimport { TotalHoursProgress } from './formulario/TotalHoursProgress';\n\nimport {\n  submitHours,\n  getProjects,\n  getProjectStages,\n  getDisciplinesByStage,\n  getActivitiesByDiscipline,\n  getDailyActivities,\n  deleteHour,\n} from '../api/horasApi';\nimport { updateHour } from '../api/horasApiFUNCIONANDO';\n\n// Props e interfaces\ninterface FormularioHorasProps {\n  onSuccess: () => void;\n  employeeId: number;\n  employeeName: string;\n  onLogout: () => void;\n}\n\ninterface Project {\n  code: string;\n  name: string;\n}\n\n// Importar la interfaz DailyActivity desde horasApi\nimport { DailyActivity } from '../api/horasApi';\n\n// Usar la interfaz DailyActivity en lugar de definir Activity\ntype Activity = DailyActivity;\n\nconst initialFormData = (employeeId: number) => ({\n  employee_id: String(employeeId),\n  project_code: '',\n  phase: '',\n  discipline: '',\n  activity: '',\n  hours: '',\n  note: '',\n});\n\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({\n  onSuccess,\n  employeeId,\n  employeeName,\n  onLogout,\n}) => {\n  // State\n  const [formData, setFormData] = useState(initialFormData(employeeId));\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [dailyActivities, setDailyActivities] = useState<Activity[]>([]);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [stages, setStages] = useState<string[]>([]);\n  const [disciplines, setDisciplines] = useState<string[]>([]);\n  const [activities, setActivities] = useState<string[]>([]);\n  const [editingActivityId, setEditingActivityId] = useState<string | null>(null);\n\n  // Loading\n  const [loading, setLoading] = useState({\n    submit: false,\n    projects: true,\n    stages: false,\n    disciplines: false,\n    activities: false,\n    dailyActivities: true,\n    delete: null as string | null, // ID de la actividad que se está eliminando o null\n  });\n\n  // Derivados\n  const totalHoursToday = useMemo(\n    () => dailyActivities.reduce((sum, a) => sum + a.hours, 0),\n    [dailyActivities]\n  );\n\n  const selectedProjectName = useMemo(\n    () => projects.find((p) => p.code === formData.project_code)?.name || '',\n    [formData.project_code, projects]\n  );\n\n  // Normaliza horas: '1,5' -> 1.5\n  const hoursNumber = useMemo(() => {\n    const raw = String(formData.hours ?? '').replace(',', '.').trim();\n    const n = Number(raw);\n    return Number.isFinite(n) ? n : 0;\n  }, [formData.hours]);\n\n  // Validación booleana real\n  const isFormValid = useMemo(() => {\n    const required = [\n      formData.project_code,\n      formData.phase,\n      formData.discipline,\n      formData.activity,\n    ];\n    const allFilled = required.every((v) =>\n      typeof v === 'string' ? v.trim().length > 0 : Boolean(v)\n    );\n    return allFilled && hoursNumber > 0;\n  }, [formData.project_code, formData.phase, formData.discipline, formData.activity, hoursNumber]);\n\n  // Fetchers\n  const refreshDailyActivities = useCallback(async (date: Date, id: string) => {\n    setLoading((prev) => ({ ...prev, dailyActivities: true }));\n    try {\n      const dateString = format(date, 'yyyy-MM-dd');\n      const acts = await getDailyActivities(dateString, Number(id));\n      setDailyActivities(acts);\n    } catch (error) {\n      toast.error('Error al cargar las actividades del día.');\n      console.error(error);\n    } finally {\n      setLoading((prev) => ({ ...prev, dailyActivities: false }));\n    }\n  }, []);\n\n  const fetchProjects = useCallback(async () => {\n    setLoading((prev) => ({ ...prev, projects: true }));\n    try {\n      const projectData = await getProjects();\n      setProjects(projectData);\n    } catch (error) {\n      toast.error('Error al cargar proyectos.');\n      console.error(error);\n    } finally {\n      setLoading((prev) => ({ ...prev, projects: false }));\n    }\n  }, []);\n\n  const fetchStages = useCallback(async (projectCode: string) => {\n    if (!projectCode) return;\n    \n    setLoading((prev) => ({ ...prev, stages: true }));\n    try {\n      const stageData = await getProjectStages(projectCode);\n      // Filtrar valores nulos o vacíos y convertir a string\n      const validStages = stageData\n        .filter((stage: any) => stage != null && String(stage).trim() !== '')\n        .map(String);\n      \n      setStages(validStages);\n      return validStages;\n    } catch (error) {\n      console.error('Error al cargar las etapas:', error);\n      toast.error('Error al cargar las etapas del proyecto.');\n      setStages([]);\n      return [];\n    } finally {\n      setLoading((prev) => ({ ...prev, stages: false }));\n    }\n  }, []);\n\n  const fetchDisciplines = useCallback(async (projectCode: string, stage: string) => {\n    if (!projectCode || !stage) {\n      setDisciplines([]);\n      return [];\n    }\n    \n    setLoading((prev) => ({ ...prev, disciplines: true }));\n    try {\n      const disciplineData = await getDisciplinesByStage(projectCode, stage);\n      // Filtrar valores nulos o vacíos y convertir a string\n      const validDisciplines = disciplineData\n        .filter((discipline: any) => discipline != null && String(discipline).trim() !== '')\n        .map(String);\n      \n      setDisciplines(validDisciplines);\n      return validDisciplines;\n    } catch (error) {\n      console.error('Error al cargar las disciplinas:', error);\n      toast.error('Error al cargar las disciplinas.');\n      setDisciplines([]);\n      return [];\n    } finally {\n      setLoading((prev) => ({ ...prev, disciplines: false }));\n    }\n  }, []);\n\n  const fetchActivities = useCallback(\n    async (projectCode: string, stage: string, discipline: string) => {\n      if (!projectCode || !stage || !discipline) {\n        setActivities([]);\n        return [];\n      }\n      \n      setLoading((prev) => ({ ...prev, activities: true }));\n      try {\n        const activityData = await getActivitiesByDiscipline(projectCode, stage, discipline);\n        // Filtrar valores nulos o vacíos y convertir a string\n        const validActivities = activityData\n          .filter((activity: any) => activity != null && String(activity).trim() !== '')\n          .map(String);\n        \n        setActivities(validActivities);\n        return validActivities;\n      } catch (error) {\n        console.error('Error al cargar las actividades:', error);\n        toast.error('Error al cargar las actividades.');\n        setActivities([]);\n        return [];\n      } finally {\n        setLoading((prev) => ({ ...prev, activities: false }));\n      }\n    },\n    []\n  );\n\n  // Effects\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n\n  useEffect(() => {\n    refreshDailyActivities(selectedDate, String(employeeId));\n  }, [selectedDate, employeeId, refreshDailyActivities]);\n\n  // Handlers\n  const handleDateChange = (date: Date | undefined) => {\n    if (date) {\n      setSelectedDate(date);\n      refreshDailyActivities(date, String(employeeId));\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    const v = name === 'hours' ? value.replace(',', '.') : value;\n    setFormData((prev) => ({ ...prev, [name]: v }));\n  };\n\n  // Manejar la tecla Enter en el textarea de notas\n  const handleNoteKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n    }\n  };\n\n  const handleSelectChange = async (name: string, value: string) => {\n    // Crear una copia actualizada del formulario\n    const updatedFormData = { ...formData, [name]: value };\n\n    // Manejar cambios en cascada basados en el campo modificado\n    switch (name) {\n      case 'project_code':\n        // Limpiar campos dependientes\n        updatedFormData.phase = '';\n        updatedFormData.discipline = '';\n        updatedFormData.activity = '';\n        \n        // Limpiar estados de opciones\n        setStages([]);\n        setDisciplines([]);\n        setActivities([]);\n        \n        // Cargar etapas si hay un proyecto seleccionado\n        if (value) {\n          await fetchStages(value);\n        }\n        break;\n        \n      case 'phase':\n        // Limpiar campos dependientes\n        updatedFormData.discipline = '';\n        updatedFormData.activity = '';\n        \n        // Limpiar estados de opciones dependientes\n        setDisciplines([]);\n        setActivities([]);\n        \n        // Cargar disciplinas si hay una fase seleccionada\n        if (value && updatedFormData.project_code) {\n          await fetchDisciplines(updatedFormData.project_code, value);\n        }\n        break;\n        \n      case 'discipline':\n        // Limpiar actividad\n        updatedFormData.activity = '';\n        \n        // Limpiar actividades\n        setActivities([]);\n        \n        // Cargar actividades si hay una disciplina seleccionada\n        if (value && updatedFormData.project_code && updatedFormData.phase) {\n          await fetchActivities(\n            updatedFormData.project_code, \n            updatedFormData.phase, \n            value\n          );\n        }\n        break;\n    }\n\n    // Actualizar el estado del formulario\n    setFormData(updatedFormData);\n  };\n\n  const resetForm = useCallback(() => {\n    setFormData(initialFormData(employeeId));\n    setEditingActivityId(null);\n  }, [employeeId]);\n\n  // Precarga dependencias al editar + rellena form\n  const handleEditActivity = useCallback(\n    async (activity: Activity) => {\n      try {\n        setLoading(prev => ({ ...prev, form: true }));\n        \n        // 1. Primero actualizamos la fecha si es necesario\n        if (activity.date) {\n          try {\n            const activityDate = parseISO(activity.date);\n            // Solo actualizar la fecha si es diferente a la actual\n            if (format(activityDate, 'yyyy-MM-dd') !== format(selectedDate, 'yyyy-MM-dd')) {\n              setSelectedDate(activityDate);\n              // Esperamos un momento para que se actualice la fecha\n              await new Promise(resolve => setTimeout(resolve, 100));\n            }\n          } catch (error) {\n            console.error('Error al analizar la fecha:', error);\n          }\n        }\n\n        // 2. Establecer el ID de edición y datos iniciales del formulario\n        setEditingActivityId(activity.id);\n        \n        // 3. Crear un objeto con los datos iniciales\n        const initialData = {\n          ...initialFormData(employeeId),\n          project_code: activity.project_code || '',\n          phase: activity.phase || '',\n          discipline: activity.discipline || '',\n          activity: activity.activity || '',\n          hours: activity.hours ? String(activity.hours).replace('.', ',') : '',\n          note: activity.note || '',\n        };\n        \n        // 4. Actualizar el formulario con los datos iniciales\n        setFormData(initialData);\n        \n        // 5. Si hay proyecto, cargar etapas\n        if (activity.project_code) {\n          await fetchStages(activity.project_code);\n          \n          // 6. Si hay fase, cargar disciplinas\n          if (activity.phase) {\n            await fetchDisciplines(activity.project_code, activity.phase);\n            \n            // 7. Si hay disciplina, cargar actividades\n            if (activity.discipline) {\n              await fetchActivities(\n                activity.project_code, \n                activity.phase, \n                activity.discipline\n              );\n            }\n          }\n        }\n\n        // Desplazar al formulario\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n        \n      } catch (error) {\n        console.error('Error al cargar la actividad para edición:', error);\n        toast.error('Error al cargar la actividad para edición');\n      } finally {\n        setLoading(prev => ({ ...prev, form: false }));\n      }\n    },\n    [fetchStages, fetchDisciplines, fetchActivities, selectedDate, formData, employeeId]\n  );\n\n  const handleDelete = async (idToDelete: string) => {\n    try {\n      setLoading(prev => ({ ...prev, delete: idToDelete }));\n      \n      // Mostrar mensaje de carga\n      const toastId = toast.loading('Eliminando actividad...');\n      \n      // Convertir a número si es necesario para la función deleteHour\n      await deleteHour(Number(idToDelete));\n      \n      // Actualizar la lista de actividades\n      await refreshDailyActivities(selectedDate, String(employeeId));\n      \n      // Si la actividad eliminada es la que se estaba editando, limpiar el formulario\n      if (editingActivityId === idToDelete) {\n        resetForm();\n      }\n      \n      // Mostrar mensaje de éxito\n      toast.success('Actividad eliminada correctamente', { \n        id: toastId,\n        duration: 3000,\n      });\n      \n    } catch (error) {\n      console.error('Error al eliminar la actividad:', error);\n      toast.error('Error al eliminar la actividad. Por favor, intente nuevamente.', { \n        duration: 4000,\n      });\n    } finally {\n      setLoading(prev => ({ ...prev, delete: null }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validar campos requeridos\n    const requiredFields: (keyof typeof formData)[] = ['project_code', 'phase', 'discipline', 'activity', 'hours'];\n    const missingFields = requiredFields.filter(field => {\n      const value = formData[field];\n      // Considerar el campo como faltante si es undefined, null, string vacío o array/objeto vacío\n      return value === undefined || value === null || value === '' || \n             (Array.isArray(value) && value.length === 0) ||\n             (typeof value === 'object' && Object.keys(value).length === 0);\n    });\n    \n    if (missingFields.length > 0) {\n      toast.error('Por favor complete todos los campos requeridos.', { duration: 3000 });\n      return;\n    }\n\n    // Validar formato de horas\n    const hoursValue = typeof formData.hours === 'string' \n      ? parseFloat(formData.hours.replace(',', '.')) \n      : formData.hours;\n      \n    if (isNaN(hoursValue) || hoursValue <= 0) {\n      toast.error('Por favor ingrese un número válido de horas.', { duration: 3000 });\n      return;\n    }\n\n    setLoading((prev) => ({ ...prev, submit: true }));\n\n    try {\n      // Buscar el nombre del proyecto\n      const project = projects.find(p => p.code === formData.project_code);\n      \n      // Preparar datos para enviar\n      const submissionData = {\n        project_code: formData.project_code,\n        phase: formData.phase,\n        discipline: formData.discipline,\n        activity: formData.activity,\n        hours: hoursValue,\n        note: formData.note || '',\n        date: format(selectedDate, 'yyyy-MM-dd'),\n        project_name: project?.name || formData.project_code,\n        employee_id: employeeId,\n        // Solo incluir el ID si estamos editando una actividad existente\n        ...(editingActivityId && { id: editingActivityId })\n      };\n      \n      console.log('Datos a enviar:', submissionData);\n\n      // Mostrar mensaje de carga\n      const loadingMessage = editingActivityId \n        ? 'Actualizando actividad...' \n        : 'Guardando actividad...';\n      \n      const toastId = toast.loading(loadingMessage);\n\n      try {\n        // Usar updateHour si estamos editando, de lo contrario usar submitHours\n        if (editingActivityId) {\n          await updateHour(Number(editingActivityId), {\n            date: format(selectedDate, 'yyyy-MM-dd'),\n            employee_id: employeeId,\n            project_code: formData.project_code,\n            phase: formData.phase,\n            discipline: formData.discipline,\n            activity: formData.activity,\n            hours: hoursValue,\n            note: formData.note || ''\n          });\n        } else {\n          await submitHours(submissionData);\n        }\n        \n        // Mostrar mensaje de éxito\n        toast.success(\n          `Actividad ${editingActivityId ? 'actualizada' : 'guardada'} con éxito.`,\n          { \n            id: toastId,\n            duration: 3000,\n            style: { \n              backgroundColor: '#28a745', \n              color: 'white', \n              border: 'none',\n              fontSize: '14px',\n              padding: '12px 20px',\n              borderRadius: '4px'\n            }\n          }\n        );\n        \n        // Limpiar formulario y actualizar lista de actividades\n        resetForm();\n        await refreshDailyActivities(selectedDate, String(employeeId));\n        \n        // Llamar a la función de éxito si existe\n        if (onSuccess) {\n          onSuccess();\n        }\n      } catch (error) {\n        // Mostrar mensaje de error específico\n        toast.error(\n          `Error al ${editingActivityId ? 'actualizar' : 'guardar'} la actividad.`, \n          { id: toastId, duration: 4000 }\n        );\n        throw error; // Relanzar el error para que sea capturado por el catch externo\n      }\n      \n    } catch (error) {\n      console.error('Error al guardar la actividad:', error);\n      toast.error(\n        'Error al guardar la actividad. Por favor, intente nuevamente.', \n        { \n          duration: 4000,\n          style: { \n            backgroundColor: '#dc3545', \n            color: 'white',\n            fontSize: '14px',\n            padding: '12px 20px',\n            borderRadius: '4px'\n          } \n        }\n      );\n    } finally {\n      setLoading((prev) => ({ ...prev, submit: false }));\n    }\n  };\n\n  // Render\n  return (\n    <div>\n      <Header userName={employeeName} onLogout={onLogout} />\n      <div className=\"container mx-auto p-4 sm:p-6 lg:p-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-8\">\n          <main className=\"lg:col-span-3\">\n            {/* z-10 evita que el Popover tape el botón */}\n            <Card className=\"relative z-10\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-center\">\n                  {editingActivityId ? (\n                    <Pencil className=\"mr-2 h-5 w-5\" />\n                  ) : (\n                    <PlusCircle className=\"mr-2 h-5 w-5\" />\n                  )}\n                  {editingActivityId ? 'Editar Actividad' : 'Registrar Actividad'}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"w-full md:w-1/3\">\n                    <label\n                      htmlFor=\"date\"\n                      className=\"block text-sm font-medium text-foreground/80 mb-1\"\n                    >\n                      Fecha\n                    </label>\n\n                    <Popover>\n                      <PopoverTrigger asChild>\n                        <Button\n                          variant=\"outline\"\n                          className={cn(\n                            'w-full justify-start text-left font-normal',\n                            !selectedDate && 'text-muted-foreground'\n                          )}\n                        >\n                          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                          {selectedDate ? (\n                            <span>{format(selectedDate, 'PPP', { locale: es })}</span>\n                          ) : (\n                            <span>Seleccione una fecha</span>\n                          )}\n                        </Button>\n                      </PopoverTrigger>\n\n                      <PopoverContent className=\"w-auto p-0\">\n                        <Calendar\n                          mode=\"single\"\n                          selected={selectedDate}\n                          onSelect={handleDateChange}\n                          initialFocus\n                          locale={es}\n                        />\n                      </PopoverContent>\n                    </Popover>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormSelect\n                      label=\"Código de Proyecto\"\n                      name=\"project_code\"\n                      value={formData.project_code}\n                      onValueChange={handleSelectChange}\n                      options={projects.map((p) => ({\n                        value: p.code,\n                        label: p.code, // En el trigger solo se ve el código\n                        dropdownLabel: `${p.code} - ${p.name}`, // En la lista: código - nombre\n                      }))}\n                      placeholder=\"Seleccione un proyecto\"\n                      loading={loading.projects}\n                      disabled={loading.projects}\n                      icon={<Briefcase className=\"h-4 w-4\" />}\n                      required\n                    />\n\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-foreground/80 mb-1\">\n                        Nombre del Proyecto\n                      </label>\n                      <Input value={selectedProjectName} readOnly className=\"bg-muted/50\" />\n                    </div>\n\n                    <FormSelect\n                      label=\"Etapa\"\n                      name=\"phase\"\n                      value={formData.phase}\n                      onValueChange={handleSelectChange}\n                      options={stages.map((s) => ({ value: s, label: s }))}\n                      placeholder=\"Seleccione una etapa\"\n                      loading={loading.stages}\n                      disabled={!formData.project_code || loading.stages}\n                      icon={<ListChecks className=\"h-4 w-4\" />}\n                      required\n                    />\n\n                    <FormSelect\n                      label=\"Disciplina\"\n                      name=\"discipline\"\n                      value={formData.discipline}\n                      onValueChange={handleSelectChange}\n                      options={disciplines.map((d) => ({ value: d, label: d }))}\n                      placeholder=\"Seleccione una disciplina\"\n                      loading={loading.disciplines}\n                      disabled={!formData.phase || loading.disciplines}\n                      icon={<Pencil className=\"h-4 w-4\" />}\n                      required\n                    />\n\n                    <FormSelect\n                      label=\"Actividad\"\n                      name=\"activity\"\n                      value={formData.activity}\n                      onValueChange={handleSelectChange}\n                      options={activities.map((a) => ({ value: a, label: a }))}\n                      placeholder=\"Seleccione una actividad\"\n                      loading={loading.activities}\n                      disabled={!formData.discipline || loading.activities}\n                      icon={<ClipboardList className=\"h-4 w-4\" />}\n                      required\n                    />\n\n                    <div className=\"space-y-2\">\n                      <label\n                        htmlFor=\"hours\"\n                        className=\"block text-sm font-medium text-foreground/80 mb-1\"\n                      >\n                        Horas <span className=\"text-destructive\">*</span>\n                      </label>\n                      <Input\n                        id=\"hours\"\n                        name=\"hours\"\n                        type=\"number\"\n                        value={formData.hours}\n                        onChange={handleChange}\n                        min=\"0.5\"\n                        step=\"0.5\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label\n                      htmlFor=\"note\"\n                      className=\"block text-sm font-medium text-foreground/80 mb-1\"\n                    >\n                      Nota (Opcional)\n                    </label>\n                    <textarea\n                      id=\"note\"\n                      name=\"note\"\n                      value={formData.note}\n                      onChange={handleChange}\n                      onKeyDown={handleNoteKeyDown}\n                      rows={3}\n                      className=\"flex h-20 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                      placeholder=\"Escriba una nota (opcional)\"\n                    />\n                  </div>\n\n                  <div className=\"flex justify-end items-center gap-3 pt-4\">\n                    {editingActivityId && (\n                      <Button type=\"button\" variant=\"outline\" onClick={resetForm}>\n                        <XCircle className=\"mr-2 h-4 w-4\" />\n                        Cancelar Edición\n                      </Button>\n                    )}\n\n                    <Button\n                      type=\"submit\"\n                      disabled={!isFormValid || loading.submit}\n                      className=\"min-w-[150px]\"\n                    >\n                      {loading.submit ? (\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      ) : (\n                        <Save className=\"mr-2 h-4 w-4\" />\n                      )}\n                      {editingActivityId ? 'Actualizar' : 'Guardar'}\n                    </Button>\n                  </div>\n                </form>\n              </CardContent>\n            </Card>\n          </main>\n\n          <aside className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-center\">Actividades del Día</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {loading.dailyActivities ? (\n                    <ActivityListSkeleton />\n                  ) : dailyActivities.length > 0 ? (\n                    dailyActivities.map((activity) => (\n                      <ActivityItem\n                        key={activity.id}\n                        activity={activity}\n                        onEdit={handleEditActivity}\n                        onDelete={handleDelete}\n                      />\n                    ))\n                  ) : (\n                    <EmptyState />\n                  )}\n                </div>\n                <div className=\"mt-6\">\n                  <TotalHoursProgress totalHours={totalHoursToday} selectedDate={selectedDate} />\n                </div>\n              </CardContent>\n            </Card>\n          </aside>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormularioHoras;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}