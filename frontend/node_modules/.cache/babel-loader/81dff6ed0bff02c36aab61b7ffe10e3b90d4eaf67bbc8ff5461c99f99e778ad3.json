{"ast":null,"code":"import { defaultDateLib } from \"./DateLib.js\";\n/**\n * Represents a day displayed in the calendar.\n *\n * In DayPicker, a `CalendarDay` is a wrapper around a `Date` object that\n * provides additional information about the day, such as whether it belongs to\n * the displayed month.\n */\nexport class CalendarDay {\n  constructor(date, displayMonth, dateLib = defaultDateLib) {\n    this.date = date;\n    this.displayMonth = displayMonth;\n    this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n    this.dateLib = dateLib;\n  }\n  /**\n   * Checks if this day is equal to another `CalendarDay`, considering both the\n   * date and the displayed month.\n   *\n   * @param day The `CalendarDay` to compare with.\n   * @returns `true` if the days are equal, otherwise `false`.\n   */\n  isEqualTo(day) {\n    return this.dateLib.isSameDay(day.date, this.date) && this.dateLib.isSameMonth(day.displayMonth, this.displayMonth);\n  }\n}","map":{"version":3,"names":["defaultDateLib","CalendarDay","constructor","date","displayMonth","dateLib","outside","Boolean","isSameMonth","isEqualTo","day","isSameDay"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/classes/CalendarDay.js"],"sourcesContent":["import { defaultDateLib } from \"./DateLib.js\";\n/**\n * Represents a day displayed in the calendar.\n *\n * In DayPicker, a `CalendarDay` is a wrapper around a `Date` object that\n * provides additional information about the day, such as whether it belongs to\n * the displayed month.\n */\nexport class CalendarDay {\n    constructor(date, displayMonth, dateLib = defaultDateLib) {\n        this.date = date;\n        this.displayMonth = displayMonth;\n        this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n        this.dateLib = dateLib;\n    }\n    /**\n     * Checks if this day is equal to another `CalendarDay`, considering both the\n     * date and the displayed month.\n     *\n     * @param day The `CalendarDay` to compare with.\n     * @returns `true` if the days are equal, otherwise `false`.\n     */\n    isEqualTo(day) {\n        return (this.dateLib.isSameDay(day.date, this.date) &&\n            this.dateLib.isSameMonth(day.displayMonth, this.displayMonth));\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,CAAC;EACrBC,WAAWA,CAACC,IAAI,EAAEC,YAAY,EAAEC,OAAO,GAAGL,cAAc,EAAE;IACtD,IAAI,CAACG,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACE,OAAO,GAAGC,OAAO,CAACH,YAAY,IAAI,CAACC,OAAO,CAACG,WAAW,CAACL,IAAI,EAAEC,YAAY,CAAC,CAAC;IAChF,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACII,SAASA,CAACC,GAAG,EAAE;IACX,OAAQ,IAAI,CAACL,OAAO,CAACM,SAAS,CAACD,GAAG,CAACP,IAAI,EAAE,IAAI,CAACA,IAAI,CAAC,IAC/C,IAAI,CAACE,OAAO,CAACG,WAAW,CAACE,GAAG,CAACN,YAAY,EAAE,IAAI,CAACA,YAAY,CAAC;EACrE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}