{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\n// FormularioHoras.tsx\nimport React, { useState, useEffect } from 'react';\nimport InputField from './InputField';\nimport SelectField from './SelectField';\nimport TextareaField from './TextareaField';\nimport DatePicker from './DatePicker';\nimport { submitHours, getProjects, getEmployees, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline } from './horasApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormularioHoras = ({\n  onSuccess\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    employee_id: '',\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: ''\n  });\n  const [projects, setProjects] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [disciplines, setDisciplines] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [loadingProjects, setLoadingProjects] = useState(false);\n  const [loadingEmployees, setLoadingEmployees] = useState(false);\n  const [loadingStages, setLoadingStages] = useState(false);\n  const [loadingDisciplines, setLoadingDisciplines] = useState(false);\n  const [loadingActivities, setLoadingActivities] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoadingProjects(true);\n      try {\n        const projectsData = await getProjects();\n        setProjects(projectsData.map(p => ({\n          code: p.code,\n          name: p.name\n        })));\n      } catch (error) {\n        console.error(\"Fallo al obtener proyectos:\", error);\n        // Manejar error, por ejemplo, mostrar un mensaje de error\n      } finally {\n        setLoadingProjects(false);\n      }\n      setLoadingEmployees(true);\n      try {\n        const employeesData = await getEmployees();\n        setEmployees(employeesData.map(e => ({\n          id: e.id,\n          name: e.name\n        })));\n      } catch (error) {\n        console.error(\"Fallo al obtener empleados:\", error);\n        // Manejar error\n      } finally {\n        setLoadingEmployees(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  useEffect(() => {\n    if (formData.project_code) {\n      setLoadingStages(true);\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: ''\n      })); // Reiniciar campos dependientes\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      const fetchStages = async () => {\n        try {\n          const stagesData = await getProjectStages(formData.project_code);\n          setStages(stagesData); // Asumiendo que stagesData es un array de strings\n        } catch (error) {\n          console.error(`Fallo al obtener etapas para ${formData.project_code}:`, error);\n        } finally {\n          setLoadingStages(false);\n        }\n      };\n      fetchStages();\n    } else {\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: ''\n      }));\n    }\n  }, [formData.project_code]);\n  useEffect(() => {\n    if (formData.project_code && formData.phase) {\n      setLoadingDisciplines(true);\n      setFormData(prev => ({\n        ...prev,\n        discipline: '',\n        activity: ''\n      })); // Reiniciar campos dependientes\n      setDisciplines([]);\n      setActivities([]);\n      const fetchDisciplines = async () => {\n        try {\n          const disciplinesData = await getDisciplinesByStage(formData.project_code, formData.phase);\n          setDisciplines(disciplinesData); // Asumiendo que disciplinesData es un array de strings\n        } catch (error) {\n          console.error(`Fallo al obtener disciplinas para el proyecto ${formData.project_code}, etapa ${formData.phase}:`, error);\n        } finally {\n          setLoadingDisciplines(false);\n        }\n      };\n      fetchDisciplines();\n    } else {\n      setDisciplines([]);\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        discipline: '',\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, formData.phase]);\n  useEffect(() => {\n    if (formData.project_code && formData.phase && formData.discipline) {\n      setLoadingActivities(true);\n      setFormData(prev => ({\n        ...prev,\n        activity: ''\n      })); // Reiniciar campo dependiente\n      setActivities([]);\n      const fetchActivities = async () => {\n        try {\n          const activitiesData = await getActivitiesByDiscipline(formData.project_code, formData.phase, formData.discipline);\n          setActivities(activitiesData); // Asumiendo que activitiesData es un array de strings\n        } catch (error) {\n          console.error(`Fallo al obtener actividades para el proyecto ${formData.project_code}, etapa ${formData.phase}, disciplina ${formData.discipline}:`, error);\n        } finally {\n          setLoadingActivities(false);\n        }\n      };\n      fetchActivities();\n    } else {\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, formData.phase, formData.discipline]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setSubmitError(null); // Limpiar errores previos al cambiar\n  };\n  const handleDateChange = date => {\n    setFormData(prev => ({\n      ...prev,\n      date: date ? date.toISOString().split('T')[0] : ''\n    }));\n    setSubmitError(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError(null);\n\n    // Validación básica\n    const requiredFields = ['date', 'employee_id', 'project_code', 'phase', 'discipline', 'activity', 'hours'];\n    for (const field of requiredFields) {\n      if (!formData[field]) {\n        setSubmitError(`Por favor, rellena todos los campos obligatorios. Falta: ${field}`);\n        return;\n      }\n    }\n    const payload = {\n      ...formData,\n      employee_id: parseInt(formData.employee_id),\n      hours: parseFloat(formData.hours)\n    };\n    try {\n      await submitHours(payload);\n      alert('Horas registradas exitosamente');\n      setFormData({\n        date: new Date().toISOString().split('T')[0],\n        employee_id: '',\n        project_code: '',\n        phase: '',\n        discipline: '',\n        activity: '',\n        hours: '',\n        note: ''\n      });\n      onSuccess(); // Llamar al callback de éxito\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error al enviar el formulario:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Error al registrar horas.\";\n      setSubmitError(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Registro de Horas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Fecha\",\n        selectedDate: formData.date ? new Date(formData.date) : null,\n        onChange: handleDateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Empleado\",\n        name: \"employee_id\",\n        value: formData.employee_id,\n        onChange: handleChange,\n        required: true,\n        options: employees.map(emp => ({\n          value: emp.id.toString(),\n          label: emp.name\n        })),\n        disabled: loadingEmployees,\n        loading: loadingEmployees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Proyecto\",\n        name: \"project_code\",\n        value: formData.project_code,\n        onChange: handleChange,\n        required: true,\n        options: projects.map(proj => ({\n          value: proj.code,\n          label: proj.name\n        })),\n        disabled: loadingProjects,\n        loading: loadingProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Fase\",\n        name: \"phase\",\n        value: formData.phase,\n        onChange: handleChange,\n        required: true,\n        options: stages.map(stage => ({\n          value: stage,\n          label: stage\n        })),\n        disabled: !formData.project_code || loadingStages,\n        loading: loadingStages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Disciplina\",\n        name: \"discipline\",\n        value: formData.discipline,\n        onChange: handleChange,\n        required: true,\n        options: disciplines.map(disc => ({\n          value: disc,\n          label: disc\n        })),\n        disabled: !formData.phase || loadingDisciplines,\n        loading: loadingDisciplines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Actividad\",\n        name: \"activity\",\n        value: formData.activity,\n        onChange: handleChange,\n        required: true,\n        options: activities.map(act => ({\n          value: act,\n          label: act\n        })),\n        disabled: !formData.discipline || loadingActivities,\n        loading: loadingActivities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Horas\",\n        name: \"hours\",\n        type: \"number\",\n        value: formData.hours,\n        onChange: handleChange,\n        required: true,\n        min: \"0.5\",\n        step: \"0.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n        label: \"Nota (Opcional)\",\n        name: \"note\",\n        value: formData.note,\n        onChange: handleChange,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n        children: \"Registrar Horas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(FormularioHoras, \"ryAfIZrVvEuKyS8l+K6e3BNzfTs=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","InputField","SelectField","TextareaField","DatePicker","submitHours","getProjects","getEmployees","getProjectStages","getDisciplinesByStage","getActivitiesByDiscipline","jsxDEV","_jsxDEV","FormularioHoras","onSuccess","_s","formData","setFormData","date","Date","toISOString","split","employee_id","project_code","phase","discipline","activity","hours","note","projects","setProjects","employees","setEmployees","stages","setStages","disciplines","setDisciplines","activities","setActivities","loadingProjects","setLoadingProjects","loadingEmployees","setLoadingEmployees","loadingStages","setLoadingStages","loadingDisciplines","setLoadingDisciplines","loadingActivities","setLoadingActivities","submitError","setSubmitError","fetchInitialData","projectsData","map","p","code","name","error","console","employeesData","e","id","prev","fetchStages","stagesData","fetchDisciplines","disciplinesData","fetchActivities","activitiesData","handleChange","value","target","handleDateChange","handleSubmit","preventDefault","requiredFields","field","payload","parseInt","parseFloat","alert","_error$response","_error$response$data","errorMessage","response","data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","label","selectedDate","onChange","required","options","emp","toString","disabled","loading","proj","stage","disc","act","type","min","step","rows","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["// FormularioHoras.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport InputField from './InputField';\r\nimport SelectField from './SelectField';\r\nimport TextareaField from './TextareaField';\r\nimport DatePicker from './DatePicker';\r\nimport { submitHours, getProjects, getEmployees, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline } from './horasApi';\r\n\r\ninterface FormularioHorasProps {\r\n    onSuccess: () => void;\r\n}\r\n\r\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({ onSuccess }) => {\r\n    const [formData, setFormData] = useState({\r\n        date: new Date().toISOString().split('T')[0],\r\n        employee_id: '',\r\n        project_code: '',\r\n        phase: '',\r\n        discipline: '',\r\n        activity: '',\r\n        hours: '',\r\n        note: ''\r\n    });\r\n\r\n    const [projects, setProjects] = useState<{ code: string; name: string }[]>([]);\r\n    const [employees, setEmployees] = useState<{ id: number; name: string }[]>([]);\r\n    const [stages, setStages] = useState<string[]>([]);\r\n    const [disciplines, setDisciplines] = useState<string[]>([]);\r\n    const [activities, setActivities] = useState<string[]>([]);\r\n\r\n    const [loadingProjects, setLoadingProjects] = useState(false);\r\n    const [loadingEmployees, setLoadingEmployees] = useState(false);\r\n    const [loadingStages, setLoadingStages] = useState(false);\r\n    const [loadingDisciplines, setLoadingDisciplines] = useState(false);\r\n    const [loadingActivities, setLoadingActivities] = useState(false);\r\n    const [submitError, setSubmitError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            setLoadingProjects(true);\r\n            try {\r\n                const projectsData = await getProjects();\r\n                setProjects(projectsData.map((p: any) => ({ code: p.code, name: p.name })));\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener proyectos:\", error);\r\n                // Manejar error, por ejemplo, mostrar un mensaje de error\r\n            } finally {\r\n                setLoadingProjects(false);\r\n            }\r\n\r\n            setLoadingEmployees(true);\r\n            try {\r\n                const employeesData = await getEmployees();\r\n                setEmployees(employeesData.map((e: any) => ({ id: e.id, name: e.name })));\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener empleados:\", error);\r\n                // Manejar error\r\n            } finally {\r\n                setLoadingEmployees(false);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code) {\r\n            setLoadingStages(true);\r\n            setFormData(prev => ({ ...prev, phase: '', discipline: '', activity: '' })); // Reiniciar campos dependientes\r\n            setStages([]);\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            const fetchStages = async () => {\r\n                try {\r\n                    const stagesData = await getProjectStages(formData.project_code);\r\n                    setStages(stagesData); // Asumiendo que stagesData es un array de strings\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener etapas para ${formData.project_code}:`, error);\r\n                } finally {\r\n                    setLoadingStages(false);\r\n                }\r\n            };\r\n            fetchStages();\r\n        } else {\r\n            setStages([]);\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, phase: '', discipline: '', activity: '' }));\r\n        }\r\n    }, [formData.project_code]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code && formData.phase) {\r\n            setLoadingDisciplines(true);\r\n            setFormData(prev => ({ ...prev, discipline: '', activity: '' })); // Reiniciar campos dependientes\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            const fetchDisciplines = async () => {\r\n                try {\r\n                    const disciplinesData = await getDisciplinesByStage(formData.project_code, formData.phase);\r\n                    setDisciplines(disciplinesData); // Asumiendo que disciplinesData es un array de strings\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener disciplinas para el proyecto ${formData.project_code}, etapa ${formData.phase}:`, error);\r\n                } finally {\r\n                    setLoadingDisciplines(false);\r\n                }\r\n            };\r\n            fetchDisciplines();\r\n        } else {\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, discipline: '', activity: '' }));\r\n        }\r\n    }, [formData.project_code, formData.phase]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code && formData.phase && formData.discipline) {\r\n            setLoadingActivities(true);\r\n            setFormData(prev => ({ ...prev, activity: '' })); // Reiniciar campo dependiente\r\n            setActivities([]);\r\n            const fetchActivities = async () => {\r\n                try {\r\n                    const activitiesData = await getActivitiesByDiscipline(formData.project_code, formData.phase, formData.discipline);\r\n                    setActivities(activitiesData); // Asumiendo que activitiesData es un array de strings\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener actividades para el proyecto ${formData.project_code}, etapa ${formData.phase}, disciplina ${formData.discipline}:`, error);\r\n                } finally {\r\n                    setLoadingActivities(false);\r\n                }\r\n            };\r\n            fetchActivities();\r\n        } else {\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, activity: '' }));\r\n        }\r\n    }, [formData.project_code, formData.phase, formData.discipline]);\r\n\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n        setSubmitError(null); // Limpiar errores previos al cambiar\r\n    };\r\n\r\n    const handleDateChange = (date: Date | null) => {\r\n        setFormData(prev => ({ ...prev, date: date ? date.toISOString().split('T')[0] : '' }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setSubmitError(null);\r\n\r\n        // Validación básica\r\n        const requiredFields = ['date', 'employee_id', 'project_code', 'phase', 'discipline', 'activity', 'hours'];\r\n        for (const field of requiredFields) {\r\n            if (!formData[field as keyof typeof formData]) {\r\n                setSubmitError(`Por favor, rellena todos los campos obligatorios. Falta: ${field}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        const payload = {\r\n            ...formData,\r\n            employee_id: parseInt(formData.employee_id),\r\n            hours: parseFloat(formData.hours)\r\n        };\r\n\r\n        try {\r\n            await submitHours(payload);\r\n            alert('Horas registradas exitosamente');\r\n            setFormData({\r\n                date: new Date().toISOString().split('T')[0],\r\n                employee_id: '',\r\n                project_code: '',\r\n                phase: '',\r\n                discipline: '',\r\n                activity: '',\r\n                hours: '',\r\n                note: ''\r\n            });\r\n            onSuccess(); // Llamar al callback de éxito\r\n        } catch (error: any) {\r\n            console.error('Error al enviar el formulario:', error);\r\n            const errorMessage = error.response?.data?.detail || \"Error al registrar horas.\";\r\n            setSubmitError(errorMessage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n            <h2 className=\"text-2xl font-bold mb-6 text-center\">Registro de Horas</h2>\r\n            {submitError && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{submitError}</div>}\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <DatePicker\r\n                    label=\"Fecha\"\r\n                    selectedDate={formData.date ? new Date(formData.date) : null}\r\n                    onChange={handleDateChange}\r\n                    required\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Empleado\"\r\n                    name=\"employee_id\"\r\n                    value={formData.employee_id}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={employees.map(emp => ({ value: emp.id.toString(), label: emp.name }))}\r\n                    disabled={loadingEmployees}\r\n                    loading={loadingEmployees}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Proyecto\"\r\n                    name=\"project_code\"\r\n                    value={formData.project_code}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={projects.map(proj => ({ value: proj.code, label: proj.name }))}\r\n                    disabled={loadingProjects}\r\n                    loading={loadingProjects}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Fase\"\r\n                    name=\"phase\"\r\n                    value={formData.phase}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={stages.map(stage => ({ value: stage, label: stage }))}\r\n                    disabled={!formData.project_code || loadingStages}\r\n                    loading={loadingStages}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Disciplina\"\r\n                    name=\"discipline\"\r\n                    value={formData.discipline}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={disciplines.map(disc => ({ value: disc, label: disc }))}\r\n                    disabled={!formData.phase || loadingDisciplines}\r\n                    loading={loadingDisciplines}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Actividad\"\r\n                    name=\"activity\"\r\n                    value={formData.activity}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={activities.map(act => ({ value: act, label: act }))}\r\n                    disabled={!formData.discipline || loadingActivities}\r\n                    loading={loadingActivities}\r\n                />\r\n\r\n                <InputField\r\n                    label=\"Horas\"\r\n                    name=\"hours\"\r\n                    type=\"number\"\r\n                    value={formData.hours}\r\n                    onChange={handleChange}\r\n                    required\r\n                    min=\"0.5\"\r\n                    step=\"0.5\"\r\n                />\r\n\r\n                <TextareaField\r\n                    label=\"Nota (Opcional)\"\r\n                    name=\"note\"\r\n                    value={formData.note}\r\n                    onChange={handleChange}\r\n                    rows={3}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n                >\r\n                    Registrar Horas\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormularioHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}