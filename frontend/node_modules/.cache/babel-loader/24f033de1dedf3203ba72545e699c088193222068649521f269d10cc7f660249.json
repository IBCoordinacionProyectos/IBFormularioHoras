{"ast":null,"code":"/**\n * Returns the previous month the user can navigate to, based on the given\n * options.\n *\n * The previous month is not always the previous calendar month:\n *\n * - If it is before the `calendarStartMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips back by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The previous month, or `undefined` if navigation is not possible.\n */\nexport function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {\n  if (options.disableNavigation) {\n    return undefined;\n  }\n  const {\n    pagedNavigation,\n    numberOfMonths\n  } = options;\n  const {\n    startOfMonth,\n    addMonths,\n    differenceInCalendarMonths\n  } = dateLib;\n  const offset = pagedNavigation ? numberOfMonths ?? 1 : 1;\n  const month = startOfMonth(firstDisplayedMonth);\n  if (!calendarStartMonth) {\n    return addMonths(month, -offset);\n  }\n  const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n  if (monthsDiff <= 0) {\n    return undefined;\n  }\n  return addMonths(month, -offset);\n}","map":{"version":3,"names":["getPreviousMonth","firstDisplayedMonth","calendarStartMonth","options","dateLib","disableNavigation","undefined","pagedNavigation","numberOfMonths","startOfMonth","addMonths","differenceInCalendarMonths","offset","month","monthsDiff"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/helpers/getPreviousMonth.js"],"sourcesContent":["/**\n * Returns the previous month the user can navigate to, based on the given\n * options.\n *\n * The previous month is not always the previous calendar month:\n *\n * - If it is before the `calendarStartMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips back by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The previous month, or `undefined` if navigation is not possible.\n */\nexport function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? (numberOfMonths ?? 1) : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarStartMonth) {\n        return addMonths(month, -offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    return addMonths(month, -offset);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,gBAAgBA,CAACC,mBAAmB,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,OAAO,EAAE;EACxF,IAAID,OAAO,CAACE,iBAAiB,EAAE;IAC3B,OAAOC,SAAS;EACpB;EACA,MAAM;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAGL,OAAO;EACnD,MAAM;IAAEM,YAAY;IAAEC,SAAS;IAAEC;EAA2B,CAAC,GAAGP,OAAO;EACvE,MAAMQ,MAAM,GAAGL,eAAe,GAAIC,cAAc,IAAI,CAAC,GAAI,CAAC;EAC1D,MAAMK,KAAK,GAAGJ,YAAY,CAACR,mBAAmB,CAAC;EAC/C,IAAI,CAACC,kBAAkB,EAAE;IACrB,OAAOQ,SAAS,CAACG,KAAK,EAAE,CAACD,MAAM,CAAC;EACpC;EACA,MAAME,UAAU,GAAGH,0BAA0B,CAACE,KAAK,EAAEX,kBAAkB,CAAC;EACxE,IAAIY,UAAU,IAAI,CAAC,EAAE;IACjB,OAAOR,SAAS;EACpB;EACA,OAAOI,SAAS,CAACG,KAAK,EAAE,CAACD,MAAM,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}