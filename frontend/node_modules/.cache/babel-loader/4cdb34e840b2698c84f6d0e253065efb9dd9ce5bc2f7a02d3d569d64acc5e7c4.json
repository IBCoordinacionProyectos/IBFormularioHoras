{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\n// src/components/FormularioHoras.tsx\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport Header from './Header';\nimport { toast } from 'sonner';\nimport { Calendar as CalendarIcon, Briefcase, Save, Pencil, ListChecks, ClipboardList, XCircle, PlusCircle, Loader2 } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Calendar } from './ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { cn } from '../lib/utils';\nimport { FormSelect } from './formulario/FormSelect';\nimport { ActivityItem } from './formulario/ActivityItem';\nimport { ActivityListSkeleton } from './formulario/ActivityListSkeleton';\nimport { EmptyState } from './formulario/EmptyState';\nimport { TotalHoursProgress } from './formulario/TotalHoursProgress';\nimport { submitHours, getProjects, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline, getDailyActivities, deleteHour } from '../api/horasApi';\n\n// Interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormData = employeeId => ({\n  employee_id: String(employeeId),\n  project_code: '',\n  phase: '',\n  discipline: '',\n  activity: '',\n  hours: '',\n  note: ''\n});\n\n// Main Component\nconst FormularioHoras = ({\n  onSuccess,\n  employeeId,\n  employeeName,\n  onLogout\n}) => {\n  _s();\n  // State Management\n  const [formData, setFormData] = useState(initialFormData(employeeId));\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [dailyActivities, setDailyActivities] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [disciplines, setDisciplines] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [editingActivityId, setEditingActivityId] = useState(null);\n\n  // Loading States\n  const [loading, setLoading] = useState({\n    submit: false,\n    projects: true,\n    stages: false,\n    disciplines: false,\n    activities: false,\n    dailyActivities: true\n  });\n\n  // Memoized Values\n  const totalHoursToday = useMemo(() => dailyActivities.reduce((sum, activity) => sum + activity.hours, 0), [dailyActivities]);\n  const selectedProjectName = useMemo(() => {\n    var _projects$find;\n    return ((_projects$find = projects.find(p => p.code === formData.project_code)) === null || _projects$find === void 0 ? void 0 : _projects$find.name) || '';\n  }, [formData.project_code, projects]);\n\n  // Data Fetching\n  const refreshDailyActivities = useCallback(async (date, employeeId) => {\n    setLoading(prev => ({\n      ...prev,\n      dailyActivities: true\n    }));\n    try {\n      const dateString = format(date, 'yyyy-MM-dd');\n      const activities = await getDailyActivities(dateString, Number(employeeId));\n      setDailyActivities(activities);\n    } catch (error) {\n      toast.error('Error al cargar las actividades del dÃ­a.');\n      console.error('Error fetching daily activities:', error);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        dailyActivities: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    refreshDailyActivities(selectedDate, String(employeeId));\n  }, [selectedDate, employeeId, refreshDailyActivities]);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      setLoading(prev => ({\n        ...prev,\n        projects: true\n      }));\n      try {\n        const data = await getProjects();\n        setProjects(data);\n      } catch (error) {\n        toast.error('Error al cargar los proyectos.');\n        console.error('Error fetching projects:', error);\n      } finally {\n        setLoading(prev => ({\n          ...prev,\n          projects: false\n        }));\n      }\n    };\n    fetchProjects();\n  }, []);\n  useEffect(() => {\n    if (!formData.project_code) {\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      return;\n    }\n    const fetchStages = async projectCode => {\n      setLoading(prev => ({\n        ...prev,\n        stages: true\n      }));\n      try {\n        const data = await getProjectStages(projectCode);\n        setStages(data.map(String));\n        return data;\n      } catch (error) {\n        toast.error('Error al cargar las etapas del proyecto.');\n        return [];\n      } finally {\n        setLoading(prev => ({\n          ...prev,\n          stages: false\n        }));\n      }\n    };\n    fetchStages(formData.project_code);\n  }, [formData.project_code]);\n  useEffect(() => {\n    if (!formData.phase) {\n      setDisciplines([]);\n      setActivities([]);\n      return;\n    }\n    const fetchDisciplines = async (projectCode, phase) => {\n      setLoading(prev => ({\n        ...prev,\n        disciplines: true\n      }));\n      try {\n        const data = await getDisciplinesByStage(projectCode, phase);\n        setDisciplines(data.map(String));\n        return data;\n      } catch (error) {\n        toast.error('Error al cargar las disciplinas.');\n        return [];\n      } finally {\n        setLoading(prev => ({\n          ...prev,\n          disciplines: false\n        }));\n      }\n    };\n    fetchDisciplines(formData.project_code, formData.phase);\n  }, [formData.project_code, formData.phase]);\n  useEffect(() => {\n    if (!formData.discipline) {\n      setActivities([]);\n      return;\n    }\n    const fetchActivities = async (projectCode, phase, discipline) => {\n      setLoading(prev => ({\n        ...prev,\n        activities: true\n      }));\n      try {\n        const data = await getActivitiesByDiscipline(projectCode, phase, discipline);\n        setActivities(data.map(String));\n        return data;\n      } catch (error) {\n        toast.error('Error al cargar las actividades.');\n        return [];\n      } finally {\n        setLoading(prev => ({\n          ...prev,\n          activities: false\n        }));\n      }\n    };\n    fetchActivities(formData.project_code, formData.phase, formData.discipline);\n  }, [formData.project_code, formData.phase, formData.discipline]);\n\n  // Handlers\n  const handleDateChange = date => {\n    if (date) {\n      setSelectedDate(date);\n      refreshDailyActivities(date, String(employeeId));\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Data Fetching\n  const fetchProjects = useCallback(async () => {\n    setLoading(prev => ({\n      ...prev,\n      projects: true\n    }));\n    try {\n      const projectData = await getProjects();\n      setProjects(projectData);\n    } catch (error) {\n      toast.error('Error al cargar proyectos.');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        projects: false\n      }));\n    }\n  }, []);\n  const fetchStages = useCallback(async projectCode => {\n    setLoading(prev => ({\n      ...prev,\n      stages: true\n    }));\n    try {\n      const stageData = await getProjectStages(projectCode);\n      setStages(stageData);\n    } catch (error) {\n      toast.error('Error al cargar etapas.');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        stages: false\n      }));\n    }\n  }, []);\n  const fetchDisciplines = useCallback(async (projectCode, stage) => {\n    setLoading(prev => ({\n      ...prev,\n      disciplines: true\n    }));\n    try {\n      const disciplineData = await getDisciplinesByStage(projectCode, stage);\n      setDisciplines(disciplineData);\n    } catch (error) {\n      toast.error('Error al cargar disciplinas.');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        disciplines: false\n      }));\n    }\n  }, []);\n  const fetchActivities = useCallback(async (projectCode, stage, discipline) => {\n    setLoading(prev => ({\n      ...prev,\n      activities: true\n    }));\n    try {\n      const activityData = await getActivitiesByDiscipline(projectCode, stage, discipline);\n      setActivities(activityData);\n    } catch (error) {\n      toast.error('Error al cargar actividades.');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        activities: false\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    fetchProjects();\n  }, [fetchProjects]);\n  useEffect(() => {\n    refreshDailyActivities(selectedDate, String(employeeId));\n  }, [selectedDate, employeeId, refreshDailyActivities]);\n  const handleSelectChange = (name, value) => {\n    const newFormData = {\n      ...formData,\n      [name]: value\n    };\n    if (name === 'project_code') {\n      newFormData.phase = '';\n      newFormData.discipline = '';\n      newFormData.activity = '';\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      if (value) {\n        fetchStages(value);\n      }\n    } else if (name === 'phase') {\n      newFormData.discipline = '';\n      newFormData.activity = '';\n      setDisciplines([]);\n      setActivities([]);\n      if (value) {\n        fetchDisciplines(newFormData.project_code, value);\n      }\n    } else if (name === 'discipline') {\n      newFormData.activity = '';\n      setActivities([]);\n      if (value) {\n        fetchActivities(newFormData.project_code, newFormData.phase, value);\n      }\n    }\n    setFormData(newFormData);\n  };\n  const resetForm = useCallback(() => {\n    setFormData(initialFormData(employeeId));\n    setEditingActivityId(null);\n  }, [employeeId]);\n  const handleEditActivity = async activity => {\n    setFormData({\n      employee_id: String(activity.employee_id),\n      project_code: activity.project_code,\n      phase: activity.phase,\n      discipline: activity.discipline,\n      activity: activity.activity,\n      hours: String(activity.hours),\n      note: activity.note || ''\n    });\n    setEditingActivityId(activity.id);\n\n    // Forzar la actualizaciÃ³n de los selects dependientes\n    try {\n      await fetchStages(activity.project_code);\n      await fetchDisciplines(activity.project_code, activity.phase);\n      await fetchActivities(activity.project_code, activity.phase, activity.discipline);\n    } catch (error) {\n      console.error('Error al cargar los datos para ediciÃ³n:', error);\n    }\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleDelete = async idToDelete => {\n    toast.warning('Â¿EstÃ¡s seguro de que quieres eliminar esta actividad?', {\n      duration: 5000,\n      action: {\n        label: 'Eliminar',\n        onClick: async () => {\n          try {\n            await deleteHour(idToDelete);\n            toast.error('Actividad eliminada correctamente.', {\n              duration: 3000\n            });\n            refreshDailyActivities(selectedDate, String(employeeId));\n            if (editingActivityId === idToDelete) {\n              resetForm();\n            }\n          } catch (error) {\n            toast.error('Error al eliminar la actividad.', {\n              duration: 3000\n            });\n            console.error('Error deleting activity:', error);\n          }\n        }\n      },\n      cancel: {\n        label: 'Cancelar',\n        onClick: () => toast.dismiss()\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(prev => ({\n      ...prev,\n      submit: true\n    }));\n    const submissionData = {\n      ...formData,\n      date: format(selectedDate, 'yyyy-MM-dd'),\n      project_name: selectedProjectName,\n      hours: Number(formData.hours),\n      employee_id: employeeId,\n      id: editingActivityId !== null && editingActivityId !== void 0 ? editingActivityId : undefined\n    };\n    try {\n      await submitHours(submissionData);\n      toast.success(`Actividad ${editingActivityId ? 'actualizada' : 'guardada'} con Ã©xito.`, {\n        duration: 3000,\n        style: {\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none'\n        }\n      });\n      onSuccess();\n      resetForm();\n      refreshDailyActivities(selectedDate, String(employeeId));\n    } catch (error) {\n      toast.error('Error al guardar la actividad.', {\n        duration: 3000\n      });\n      console.error('Error submitting hours:', error);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        submit: false\n      }));\n    }\n  };\n  const isFormValid = useMemo(() => {\n    var _formData$project_cod, _formData$phase, _formData$discipline, _formData$activity;\n    return Boolean(((_formData$project_cod = formData.project_code) === null || _formData$project_cod === void 0 ? void 0 : _formData$project_cod.trim()) && ((_formData$phase = formData.phase) === null || _formData$phase === void 0 ? void 0 : _formData$phase.trim()) && ((_formData$discipline = formData.discipline) === null || _formData$discipline === void 0 ? void 0 : _formData$discipline.trim()) && ((_formData$activity = formData.activity) === null || _formData$activity === void 0 ? void 0 : _formData$activity.trim()) && formData.hours && !isNaN(parseFloat(formData.hours)) && parseFloat(formData.hours) > 0);\n  }, [formData]);\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userName: employeeName,\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4 sm:p-6 lg:p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-5 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"lg:col-span-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \"flex items-center justify-center\",\n                children: [editingActivityId ? /*#__PURE__*/_jsxDEV(Pencil, {\n                  className: \"mr-2 h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 54\n                }, this) : /*#__PURE__*/_jsxDEV(PlusCircle, {\n                  className: \"mr-2 h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 92\n                }, this), editingActivityId ? 'Editar Actividad' : 'Registrar Actividad']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full md:w-1/3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"date\",\n                    className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                    children: \"Fecha\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Popover, {\n                    children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n                      asChild: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline\",\n                        className: cn(\"w-full justify-start text-left font-normal\", !selectedDate && \"text-muted-foreground\"),\n                        children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                          className: \"mr-2 h-4 w-4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 474,\n                          columnNumber: 49\n                        }, this), selectedDate ? format(selectedDate, \"PPP\", {\n                          locale: es\n                        }) : /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"Seleccione una fecha\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 475,\n                          columnNumber: 111\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n                      className: \"w-auto p-0\",\n                      children: /*#__PURE__*/_jsxDEV(Calendar, {\n                        mode: \"single\",\n                        selected: selectedDate,\n                        onSelect: handleDateChange,\n                        initialFocus: true,\n                        locale: es\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n                  children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"C\\xF3digo de Proyecto\",\n                    name: \"project_code\",\n                    value: formData.project_code,\n                    onValueChange: handleSelectChange,\n                    options: projects.map(p => ({\n                      value: p.code,\n                      label: `${p.code} - ${p.name}`\n                    })),\n                    placeholder: \"Seleccione un proyecto\",\n                    loading: loading.projects,\n                    disabled: loading.projects,\n                    icon: /*#__PURE__*/_jsxDEV(Briefcase, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 47\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                      children: \"Nombre del Proyecto\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      value: selectedProjectName,\n                      readOnly: true,\n                      className: \"bg-muted/50\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"Etapa\",\n                    name: \"phase\",\n                    value: formData.phase,\n                    onValueChange: handleSelectChange,\n                    options: stages.map(s => ({\n                      value: s,\n                      label: s\n                    })),\n                    placeholder: \"Seleccione una etapa\",\n                    loading: loading.stages,\n                    disabled: !formData.project_code || loading.stages,\n                    icon: /*#__PURE__*/_jsxDEV(ListChecks, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 47\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"Disciplina\",\n                    name: \"discipline\",\n                    value: formData.discipline,\n                    onValueChange: handleSelectChange,\n                    options: disciplines.map(d => ({\n                      value: d,\n                      label: d\n                    })),\n                    placeholder: \"Seleccione una disciplina\",\n                    loading: loading.disciplines,\n                    disabled: !formData.phase || loading.disciplines,\n                    icon: /*#__PURE__*/_jsxDEV(Pencil, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 47\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n                    label: \"Actividad\",\n                    name: \"activity\",\n                    value: formData.activity,\n                    onValueChange: handleSelectChange,\n                    options: activities.map(a => ({\n                      value: a,\n                      label: a\n                    })),\n                    placeholder: \"Seleccione una actividad\",\n                    loading: loading.activities,\n                    disabled: !formData.discipline || loading.activities,\n                    icon: /*#__PURE__*/_jsxDEV(ClipboardList, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 47\n                    }, this),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"hours\",\n                      className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                      children: [\"Horas \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-destructive\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 132\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"hours\",\n                      name: \"hours\",\n                      type: \"number\",\n                      value: formData.hours,\n                      onChange: handleChange,\n                      min: \"0.5\",\n                      step: \"0.5\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"note\",\n                    className: \"block text-sm font-medium text-foreground/80 mb-1\",\n                    children: \"Nota (Opcional)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"note\",\n                    name: \"note\",\n                    type: \"text\",\n                    value: formData.note,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-end space-x-2 pt-4\",\n                  children: [editingActivityId && /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"outline\",\n                    onClick: resetForm,\n                    children: [/*#__PURE__*/_jsxDEV(XCircle, {\n                      className: \"mr-2 h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 45\n                    }, this), \"Cancelar Edici\\xF3n\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    disabled: !isFormValid || loading.submit,\n                    className: `min-w-[150px] transition-opacity ${!isFormValid ? 'opacity-70 cursor-not-allowed' : ''}`,\n                    children: [loading.submit ? /*#__PURE__*/_jsxDEV(Loader2, {\n                      className: \"mr-2 h-4 w-4 animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 582,\n                      columnNumber: 45\n                    }, this) : /*#__PURE__*/_jsxDEV(Save, {\n                      className: \"mr-2 h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 45\n                    }, this), editingActivityId ? 'Actualizar' : 'Guardar']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \"text-center\",\n                children: \"Actividades del D\\xEDa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: loading.dailyActivities ? /*#__PURE__*/_jsxDEV(ActivityListSkeleton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 37\n                }, this) : dailyActivities.length > 0 ? dailyActivities.map(activity => /*#__PURE__*/_jsxDEV(ActivityItem, {\n                  activity: activity,\n                  onEdit: handleEditActivity,\n                  onDelete: handleDelete\n                }, activity.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 41\n                }, this)) : /*#__PURE__*/_jsxDEV(EmptyState, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-6\",\n                children: /*#__PURE__*/_jsxDEV(TotalHoursProgress, {\n                  totalHours: totalHoursToday,\n                  selectedDate: selectedDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 9\n  }, this);\n};\n_s(FormularioHoras, \"11i8KcGO9jbLB1kTJ/tADNWwwrU=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","format","es","Header","toast","Calendar","CalendarIcon","Briefcase","Save","Pencil","ListChecks","ClipboardList","XCircle","PlusCircle","Loader2","Card","CardContent","CardHeader","CardTitle","Button","Input","Popover","PopoverContent","PopoverTrigger","cn","FormSelect","ActivityItem","ActivityListSkeleton","EmptyState","TotalHoursProgress","submitHours","getProjects","getProjectStages","getDisciplinesByStage","getActivitiesByDiscipline","getDailyActivities","deleteHour","jsxDEV","_jsxDEV","initialFormData","employeeId","employee_id","String","project_code","phase","discipline","activity","hours","note","FormularioHoras","onSuccess","employeeName","onLogout","_s","formData","setFormData","selectedDate","setSelectedDate","Date","dailyActivities","setDailyActivities","projects","setProjects","stages","setStages","disciplines","setDisciplines","activities","setActivities","editingActivityId","setEditingActivityId","loading","setLoading","submit","totalHoursToday","reduce","sum","selectedProjectName","_projects$find","find","p","code","name","refreshDailyActivities","date","prev","dateString","Number","error","console","fetchProjects","data","fetchStages","projectCode","map","fetchDisciplines","fetchActivities","handleDateChange","handleChange","e","value","target","projectData","stageData","stage","disciplineData","activityData","handleSelectChange","newFormData","resetForm","handleEditActivity","id","window","scrollTo","top","behavior","handleDelete","idToDelete","warning","duration","action","label","onClick","cancel","dismiss","handleSubmit","preventDefault","submissionData","project_name","undefined","success","style","backgroundColor","color","border","isFormValid","_formData$project_cod","_formData$phase","_formData$discipline","_formData$activity","Boolean","trim","isNaN","parseFloat","children","userName","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","asChild","variant","locale","mode","selected","onSelect","initialFocus","onValueChange","options","placeholder","disabled","icon","required","readOnly","s","d","a","type","onChange","min","step","length","onEdit","onDelete","totalHours","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["// src/components/FormularioHoras.tsx\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { format, parseISO, getDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport Header from './Header';\n\nimport { toast } from 'sonner';\nimport {\n    Calendar as CalendarIcon,\n    Briefcase,\n    Trash2,\n    LogOut,\n    Save,\n    Pencil,\n    ListChecks,\n    ClipboardList,\n    Clock,\n    XCircle,\n    PlusCircle,\n    Loader2,\n} from 'lucide-react';\n\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\nimport { Badge } from './ui/badge';\nimport { Progress } from './ui/progress';\nimport { Skeleton } from './ui/skeleton';\nimport { Calendar } from './ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\nimport { cn } from '../lib/utils';\nimport { FormSelect } from './formulario/FormSelect';\nimport { ActivityItem } from './formulario/ActivityItem';\nimport { ActivityListSkeleton } from './formulario/ActivityListSkeleton';\nimport { EmptyState } from './formulario/EmptyState';\nimport { TotalHoursProgress } from './formulario/TotalHoursProgress';\nimport {\n    submitHours,\n    getProjects,\n    getProjectStages,\n    getDisciplinesByStage,\n    getActivitiesByDiscipline,\n    getDailyActivities,\n    deleteHour,\n} from '../api/horasApi';\n\n// Interfaces\ninterface FormularioHorasProps {\n    onSuccess: () => void;\n    employeeId: number;\n    employeeName: string;\n    onLogout: () => void;\n}\n\ninterface Project {\n    code: string;\n    name: string;\n}\n\ninterface Activity {\n    id: number;\n    date: string;\n    employee_id: number;\n    project_code: string;\n    project_name: string;\n    phase: string;\n    discipline: string;\n    activity: string;\n    hours: number;\n    note: string;\n}\n\ninterface FormSelectProps {\n    label: string;\n    name: string;\n    value: string;\n    onValueChange: (name: string, value: string) => void;\n    options: { value: string; label: string }[];\n    placeholder: string;\n    loading: boolean;\n    disabled: boolean;\n    icon: React.ReactNode;\n    required?: boolean;\n}\n\ninterface ActivityItemProps {\n    activity: Activity;\n    onEdit: (activity: Activity) => void;\n    onDelete: (id: number) => void;\n}\n\ninterface TotalHoursProgressProps {\n    totalHours: number;\n    selectedDate: Date;\n}\n\nconst initialFormData = (employeeId: number) => ({\n    employee_id: String(employeeId),\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: '',\n});\n\n// Main Component\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({ onSuccess, employeeId, employeeName, onLogout }) => {\n    // State Management\n    const [formData, setFormData] = useState(initialFormData(employeeId));\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [dailyActivities, setDailyActivities] = useState<Activity[]>([]);\n    const [projects, setProjects] = useState<Project[]>([]);\n    const [stages, setStages] = useState<string[]>([]);\n    const [disciplines, setDisciplines] = useState<string[]>([]);\n    const [activities, setActivities] = useState<string[]>([]);\n    const [editingActivityId, setEditingActivityId] = useState<number | null>(null);\n\n    // Loading States\n    const [loading, setLoading] = useState({\n        submit: false,\n        projects: true,\n        stages: false,\n        disciplines: false,\n        activities: false,\n        dailyActivities: true,\n    });\n\n    // Memoized Values\n    const totalHoursToday = useMemo(() =>\n        dailyActivities.reduce((sum, activity) => sum + activity.hours, 0),\n        [dailyActivities]\n    );\n\n    const selectedProjectName = useMemo(() =>\n        projects.find(p => p.code === formData.project_code)?.name || '',\n        [formData.project_code, projects]\n    );\n\n    // Data Fetching\n    const refreshDailyActivities = useCallback(async (date: Date, employeeId: string) => {\n        setLoading(prev => ({ ...prev, dailyActivities: true }));\n        try {\n            const dateString = format(date, 'yyyy-MM-dd');\n            const activities = await getDailyActivities(dateString, Number(employeeId));\n            setDailyActivities(activities);\n        } catch (error) {\n            toast.error('Error al cargar las actividades del dÃ­a.');\n            console.error('Error fetching daily activities:', error);\n        } finally {\n            setLoading(prev => ({ ...prev, dailyActivities: false }));\n        }\n    }, []);\n\n    useEffect(() => {\n        refreshDailyActivities(selectedDate, String(employeeId));\n    }, [selectedDate, employeeId, refreshDailyActivities]);\n\n    useEffect(() => {\n        const fetchProjects = async () => {\n            setLoading(prev => ({ ...prev, projects: true }));\n            try {\n                const data = await getProjects();\n                setProjects(data);\n            } catch (error) {\n                toast.error('Error al cargar los proyectos.');\n                console.error('Error fetching projects:', error);\n            } finally {\n                setLoading(prev => ({ ...prev, projects: false }));\n            }\n        };\n        fetchProjects();\n    }, []);\n\n    useEffect(() => {\n        if (!formData.project_code) {\n            setStages([]);\n            setDisciplines([]);\n            setActivities([]);\n            return;\n        }\n        const fetchStages = async (projectCode: string) => {\n            setLoading(prev => ({ ...prev, stages: true }));\n            try {\n                const data = await getProjectStages(projectCode);\n                setStages(data.map(String));\n                return data;\n            } catch (error) {\n                toast.error('Error al cargar las etapas del proyecto.');\n                return [];\n            } finally {\n                setLoading(prev => ({ ...prev, stages: false }));\n            }\n        };\n        fetchStages(formData.project_code);\n    }, [formData.project_code]);\n\n    useEffect(() => {\n        if (!formData.phase) {\n            setDisciplines([]);\n            setActivities([]);\n            return;\n        }\n        const fetchDisciplines = async (projectCode: string, phase: string) => {\n            setLoading(prev => ({ ...prev, disciplines: true }));\n            try {\n                const data = await getDisciplinesByStage(projectCode, phase);\n                setDisciplines(data.map(String));\n                return data;\n            } catch (error) {\n                toast.error('Error al cargar las disciplinas.');\n                return [];\n            } finally {\n                setLoading(prev => ({ ...prev, disciplines: false }));\n            }\n        };\n        fetchDisciplines(formData.project_code, formData.phase);\n    }, [formData.project_code, formData.phase]);\n\n    useEffect(() => {\n        if (!formData.discipline) {\n            setActivities([]);\n            return;\n        }\n        const fetchActivities = async (projectCode: string, phase: string, discipline: string) => {\n            setLoading(prev => ({ ...prev, activities: true }));\n            try {\n                const data = await getActivitiesByDiscipline(projectCode, phase, discipline);\n                setActivities(data.map(String));\n                return data;\n            } catch (error) {\n                toast.error('Error al cargar las actividades.');\n                return [];\n            } finally {\n                setLoading(prev => ({ ...prev, activities: false }));\n            }\n        };\n        fetchActivities(formData.project_code, formData.phase, formData.discipline);\n    }, [formData.project_code, formData.phase, formData.discipline]);\n\n    // Handlers\n    const handleDateChange = (date: Date | undefined) => {\n        if (date) {\n            setSelectedDate(date);\n            refreshDailyActivities(date, String(employeeId));\n        }\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    // Data Fetching\n    const fetchProjects = useCallback(async () => {\n        setLoading(prev => ({ ...prev, projects: true }));\n        try {\n            const projectData = await getProjects();\n            setProjects(projectData);\n        } catch (error) {\n            toast.error('Error al cargar proyectos.');\n        } finally {\n            setLoading(prev => ({ ...prev, projects: false }));\n        }\n    }, []);\n\n    const fetchStages = useCallback(async (projectCode: string) => {\n        setLoading(prev => ({ ...prev, stages: true }));\n        try {\n            const stageData = await getProjectStages(projectCode);\n            setStages(stageData);\n        } catch (error) {\n            toast.error('Error al cargar etapas.');\n        } finally {\n            setLoading(prev => ({ ...prev, stages: false }));\n        }\n    }, []);\n\n    const fetchDisciplines = useCallback(async (projectCode: string, stage: string) => {\n        setLoading(prev => ({ ...prev, disciplines: true }));\n        try {\n            const disciplineData = await getDisciplinesByStage(projectCode, stage);\n            setDisciplines(disciplineData);\n        } catch (error) {\n            toast.error('Error al cargar disciplinas.');\n        } finally {\n            setLoading(prev => ({ ...prev, disciplines: false }));\n        }\n    }, []);\n\n    const fetchActivities = useCallback(async (projectCode: string, stage: string, discipline: string) => {\n        setLoading(prev => ({ ...prev, activities: true }));\n        try {\n            const activityData = await getActivitiesByDiscipline(projectCode, stage, discipline);\n            setActivities(activityData);\n        } catch (error) {\n            toast.error('Error al cargar actividades.');\n        } finally {\n            setLoading(prev => ({ ...prev, activities: false }));\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchProjects();\n    }, [fetchProjects]);\n\n    useEffect(() => {\n        refreshDailyActivities(selectedDate, String(employeeId));\n    }, [selectedDate, employeeId, refreshDailyActivities]);\n\n    const handleSelectChange = (name: string, value: string) => {\n        const newFormData = { ...formData, [name]: value };\n\n        if (name === 'project_code') {\n            newFormData.phase = '';\n            newFormData.discipline = '';\n            newFormData.activity = '';\n            setStages([]);\n            setDisciplines([]);\n            setActivities([]);\n            if (value) {\n                fetchStages(value);\n            }\n        } else if (name === 'phase') {\n            newFormData.discipline = '';\n            newFormData.activity = '';\n            setDisciplines([]);\n            setActivities([]);\n            if (value) {\n                fetchDisciplines(newFormData.project_code, value);\n            }\n        } else if (name === 'discipline') {\n            newFormData.activity = '';\n            setActivities([]);\n            if (value) {\n                fetchActivities(newFormData.project_code, newFormData.phase, value);\n            }\n        }\n        setFormData(newFormData);\n    };\n\n    const resetForm = useCallback(() => {\n        setFormData(initialFormData(employeeId));\n        setEditingActivityId(null);\n    }, [employeeId]);\n\n    const handleEditActivity = async (activity: Activity) => {\n        setFormData({\n            employee_id: String(activity.employee_id),\n            project_code: activity.project_code,\n            phase: activity.phase,\n            discipline: activity.discipline,\n            activity: activity.activity,\n            hours: String(activity.hours),\n            note: activity.note || '',\n        });\n        setEditingActivityId(activity.id);\n        \n        // Forzar la actualizaciÃ³n de los selects dependientes\n        try {\n            await fetchStages(activity.project_code);\n            await fetchDisciplines(activity.project_code, activity.phase);\n            await fetchActivities(activity.project_code, activity.phase, activity.discipline);\n        } catch (error) {\n            console.error('Error al cargar los datos para ediciÃ³n:', error);\n        }\n        \n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    const handleDelete = async (idToDelete: number) => {\n        toast.warning('Â¿EstÃ¡s seguro de que quieres eliminar esta actividad?', {\n            duration: 5000,\n            action: {\n                label: 'Eliminar',\n                onClick: async () => {\n                    try {\n                        await deleteHour(idToDelete);\n                        toast.error('Actividad eliminada correctamente.', { duration: 3000 });\n                        refreshDailyActivities(selectedDate, String(employeeId));\n                        if (editingActivityId === idToDelete) {\n                            resetForm();\n                        }\n                    } catch (error) {\n                        toast.error('Error al eliminar la actividad.', { duration: 3000 });\n                        console.error('Error deleting activity:', error);\n                    }\n                },\n            },\n            cancel: {\n                label: 'Cancelar',\n                onClick: () => toast.dismiss(),\n            },\n        });\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setLoading(prev => ({ ...prev, submit: true }));\n\n        const submissionData = {\n            ...formData,\n            date: format(selectedDate, 'yyyy-MM-dd'),\n            project_name: selectedProjectName,\n            hours: Number(formData.hours),\n            employee_id: employeeId,\n            id: editingActivityId ?? undefined,\n        };\n\n        try {\n            await submitHours(submissionData);\n            toast.success(`Actividad ${editingActivityId ? 'actualizada' : 'guardada'} con Ã©xito.`,\n            {\n                duration: 3000,\n                style: {\n                    backgroundColor: '#28a745',\n                    color: 'white',\n                    border: 'none'\n                }\n            });\n            onSuccess();\n            resetForm();\n            refreshDailyActivities(selectedDate, String(employeeId));\n        } catch (error) {\n            toast.error('Error al guardar la actividad.', { duration: 3000 });\n            console.error('Error submitting hours:', error);\n        } finally {\n            setLoading(prev => ({ ...prev, submit: false }));\n        }\n    };\n\n    const isFormValid = useMemo(() => {\n        return Boolean(\n            formData.project_code?.trim() &&\n            formData.phase?.trim() &&\n            formData.discipline?.trim() &&\n            formData.activity?.trim() &&\n            formData.hours &&\n            !isNaN(parseFloat(formData.hours)) &&\n            parseFloat(formData.hours) > 0\n        );\n    }, [formData]);\n\n    // Render\n    return (\n        <div>\n            <Header userName={employeeName} onLogout={onLogout} />\n            <div className=\"container mx-auto p-4 sm:p-6 lg:p-8\">\n\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-8\">\n                <main className=\"lg:col-span-3\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle className=\"flex items-center justify-center\">\n                                {editingActivityId ? <Pencil className=\"mr-2 h-5 w-5\" /> : <PlusCircle className=\"mr-2 h-5 w-5\" />}\n                                {editingActivityId ? 'Editar Actividad' : 'Registrar Actividad'}\n                            </CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <form onSubmit={handleSubmit} className=\"space-y-6\">\n                                <div className=\"w-full md:w-1/3\">\n                                    <label htmlFor=\"date\" className=\"block text-sm font-medium text-foreground/80 mb-1\">Fecha</label>\n                                    <Popover>\n                                        <PopoverTrigger asChild>\n                                            <Button\n                                                variant={\"outline\"}\n                                                className={cn(\n                                                    \"w-full justify-start text-left font-normal\",\n                                                    !selectedDate && \"text-muted-foreground\"\n                                                )}\n                                            >\n                                                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                                {selectedDate ? format(selectedDate, \"PPP\", { locale: es }) : <span>Seleccione una fecha</span>}\n                                            </Button>\n                                        </PopoverTrigger>\n                                        <PopoverContent className=\"w-auto p-0\">\n                                            <Calendar\n                                                mode=\"single\"\n                                                selected={selectedDate}\n                                                onSelect={handleDateChange}\n                                                initialFocus\n                                                locale={es}\n                                            />\n                                        </PopoverContent>\n                                    </Popover>\n                                </div>\n\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                    <FormSelect\n                                        label=\"CÃ³digo de Proyecto\"\n                                        name=\"project_code\"\n                                        value={formData.project_code}\n                                        onValueChange={handleSelectChange}\n                                        options={projects.map(p => ({ value: p.code, label: `${p.code} - ${p.name}` }))}\n                                        placeholder=\"Seleccione un proyecto\"\n                                        loading={loading.projects}\n                                        disabled={loading.projects}\n                                        icon={<Briefcase className=\"h-4 w-4\" />}\n                                        required\n                                    />\n                                    <div className=\"space-y-2\">\n                                        <label className=\"block text-sm font-medium text-foreground/80 mb-1\">Nombre del Proyecto</label>\n                                        <Input value={selectedProjectName} readOnly className=\"bg-muted/50\" />\n                                    </div>\n                                    <FormSelect\n                                        label=\"Etapa\"\n                                        name=\"phase\"\n                                        value={formData.phase}\n                                        onValueChange={handleSelectChange}\n                                        options={stages.map(s => ({ value: s, label: s }))}\n                                        placeholder=\"Seleccione una etapa\"\n                                        loading={loading.stages}\n                                        disabled={!formData.project_code || loading.stages}\n                                        icon={<ListChecks className=\"h-4 w-4\" />}\n                                        required\n                                    />\n                                    <FormSelect\n                                        label=\"Disciplina\"\n                                        name=\"discipline\"\n                                        value={formData.discipline}\n                                        onValueChange={handleSelectChange}\n                                        options={disciplines.map(d => ({ value: d, label: d }))}\n                                        placeholder=\"Seleccione una disciplina\"\n                                        loading={loading.disciplines}\n                                        disabled={!formData.phase || loading.disciplines}\n                                        icon={<Pencil className=\"h-4 w-4\" />}\n                                        required\n                                    />\n                                    <FormSelect\n                                        label=\"Actividad\"\n                                        name=\"activity\"\n                                        value={formData.activity}\n                                        onValueChange={handleSelectChange}\n                                        options={activities.map(a => ({ value: a, label: a }))}\n                                        placeholder=\"Seleccione una actividad\"\n                                        loading={loading.activities}\n                                        disabled={!formData.discipline || loading.activities}\n                                        icon={<ClipboardList className=\"h-4 w-4\" />}\n                                        required\n                                    />\n                                    <div className=\"space-y-2\">\n                                        <label htmlFor=\"hours\" className=\"block text-sm font-medium text-foreground/80 mb-1\">Horas <span className=\"text-destructive\">*</span></label>\n                                        <Input\n                                            id=\"hours\"\n                                            name=\"hours\"\n                                            type=\"number\"\n                                            value={formData.hours}\n                                            onChange={handleChange}\n                                            min=\"0.5\"\n                                            step=\"0.5\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"space-y-2\">\n                                    <label htmlFor=\"note\" className=\"block text-sm font-medium text-foreground/80 mb-1\">Nota (Opcional)</label>\n                                    <Input\n                                        id=\"note\"\n                                        name=\"note\"\n                                        type=\"text\"\n                                        value={formData.note}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n\n                                <div className=\"flex justify-end space-x-2 pt-4\">\n                                    {editingActivityId && (\n                                        <Button type=\"button\" variant=\"outline\" onClick={resetForm}>\n                                            <XCircle className=\"mr-2 h-4 w-4\" />\n                                            Cancelar EdiciÃ³n\n                                        </Button>\n                                    )}\n                                    <Button \n                                        type=\"submit\" \n                                        disabled={!isFormValid || loading.submit} \n                                        className={`min-w-[150px] transition-opacity ${!isFormValid ? 'opacity-70 cursor-not-allowed' : ''}`}\n                                    >\n                                        {loading.submit ? (\n                                            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                        ) : (\n                                            <Save className=\"mr-2 h-4 w-4\" />\n                                        )}\n                                        {editingActivityId ? 'Actualizar' : 'Guardar'}\n                                    </Button>\n                                </div>\n                            </form>\n                        </CardContent>\n                    </Card>\n                </main>\n\n                <aside className=\"lg:col-span-2\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle className=\"text-center\">Actividades del DÃ­a</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"space-y-4\">\n                                {loading.dailyActivities ? (\n                                    <ActivityListSkeleton />\n                                ) : dailyActivities.length > 0 ? (\n                                    dailyActivities.map(activity => (\n                                        <ActivityItem\n                                            key={activity.id}\n                                            activity={activity}\n                                            onEdit={handleEditActivity}\n                                            onDelete={handleDelete}\n                                        />\n                                    ))\n                                ) : (\n                                    <EmptyState />\n                                )}\n                            </div>\n                            <div className=\"mt-6\">\n                                <TotalHoursProgress totalHours={totalHoursToday} selectedDate={selectedDate} />\n                            </div>\n                        </CardContent>\n                    </Card>\n                </aside>\n            </div>\n        </div>\n\n    </div>\n    );\n};\n\nexport default FormularioHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}