{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useFormData = employeeId => {\n  _s();\n  const initialFormData = employeeId => ({\n    employee_id: String(employeeId),\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: ''\n  });\n  const [formData, setFormData] = useState(initialFormData(employeeId));\n  const [editingActivityId, setEditingActivityId] = useState(null);\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const v = name === 'hours' ? value.replace(',', '.') : value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: v\n    }));\n  }, []);\n  const resetForm = useCallback(() => {\n    setFormData(initialFormData(employeeId));\n    setEditingActivityId(null);\n  }, [employeeId]);\n  const handleEditActivity = useCallback(activity => {\n    console.log('Editando actividad:', activity);\n\n    // Primero actualizamos el ID de la actividad que estamos editando\n    setEditingActivityId(activity.id);\n\n    // Creamos un nuevo objeto con los datos de la actividad\n    const newFormData = {\n      employee_id: String(activity.employee_id),\n      project_code: activity.project_code || '',\n      phase: activity.phase || '',\n      discipline: activity.discipline || '',\n      activity: activity.activity || '',\n      hours: activity.hours ? String(activity.hours) : '',\n      note: activity.note || ''\n    };\n    console.log('Actualizando formulario con:', newFormData);\n\n    // Actualizamos el estado del formulario\n    setFormData(newFormData);\n  }, []);\n  return {\n    formData,\n    editingActivityId,\n    setFormData,\n    setEditingActivityId,\n    handleChange,\n    resetForm,\n    handleEditActivity\n  };\n};\n_s(useFormData, \"wPPqgGol5oFiaEjHcPAO7T/55QM=\");","map":{"version":3,"names":["useState","useCallback","useFormData","employeeId","_s","initialFormData","employee_id","String","project_code","phase","discipline","activity","hours","note","formData","setFormData","editingActivityId","setEditingActivityId","handleChange","e","name","value","target","v","replace","prev","resetForm","handleEditActivity","console","log","id","newFormData"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/formulario/hooks/useFormData.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { FormData, Activity } from '../types';\n\nexport const useFormData = (employeeId: number) => {\n  const initialFormData = (employeeId: number): FormData => ({\n    employee_id: String(employeeId),\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: '',\n  });\n\n  const [formData, setFormData] = useState<FormData>(initialFormData(employeeId));\n  const [editingActivityId, setEditingActivityId] = useState<number | null>(null);\n\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    const v = name === 'hours' ? value.replace(',', '.') : value;\n    setFormData(prev => ({ ...prev, [name]: v }));\n  }, []);\n\n  const resetForm = useCallback(() => {\n    setFormData(initialFormData(employeeId));\n    setEditingActivityId(null);\n  }, [employeeId]);\n\n  const handleEditActivity = useCallback((activity: Activity) => {\n    console.log('Editando actividad:', activity);\n    \n    // Primero actualizamos el ID de la actividad que estamos editando\n    setEditingActivityId(activity.id);\n    \n    // Creamos un nuevo objeto con los datos de la actividad\n    const newFormData: FormData = {\n      employee_id: String(activity.employee_id),\n      project_code: activity.project_code || '',\n      phase: activity.phase || '',\n      discipline: activity.discipline || '',\n      activity: activity.activity || '',\n      hours: activity.hours ? String(activity.hours) : '',\n      note: activity.note || '',\n    };\n    \n    console.log('Actualizando formulario con:', newFormData);\n    \n    // Actualizamos el estado del formulario\n    setFormData(newFormData);\n  }, []);\n\n  return {\n    formData,\n    editingActivityId,\n    setFormData,\n    setEditingActivityId,\n    handleChange,\n    resetForm,\n    handleEditActivity,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAG7C,OAAO,MAAMC,WAAW,GAAIC,UAAkB,IAAK;EAAAC,EAAA;EACjD,MAAMC,eAAe,GAAIF,UAAkB,KAAgB;IACzDG,WAAW,EAAEC,MAAM,CAACJ,UAAU,CAAC;IAC/BK,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAWK,eAAe,CAACF,UAAU,CAAC,CAAC;EAC/E,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAgB,IAAI,CAAC;EAE/E,MAAMkB,YAAY,GAAGjB,WAAW,CAAEkB,CAA4D,IAAK;IACjG,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,MAAMC,CAAC,GAAGH,IAAI,KAAK,OAAO,GAAGC,KAAK,CAACG,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAGH,KAAK;IAC5DN,WAAW,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACL,IAAI,GAAGG;IAAE,CAAC,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAGzB,WAAW,CAAC,MAAM;IAClCc,WAAW,CAACV,eAAe,CAACF,UAAU,CAAC,CAAC;IACxCc,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACd,UAAU,CAAC,CAAC;EAEhB,MAAMwB,kBAAkB,GAAG1B,WAAW,CAAEU,QAAkB,IAAK;IAC7DiB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAElB,QAAQ,CAAC;;IAE5C;IACAM,oBAAoB,CAACN,QAAQ,CAACmB,EAAE,CAAC;;IAEjC;IACA,MAAMC,WAAqB,GAAG;MAC5BzB,WAAW,EAAEC,MAAM,CAACI,QAAQ,CAACL,WAAW,CAAC;MACzCE,YAAY,EAAEG,QAAQ,CAACH,YAAY,IAAI,EAAE;MACzCC,KAAK,EAAEE,QAAQ,CAACF,KAAK,IAAI,EAAE;MAC3BC,UAAU,EAAEC,QAAQ,CAACD,UAAU,IAAI,EAAE;MACrCC,QAAQ,EAAEA,QAAQ,CAACA,QAAQ,IAAI,EAAE;MACjCC,KAAK,EAAED,QAAQ,CAACC,KAAK,GAAGL,MAAM,CAACI,QAAQ,CAACC,KAAK,CAAC,GAAG,EAAE;MACnDC,IAAI,EAAEF,QAAQ,CAACE,IAAI,IAAI;IACzB,CAAC;IAEDe,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEE,WAAW,CAAC;;IAExD;IACAhB,WAAW,CAACgB,WAAW,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLjB,QAAQ;IACRE,iBAAiB;IACjBD,WAAW;IACXE,oBAAoB;IACpBC,YAAY;IACZQ,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAACvB,EAAA,CAzDWF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}