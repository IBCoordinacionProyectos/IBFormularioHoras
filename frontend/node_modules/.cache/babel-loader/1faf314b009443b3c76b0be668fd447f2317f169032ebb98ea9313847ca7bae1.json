{"ast":null,"code":"var _process$env$REACT_AP;\n// src/api/horasApi.ts\nimport axios from 'axios';\n\n// ⚙️ Ajusta la URL base si tu backend usa otra ruta\nconst api = axios.create({\n  baseURL: (_process$env$REACT_AP = process.env.REACT_APP_API_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n/** ===== Tipos ===== */\n\n/** ===== API ===== */\n\n/**\n * Crea o actualiza una hora.\n * - Si viene id -> PUT /hours/{id}\n * - Si no viene id -> POST /hours\n * No envía \"id\" en el body.\n */\nexport async function submitHours(data) {\n  const {\n    id,\n    ...payload\n  } = data;\n  if (id != null) {\n    const res = await api.put(`/hours/${id}`, payload);\n    return res.data;\n  } else {\n    const res = await api.post('/hours', payload);\n    return res.data;\n  }\n}\nexport async function getProjects() {\n  const res = await api.get('/projects');\n  return res.data;\n}\nexport async function getProjectStages(projectCode) {\n  // Ajusta la ruta si tu backend usa otra convención\n  const res = await api.get(`/projects/${encodeURIComponent(projectCode)}/stages`);\n  return res.data;\n}\nexport async function getDisciplinesByStage(projectCode, stage) {\n  const res = await api.get(`/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines`);\n  return res.data;\n}\nexport async function getActivitiesByDiscipline(projectCode, stage, discipline) {\n  const res = await api.get(`/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines/${encodeURIComponent(discipline)}/activities`);\n  return res.data;\n}\nexport async function getDailyActivities(date, employeeId) {\n  // GET /hours?date=YYYY-MM-DD&employee_id=#\n  const res = await api.get('/hours', {\n    params: {\n      date,\n      employee_id: employeeId\n    }\n  });\n  return res.data;\n}\nexport async function deleteHour(id) {\n  await api.delete(`/hours/${id}`);\n}","map":{"version":3,"names":["axios","api","create","baseURL","_process$env$REACT_AP","process","env","REACT_APP_API_URL","headers","submitHours","data","id","payload","res","put","post","getProjects","get","getProjectStages","projectCode","encodeURIComponent","getDisciplinesByStage","stage","getActivitiesByDiscipline","discipline","getDailyActivities","date","employeeId","params","employee_id","deleteHour","delete"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\nimport axios from 'axios';\n\n// ⚙️ Ajusta la URL base si tu backend usa otra ruta\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL ?? 'http://localhost:8000/api',\n  headers: { 'Content-Type': 'application/json' },\n});\n\n/** ===== Tipos ===== */\nexport type Project = {\n  code: string;\n  name: string;\n};\n\nexport type Activity = {\n  id: number;\n  date: string; // yyyy-mm-dd\n  employee_id: number;\n  project_code: string;\n  project_name: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number;\n  note: string;\n};\n\nexport type HourPayload = {\n  id?: number;             // viene cuando editas\n  date: string;            // yyyy-mm-dd\n  employee_id: number;\n  project_code: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number;\n  note?: string;\n  project_name?: string;\n};\n\n/** ===== API ===== */\n\n/**\n * Crea o actualiza una hora.\n * - Si viene id -> PUT /hours/{id}\n * - Si no viene id -> POST /hours\n * No envía \"id\" en el body.\n */\nexport async function submitHours(data: HourPayload): Promise<Activity> {\n  const { id, ...payload } = data;\n\n  if (id != null) {\n    const res = await api.put<Activity>(`/hours/${id}`, payload);\n    return res.data;\n  } else {\n    const res = await api.post<Activity>('/hours', payload);\n    return res.data;\n  }\n}\n\nexport async function getProjects(): Promise<Project[]> {\n  const res = await api.get<Project[]>('/projects');\n  return res.data;\n}\n\nexport async function getProjectStages(projectCode: string): Promise<string[]> {\n  // Ajusta la ruta si tu backend usa otra convención\n  const res = await api.get<string[]>(`/projects/${encodeURIComponent(projectCode)}/stages`);\n  return res.data;\n}\n\nexport async function getDisciplinesByStage(projectCode: string, stage: string): Promise<string[]> {\n  const res = await api.get<string[]>(\n    `/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines`\n  );\n  return res.data;\n}\n\nexport async function getActivitiesByDiscipline(\n  projectCode: string,\n  stage: string,\n  discipline: string\n): Promise<string[]> {\n  const res = await api.get<string[]>(\n    `/projects/${encodeURIComponent(projectCode)}/stages/${encodeURIComponent(stage)}/disciplines/${encodeURIComponent(\n      discipline\n    )}/activities`\n  );\n  return res.data;\n}\n\nexport async function getDailyActivities(date: string, employeeId: number): Promise<Activity[]> {\n  // GET /hours?date=YYYY-MM-DD&employee_id=#\n  const res = await api.get<Activity[]>('/hours', {\n    params: { date, employee_id: employeeId },\n  });\n  return res.data;\n}\n\nexport async function deleteHour(id: number): Promise<void> {\n  await api.delete(`/hours/${id}`);\n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,GAAAC,qBAAA,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,2BAA2B;EACrEI,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;;AAEF;;AAgCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,WAAWA,CAACC,IAAiB,EAAqB;EACtE,MAAM;IAAEC,EAAE;IAAE,GAAGC;EAAQ,CAAC,GAAGF,IAAI;EAE/B,IAAIC,EAAE,IAAI,IAAI,EAAE;IACd,MAAME,GAAG,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAW,UAAUH,EAAE,EAAE,EAAEC,OAAO,CAAC;IAC5D,OAAOC,GAAG,CAACH,IAAI;EACjB,CAAC,MAAM;IACL,MAAMG,GAAG,GAAG,MAAMZ,GAAG,CAACc,IAAI,CAAW,QAAQ,EAAEH,OAAO,CAAC;IACvD,OAAOC,GAAG,CAACH,IAAI;EACjB;AACF;AAEA,OAAO,eAAeM,WAAWA,CAAA,EAAuB;EACtD,MAAMH,GAAG,GAAG,MAAMZ,GAAG,CAACgB,GAAG,CAAY,WAAW,CAAC;EACjD,OAAOJ,GAAG,CAACH,IAAI;AACjB;AAEA,OAAO,eAAeQ,gBAAgBA,CAACC,WAAmB,EAAqB;EAC7E;EACA,MAAMN,GAAG,GAAG,MAAMZ,GAAG,CAACgB,GAAG,CAAW,aAAaG,kBAAkB,CAACD,WAAW,CAAC,SAAS,CAAC;EAC1F,OAAON,GAAG,CAACH,IAAI;AACjB;AAEA,OAAO,eAAeW,qBAAqBA,CAACF,WAAmB,EAAEG,KAAa,EAAqB;EACjG,MAAMT,GAAG,GAAG,MAAMZ,GAAG,CAACgB,GAAG,CACvB,aAAaG,kBAAkB,CAACD,WAAW,CAAC,WAAWC,kBAAkB,CAACE,KAAK,CAAC,cAClF,CAAC;EACD,OAAOT,GAAG,CAACH,IAAI;AACjB;AAEA,OAAO,eAAea,yBAAyBA,CAC7CJ,WAAmB,EACnBG,KAAa,EACbE,UAAkB,EACC;EACnB,MAAMX,GAAG,GAAG,MAAMZ,GAAG,CAACgB,GAAG,CACvB,aAAaG,kBAAkB,CAACD,WAAW,CAAC,WAAWC,kBAAkB,CAACE,KAAK,CAAC,gBAAgBF,kBAAkB,CAChHI,UACF,CAAC,aACH,CAAC;EACD,OAAOX,GAAG,CAACH,IAAI;AACjB;AAEA,OAAO,eAAee,kBAAkBA,CAACC,IAAY,EAAEC,UAAkB,EAAuB;EAC9F;EACA,MAAMd,GAAG,GAAG,MAAMZ,GAAG,CAACgB,GAAG,CAAa,QAAQ,EAAE;IAC9CW,MAAM,EAAE;MAAEF,IAAI;MAAEG,WAAW,EAAEF;IAAW;EAC1C,CAAC,CAAC;EACF,OAAOd,GAAG,CAACH,IAAI;AACjB;AAEA,OAAO,eAAeoB,UAAUA,CAACnB,EAAU,EAAiB;EAC1D,MAAMV,GAAG,CAAC8B,MAAM,CAAC,UAAUpB,EAAE,EAAE,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}