{"ast":null,"code":"// src/api/horasApi.ts\nimport axios from 'axios';\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\n// ---------- Tipos ----------\n\n// Payloads para crear/actualizar\n\n// ---------- Helpers ----------\nconst normalizeHours = h => typeof h === 'string' ? parseFloat(h.replace(',', '.')) : h;\nconst sanitizeCreate = data => {\n  var _data$project_code, _data$phase, _data$discipline, _data$activity, _data$hours, _data$date;\n  return {\n    project_code: String((_data$project_code = data.project_code) !== null && _data$project_code !== void 0 ? _data$project_code : ''),\n    phase: String((_data$phase = data.phase) !== null && _data$phase !== void 0 ? _data$phase : ''),\n    discipline: String((_data$discipline = data.discipline) !== null && _data$discipline !== void 0 ? _data$discipline : ''),\n    activity: String((_data$activity = data.activity) !== null && _data$activity !== void 0 ? _data$activity : ''),\n    hours: normalizeHours((_data$hours = data.hours) !== null && _data$hours !== void 0 ? _data$hours : 0),\n    date: String((_data$date = data.date) !== null && _data$date !== void 0 ? _data$date : ''),\n    employee_id: typeof data.employee_id === 'string' ? parseInt(data.employee_id, 10) : Number(data.employee_id),\n    note: data.note ? String(data.note) : ''\n  };\n};\nconst sanitizeUpdate = data => {\n  var _data$project_code2, _data$phase2, _data$discipline2, _data$activity2, _data$hours2, _data$date2;\n  return {\n    project_code: String((_data$project_code2 = data.project_code) !== null && _data$project_code2 !== void 0 ? _data$project_code2 : ''),\n    phase: String((_data$phase2 = data.phase) !== null && _data$phase2 !== void 0 ? _data$phase2 : ''),\n    discipline: String((_data$discipline2 = data.discipline) !== null && _data$discipline2 !== void 0 ? _data$discipline2 : ''),\n    activity: String((_data$activity2 = data.activity) !== null && _data$activity2 !== void 0 ? _data$activity2 : ''),\n    hours: normalizeHours((_data$hours2 = data.hours) !== null && _data$hours2 !== void 0 ? _data$hours2 : 0),\n    date: String((_data$date2 = data.date) !== null && _data$date2 !== void 0 ? _data$date2 : ''),\n    note: data.note ? String(data.note) : ''\n  };\n};\n\n// ---------- Crear/Actualizar ----------\nexport const submitHours = async data => {\n  try {\n    if (data !== null && data !== void 0 && data.id) {\n      // UPDATE (PUT) — enviar solo campos permitidos\n      const body = sanitizeUpdate(data);\n      const id = String(data.id);\n      console.log('Actualizando hora con datos:', {\n        id,\n        body\n      });\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n      return res.data;\n    } else {\n      // CREATE (POST)\n      const body = sanitizeCreate(data);\n      console.log('Creando nueva hora con datos:', body);\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\n      return res.data;\n    }\n  } catch (error) {\n    var _error$response;\n    console.error('Error al enviar las horas:', error);\n    if (axios.isAxiosError(error) && (_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n      console.error('Detalles del error:', error.response.data);\n      const detail = error.response.data.detail || (typeof error.response.data.message === 'string' ? error.response.data.message : null);\n      if (detail) throw new Error(detail);\n    }\n    throw error;\n  }\n};\n\n// ---------- Catálogos / dependencias ----------\nexport const getProjects = async () => {\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\n  return res.data;\n};\nexport const getEmployees = async () => {\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\n  return res.data;\n};\nexport const getProjectStages = async projectCode => {\n  const encoded = encodeURIComponent(projectCode);\n  const res = await axios.get(`${API_BASE_URL}/activities/project/${encoded}/stages`);\n  return res.data;\n};\nexport const getDisciplinesByStage = async (projectCode, stage) => {\n  const params = [encodeURIComponent(projectCode), encodeURIComponent(stage)].join('::');\n  const res = await axios.get(`${API_BASE_URL}/activities/${params}/disciplines`);\n  return res.data;\n};\nexport const getActivitiesByDiscipline = async (projectCode, stage, discipline) => {\n  const params = [encodeURIComponent(projectCode), encodeURIComponent(stage), encodeURIComponent(discipline)].join('::');\n  const res = await axios.get(`${API_BASE_URL}/activities/${params}/activities`);\n  return res.data;\n};\n\n// ---------- Consultas de horas ----------\nexport const getDailyActivities = async (date, employeeId) => {\n  // YYYY-MM-DD\n  const dateStr = date instanceof Date ? date.toISOString().split('T')[0] : date;\n  const employeeIdNum = typeof employeeId === 'string' ? parseInt(employeeId, 10) : employeeId;\n  const res = await axios.get(`${API_BASE_URL}/daily-activities`, {\n    params: {\n      date: dateStr,\n      employee_id: employeeIdNum\n    },\n    validateStatus: s => s >= 200 && s < 300\n  });\n  return res.data || [];\n};\n\n// ---------- Update/Delete directos ----------\nexport const updateHour = async (hourId, data) => {\n  try {\n    const body = sanitizeUpdate(data);\n    console.log('Enviando datos de actualización:', {\n      hourId,\n      body\n    });\n    const res = await axios.put(`${API_BASE_URL}/hours/${hourId}`, body);\n    return res.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\n    if (axios.isAxiosError(error) && (_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.detail) {\n      throw new Error(error.response.data.detail);\n    }\n    throw error;\n  }\n};\nexport const deleteHour = async hourId => {\n  const res = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n  return res.data;\n};\n\n// ---------- Otros ----------\nexport const getProjectByCode = async projectCode => {\n  const encoded = encodeURIComponent(projectCode);\n  const res = await axios.get(`${API_BASE_URL}/projects/${encoded}`);\n  return res.data;\n};\nexport const loginUser = async credentials => {\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n  return res.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","normalizeHours","h","parseFloat","replace","sanitizeCreate","data","_data$project_code","_data$phase","_data$discipline","_data$activity","_data$hours","_data$date","project_code","String","phase","discipline","activity","hours","date","employee_id","parseInt","Number","note","sanitizeUpdate","_data$project_code2","_data$phase2","_data$discipline2","_data$activity2","_data$hours2","_data$date2","submitHours","id","body","console","log","res","put","post","error","_error$response","isAxiosError","response","detail","message","Error","getProjects","get","getEmployees","getProjectStages","projectCode","encoded","encodeURIComponent","getDisciplinesByStage","stage","params","join","getActivitiesByDiscipline","getDailyActivities","employeeId","dateStr","Date","toISOString","split","employeeIdNum","validateStatus","s","updateHour","hourId","_error$response2","_error$response2$data","deleteHour","delete","getProjectByCode","loginUser","credentials"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\n// ---------- Tipos ----------\nexport interface DailyActivity {\n  id: string;               // el backend puede devolver UUID\n  date: string;\n  employee_id: number;\n  project_code: string;\n  project_name: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number;\n  note?: string;\n}\n\n// Payloads para crear/actualizar\nexport interface CreateHourData {\n  project_code: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number | string;\n  date: string;                 // YYYY-MM-DD\n  employee_id: number | string; // requerido en creación\n  note?: string;\n}\n\nexport interface UpdateHourData {\n  project_code: string;\n  phase: string;\n  discipline: string;\n  activity: string;\n  hours: number | string;\n  date: string;                 // YYYY-MM-DD\n  note?: string;\n}\n\n// ---------- Helpers ----------\nconst normalizeHours = (h: number | string) =>\n  typeof h === 'string' ? parseFloat(h.replace(',', '.')) : h;\n\nconst sanitizeCreate = (data: any): CreateHourData => ({\n  project_code: String(data.project_code ?? ''),\n  phase: String(data.phase ?? ''),\n  discipline: String(data.discipline ?? ''),\n  activity: String(data.activity ?? ''),\n  hours: normalizeHours(data.hours ?? 0),\n  date: String(data.date ?? ''),\n  employee_id:\n    typeof data.employee_id === 'string'\n      ? parseInt(data.employee_id, 10)\n      : Number(data.employee_id),\n  note: data.note ? String(data.note) : '',\n});\n\nconst sanitizeUpdate = (data: any): UpdateHourData => ({\n  project_code: String(data.project_code ?? ''),\n  phase: String(data.phase ?? ''),\n  discipline: String(data.discipline ?? ''),\n  activity: String(data.activity ?? ''),\n  hours: normalizeHours(data.hours ?? 0),\n  date: String(data.date ?? ''),\n  note: data.note ? String(data.note) : '',\n});\n\n// ---------- Crear/Actualizar ----------\nexport const submitHours = async (data: any) => {\n  try {\n    if (data?.id) {\n      // UPDATE (PUT) — enviar solo campos permitidos\n      const body = sanitizeUpdate(data);\n      const id = String(data.id);\n      console.log('Actualizando hora con datos:', { id, body });\n      const res = await axios.put(`${API_BASE_URL}/hours/${id}`, body);\n      return res.data;\n    } else {\n      // CREATE (POST)\n      const body = sanitizeCreate(data);\n      console.log('Creando nueva hora con datos:', body);\n      const res = await axios.post(`${API_BASE_URL}/hours/`, body);\n      return res.data;\n    }\n  } catch (error: any) {\n    console.error('Error al enviar las horas:', error);\n    if (axios.isAxiosError(error) && error.response?.data) {\n      console.error('Detalles del error:', error.response.data);\n      const detail =\n        (error.response.data as any).detail ||\n        (typeof (error.response.data as any).message === 'string'\n          ? (error.response.data as any).message\n          : null);\n      if (detail) throw new Error(detail);\n    }\n    throw error;\n  }\n};\n\n// ---------- Catálogos / dependencias ----------\nexport const getProjects = async () => {\n  const res = await axios.get(`${API_BASE_URL}/projects/`);\n  return res.data;\n};\n\nexport const getEmployees = async () => {\n  const res = await axios.get(`${API_BASE_URL}/employees/`);\n  return res.data;\n};\n\nexport const getProjectStages = async (projectCode: string) => {\n  const encoded = encodeURIComponent(projectCode);\n  const res = await axios.get(\n    `${API_BASE_URL}/activities/project/${encoded}/stages`\n  );\n  return res.data;\n};\n\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\n  const params = [encodeURIComponent(projectCode), encodeURIComponent(stage)].join('::');\n  const res = await axios.get(`${API_BASE_URL}/activities/${params}/disciplines`);\n  return res.data;\n};\n\nexport const getActivitiesByDiscipline = async (\n  projectCode: string,\n  stage: string,\n  discipline: string\n) => {\n  const params = [\n    encodeURIComponent(projectCode),\n    encodeURIComponent(stage),\n    encodeURIComponent(discipline),\n  ].join('::');\n  const res = await axios.get(`${API_BASE_URL}/activities/${params}/activities`);\n  return res.data;\n};\n\n// ---------- Consultas de horas ----------\nexport const getDailyActivities = async (\n  date: Date | string,\n  employeeId: number | string\n): Promise<DailyActivity[]> => {\n  // YYYY-MM-DD\n  const dateStr = date instanceof Date ? date.toISOString().split('T')[0] : date;\n  const employeeIdNum =\n    typeof employeeId === 'string' ? parseInt(employeeId, 10) : employeeId;\n\n  const res = await axios.get<DailyActivity[]>(`${API_BASE_URL}/daily-activities`, {\n    params: { date: dateStr, employee_id: employeeIdNum },\n    validateStatus: (s) => s >= 200 && s < 300,\n  });\n  return res.data || [];\n};\n\n// ---------- Update/Delete directos ----------\nexport const updateHour = async (hourId: string | number, data: UpdateHourData) => {\n  try {\n    const body = sanitizeUpdate(data);\n    console.log('Enviando datos de actualización:', { hourId, body });\n    const res = await axios.put(`${API_BASE_URL}/hours/${hourId}`, body);\n    return res.data;\n  } catch (error: any) {\n    console.error(`Error al actualizar la hora ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response?.data?.detail) {\n      throw new Error(error.response.data.detail);\n    }\n    throw error;\n  }\n};\n\nexport const deleteHour = async (hourId: string | number) => {\n  const res = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n  return res.data;\n};\n\n// ---------- Otros ----------\nexport const getProjectByCode = async (projectCode: string) => {\n  const encoded = encodeURIComponent(projectCode);\n  const res = await axios.get(`${API_BASE_URL}/projects/${encoded}`);\n  return res.data;\n};\n\nexport const loginUser = async (credentials: any) => {\n  const res = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n  return res.data;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}