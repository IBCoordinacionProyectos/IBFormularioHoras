{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\TablaHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { format, subMonths, getDaysInMonth } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { ChevronLeft, Calendar } from 'lucide-react';\nimport { getGroupedHoursByEmployee } from '../api/horasApi';\nimport { Table, TableBody, TableFooter, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TablaHoras = () => {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [matrixData, setMatrixData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Transform grouped data to matrix format\n  const transformGroupedData = groupedData => {\n    // Extract unique employees and days\n    const employeesMap = new Map();\n    const daysSet = new Set();\n    groupedData.forEach(item => {\n      // Add employee to map\n      const employeeId = parseInt(item.employee_id, 10);\n      if (!employeesMap.has(item.employee_id)) {\n        employeesMap.set(item.employee_id, {\n          id: employeeId,\n          name: item.short_name,\n          // Using short_name as name for display\n          short_name: item.short_name\n        });\n      }\n\n      // Add day to set\n      daysSet.add(item.date);\n    });\n\n    // Convert to arrays and sort\n    const employees = Array.from(employeesMap.values()).sort((a, b) => a.short_name.localeCompare(b.short_name));\n    const days = Array.from(daysSet).sort();\n\n    // Create matrix\n    const matrix = [];\n    const rowTotals = [];\n    const colTotals = Array(days.length).fill(0);\n    employees.forEach((employee, rowIndex) => {\n      const row = Array(days.length).fill(0);\n      let rowTotal = 0;\n      days.forEach((day, colIndex) => {\n        const matchingItem = groupedData.find(item => item.employee_id === employee.id.toString() && item.date === day);\n        if (matchingItem) {\n          row[colIndex] = matchingItem.hours;\n          rowTotal += matchingItem.hours;\n          colTotals[colIndex] += matchingItem.hours;\n        }\n      });\n      matrix.push(row);\n      rowTotals.push(rowTotal);\n    });\n    return {\n      employees,\n      days,\n      matrix,\n      totals: {\n        rows: rowTotals,\n        cols: colTotals\n      }\n    };\n  };\n\n  // Fetch matrix data for the current month\n  useEffect(() => {\n    const fetchMatrixData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth() + 1; // getMonth() is zero-indexed\n\n        const groupedData = await getGroupedHoursByEmployee(year, month);\n        const transformedData = transformGroupedData(groupedData);\n        setMatrixData(transformedData);\n      } catch (err) {\n        console.error('Error fetching matrix data:', err);\n        setError(err.message || 'Error al cargar el reporte de horas');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMatrixData();\n  }, [currentMonth]);\n  const handlePreviousMonth = () => {\n    setCurrentMonth(subMonths(currentMonth, 1));\n  };\n  const handleCurrentMonth = () => {\n    setCurrentMonth(new Date());\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: format(currentMonth, 'MMMM yyyy', {\n              locale: es\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"sm\",\n              onClick: handlePreviousMonth,\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"sm\",\n              onClick: handleCurrentMonth,\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4 rotate-180\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-32\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cargando datos...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: format(currentMonth, 'MMMM yyyy', {\n              locale: es\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"sm\",\n              onClick: handlePreviousMonth,\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"sm\",\n              onClick: handleCurrentMonth,\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4 rotate-180\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-32 text-red-500\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If we have data, render the matrix table\n  if (matrixData) {\n    const {\n      employees,\n      days,\n      matrix,\n      totals\n    } = matrixData;\n\n    // Filter out days where no collaborator has hours\n    const daysWithHours = days.filter((_, index) => totals.cols[index] > 0);\n    const filteredMatrix = matrix.map(row => row.filter((_, colIndex) => totals.cols[colIndex] > 0));\n    const filteredTotalsCols = totals.cols.filter(total => total > 0);\n\n    // Get the number of days in the month for proper column count\n    const daysInMonth = getDaysInMonth(currentMonth);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"flex flex-col sm:flex-row sm:items-center justify-between gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: format(currentMonth, 'MMMM yyyy', {\n                locale: es\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"sm\",\n              onClick: handlePreviousMonth,\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              size: \"sm\",\n              onClick: handleCurrentMonth,\n              disabled: currentMonth.getMonth() === new Date().getMonth() && currentMonth.getFullYear() === new Date().getFullYear(),\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"h-4 w-4 rotate-180\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: employees.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center h-32\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No hay datos para el mes seleccionado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  className: \"text-black font-bold sticky left-0 z-10 p-2\",\n                  children: \"Colaborador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), daysWithHours.map((day, index) => /*#__PURE__*/_jsxDEV(TableHead, {\n                  className: \"text-black font-bold text-center p-2\",\n                  children: parseInt(day.split('-')[2], 10)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(TableHead, {\n                  className: \"text-black font-bold text-center p-2\",\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: employees.map((employee, rowIndex) => {\n                var _filteredMatrix$rowIn, _totals$rows$rowIndex;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"font-medium sticky left-0 z-10 p-2\",\n                    children: employee.short_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), (_filteredMatrix$rowIn = filteredMatrix[rowIndex]) === null || _filteredMatrix$rowIn === void 0 ? void 0 : _filteredMatrix$rowIn.map((hours, colIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-center p-2\",\n                    children: hours > 0 ? hours.toFixed(1) : ''\n                  }, colIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"text-center font-bold p-2\",\n                    children: ((_totals$rows$rowIndex = totals.rows[rowIndex]) === null || _totals$rows$rowIndex === void 0 ? void 0 : _totals$rows$rowIndex.toFixed(1)) || '0.0'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 23\n                  }, this)]\n                }, employee.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                className: \"font-bold\",\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-right p-2\",\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), filteredTotalsCols.map((total, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-center p-2\",\n                  children: total.toFixed(1)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"text-center p-2\",\n                  children: totals.rows.reduce((sum, rowTotal) => sum + rowTotal, 0).toFixed(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 8\n    }, this);\n  }\n\n  // Fallback in case we have no data and no error\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: format(currentMonth, 'MMMM yyyy', {\n            locale: es\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"sm\",\n            onClick: handlePreviousMonth,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"sm\",\n            onClick: handleCurrentMonth,\n            children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n              className: \"h-4 w-4 rotate-180\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-32\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay datos disponibles.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(TablaHoras, \"V+u96qPJtbM2MehkZRX+7/qZ9e8=\");\n_c = TablaHoras;\nexport default TablaHoras;\nvar _c;\n$RefreshReg$(_c, \"TablaHoras\");","map":{"version":3,"names":["React","useState","useEffect","format","subMonths","getDaysInMonth","es","Card","CardContent","CardHeader","CardTitle","Button","ChevronLeft","Calendar","getGroupedHoursByEmployee","Table","TableBody","TableFooter","TableCell","TableHead","TableHeader","TableRow","jsxDEV","_jsxDEV","TablaHoras","_s","currentMonth","setCurrentMonth","Date","matrixData","setMatrixData","loading","setLoading","error","setError","transformGroupedData","groupedData","employeesMap","Map","daysSet","Set","forEach","item","employeeId","parseInt","employee_id","has","set","id","name","short_name","add","date","employees","Array","from","values","sort","a","b","localeCompare","days","matrix","rowTotals","colTotals","length","fill","employee","rowIndex","row","rowTotal","day","colIndex","matchingItem","find","toString","hours","push","totals","rows","cols","fetchMatrixData","year","getFullYear","month","getMonth","transformedData","err","console","message","handlePreviousMonth","handleCurrentMonth","children","className","locale","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","daysWithHours","filter","_","index","filteredMatrix","map","filteredTotalsCols","total","daysInMonth","disabled","split","_filteredMatrix$rowIn","_totals$rows$rowIndex","toFixed","reduce","sum","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/TablaHoras.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format, subMonths, startOfMonth, endOfMonth, getDaysInMonth } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport { ChevronLeft, Calendar } from 'lucide-react';\r\nimport { getGroupedHoursByEmployee } from '../api/horasApi';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableFooter,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from './ui/table';\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  short_name: string;\r\n}\r\n\r\ninterface GroupedHour {\r\n  date: string;\r\n  employee_id: string;\r\n  short_name: string;\r\n  hours: number;\r\n}\r\n\r\ninterface TransformedData {\r\n  employees: Employee[];\r\n  days: string[];\r\n  matrix: number[][];\r\n  totals: {\r\n    rows: number[];\r\n    cols: number[];\r\n  };\r\n}\r\n\r\nconst TablaHoras: React.FC = () => {\r\n  const [currentMonth, setCurrentMonth] = useState<Date>(new Date());\r\n  const [matrixData, setMatrixData] = useState<TransformedData | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Transform grouped data to matrix format\r\n  const transformGroupedData = (groupedData: GroupedHour[]): TransformedData => {\r\n    // Extract unique employees and days\r\n    const employeesMap = new Map<string, { id: number; name: string; short_name: string }>();\r\n    const daysSet = new Set<string>();\r\n    \r\n    groupedData.forEach(item => {\r\n      // Add employee to map\r\n      const employeeId = parseInt(item.employee_id, 10);\r\n      if (!employeesMap.has(item.employee_id)) {\r\n        employeesMap.set(item.employee_id, {\r\n          id: employeeId,\r\n          name: item.short_name, // Using short_name as name for display\r\n          short_name: item.short_name\r\n        });\r\n      }\r\n      \r\n      // Add day to set\r\n      daysSet.add(item.date);\r\n    });\r\n    \r\n    // Convert to arrays and sort\r\n    const employees = Array.from(employeesMap.values()).sort((a, b) => a.short_name.localeCompare(b.short_name));\r\n    const days = Array.from(daysSet).sort();\r\n    \r\n    // Create matrix\r\n    const matrix: number[][] = [];\r\n    const rowTotals: number[] = [];\r\n    const colTotals: number[] = Array(days.length).fill(0);\r\n    \r\n    employees.forEach((employee, rowIndex) => {\r\n      const row: number[] = Array(days.length).fill(0);\r\n      let rowTotal = 0;\r\n      \r\n      days.forEach((day, colIndex) => {\r\n        const matchingItem = groupedData.find(\r\n          item => item.employee_id === employee.id.toString() && item.date === day\r\n        );\r\n        \r\n        if (matchingItem) {\r\n          row[colIndex] = matchingItem.hours;\r\n          rowTotal += matchingItem.hours;\r\n          colTotals[colIndex] += matchingItem.hours;\r\n        }\r\n      });\r\n      \r\n      matrix.push(row);\r\n      rowTotals.push(rowTotal);\r\n    });\r\n    \r\n    return {\r\n      employees,\r\n      days,\r\n      matrix,\r\n      totals: {\r\n        rows: rowTotals,\r\n        cols: colTotals\r\n      }\r\n    };\r\n  };\r\n\r\n  // Fetch matrix data for the current month\r\n  useEffect(() => {\r\n    const fetchMatrixData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const year = currentMonth.getFullYear();\r\n        const month = currentMonth.getMonth() + 1; // getMonth() is zero-indexed\r\n        \r\n        const groupedData = await getGroupedHoursByEmployee(year, month);\r\n        const transformedData = transformGroupedData(groupedData);\r\n        \r\n        setMatrixData(transformedData);\r\n      } catch (err: any) {\r\n        console.error('Error fetching matrix data:', err);\r\n        setError(err.message || 'Error al cargar el reporte de horas');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMatrixData();\r\n  }, [currentMonth]);\r\n\r\n  const handlePreviousMonth = () => {\r\n    setCurrentMonth(subMonths(currentMonth, 1));\r\n  };\r\n\r\n  const handleCurrentMonth = () => {\r\n    setCurrentMonth(new Date());\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleCurrentMonth}>\r\n                <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-32\">\r\n            <p>Cargando datos...</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handleCurrentMonth}>\r\n                <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-32 text-red-500\">\r\n            <p>{error}</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n   // If we have data, render the matrix table\r\n   if (matrixData) {\r\n     const { employees, days, matrix, totals } = matrixData;\r\n     \r\n     // Filter out days where no collaborator has hours\r\n     const daysWithHours = days.filter((_, index) => totals.cols[index] > 0);\r\n     const filteredMatrix = matrix.map(row =>\r\n       row.filter((_, colIndex) => totals.cols[colIndex] > 0)\r\n     );\r\n     const filteredTotalsCols = totals.cols.filter(total => total > 0);\r\n     \r\n     // Get the number of days in the month for proper column count\r\n     const daysInMonth = getDaysInMonth(currentMonth);\r\n     \r\n     return (\r\n       <Card>\r\n         <CardHeader>\r\n          <CardTitle className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Calendar className=\"h-5 w-5\" />\r\n              <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={handleCurrentMonth}\r\n                disabled={currentMonth.getMonth() === new Date().getMonth() &&\r\n                         currentMonth.getFullYear() === new Date().getFullYear()}\r\n              >\r\n                <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n              </Button>\r\n            </div>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {employees.length === 0 ? (\r\n            <div className=\"flex items-center justify-center h-32\">\r\n              <p>No hay datos para el mes seleccionado.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead className=\"text-black font-bold sticky left-0 z-10 p-2\">Colaborador</TableHead>\r\n                    {daysWithHours.map((day, index) => (\r\n                      <TableHead key={index} className=\"text-black font-bold text-center p-2\">\r\n                        {parseInt(day.split('-')[2], 10)}\r\n                      </TableHead>\r\n                    ))}\r\n                    <TableHead className=\"text-black font-bold text-center p-2\">Total</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {employees.map((employee, rowIndex) => (\r\n                    <TableRow key={employee.id}>\r\n                      <TableCell className=\"font-medium sticky left-0 z-10 p-2\">\r\n                        {employee.short_name}\r\n                      </TableCell>\r\n                      {filteredMatrix[rowIndex]?.map((hours, colIndex) => (\r\n                        <TableCell key={colIndex} className=\"text-center p-2\">\r\n                          {hours > 0 ? hours.toFixed(1) : ''}\r\n                        </TableCell>\r\n                      ))}\r\n                      <TableCell className=\"text-center font-bold p-2\">\r\n                        {totals.rows[rowIndex]?.toFixed(1) || '0.0'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n                <TableFooter>\r\n                  <TableRow className=\"font-bold\">\r\n                    <TableCell className=\"text-right p-2\">Total</TableCell>\r\n                    {filteredTotalsCols.map((total, index) => (\r\n                      <TableCell key={index} className=\"text-center p-2\">\r\n                        {total.toFixed(1)}\r\n                      </TableCell>\r\n                    ))}\r\n                    <TableCell className=\"text-center p-2\">\r\n                      {totals.rows.reduce((sum, rowTotal) => sum + rowTotal, 0).toFixed(1)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableFooter>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  // Fallback in case we have no data and no error\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center justify-between\">\r\n          <span>{format(currentMonth, 'MMMM yyyy', { locale: es })}</span>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Button variant=\"outline\" size=\"sm\" onClick={handlePreviousMonth}>\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={handleCurrentMonth}>\r\n              <ChevronLeft className=\"h-4 w-4 rotate-180\" />\r\n            </Button>\r\n          </div>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"flex items-center justify-center h-32\">\r\n          <p>No hay datos disponibles.</p>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TablaHoras;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}