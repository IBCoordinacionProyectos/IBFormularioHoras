{"ast":null,"code":"// src/api/horasApi.ts\nimport axios from 'axios';\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\nexport const submitHours = async data => {\n  try {\n    const {\n      id,\n      ...payload\n    } = data;\n\n    // Asegurarse de que los campos tengan el formato correcto según el esquema\n    const formattedData = {\n      date: payload.date,\n      employee_id: Number(payload.employee_id) || 0,\n      project_code: payload.project_code || '',\n      phase: payload.phase || '',\n      discipline: payload.discipline || '',\n      activity: payload.activity || '',\n      hours: parseFloat(payload.hours) || 0,\n      note: payload.note || ''\n    };\n    if (id) {\n      // Para actualización, usamos la función updateHour existente\n      return await updateHour(id, formattedData);\n    } else {\n      // Para creación\n      const response = await axios.post(`${API_BASE_URL}/hours/`, formattedData);\n      return response.data;\n    }\n  } catch (error) {\n    console.error('Error al enviar/actualizar las horas:', error);\n    throw error;\n  }\n};\nexport const getProjects = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/projects/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener proyectos:', error);\n    throw error;\n  }\n};\nexport const getEmployees = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/employees/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener empleados:', error);\n    throw error;\n  }\n};\nexport const getDisciplinesByStage = async (projectCode, stage) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/disciplines`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener disciplinas para el proyecto ${projectCode}, etapa ${stage}:`, error);\n    throw error;\n  }\n};\nexport const getActivitiesByDiscipline = async (projectCode, stage, discipline) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage), encodeURIComponent(discipline)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/activities`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener actividades para el proyecto ${projectCode}, etapa ${stage}, disciplina ${discipline}:`, error);\n    throw error;\n  }\n};\nexport const getDailyActivities = async (date, employeeId) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/daily-activities`, {\n      params: {\n        date,\n        employee_id: employeeId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching daily activities:', error);\n    throw error;\n  }\n};\nexport const getProjectStages = async projectCode => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    // Usa el endpoint en activities\n    const response = await axios.get(`${API_BASE_URL}/activities/project/${encodedProjectCode}/stages`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener etapas para el proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\nexport const updateHour = async (hourId, data) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/hours/${hourId}`, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al actualizar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\nexport const deleteHour = async hourId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\nexport const getProjectByCode = async projectCode => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    const response = await axios.get(`${API_BASE_URL}/projects/${encodedProjectCode}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error en el inicio de sesión:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","submitHours","data","id","payload","formattedData","date","employee_id","Number","project_code","phase","discipline","activity","hours","parseFloat","note","updateHour","response","post","error","console","getProjects","get","getEmployees","getDisciplinesByStage","projectCode","stage","params","encodeURIComponent","join","getActivitiesByDiscipline","getDailyActivities","employeeId","getProjectStages","encodedProjectCode","hourId","put","deleteHour","delete","getProjectByCode","loginUser","credentials"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// src/api/horasApi.ts\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\nexport const submitHours = async (data: any) => {\n  try {\n    const { id, ...payload } = data;\n    \n    // Asegurarse de que los campos tengan el formato correcto según el esquema\n    const formattedData = {\n      date: payload.date,\n      employee_id: Number(payload.employee_id) || 0,\n      project_code: payload.project_code || '',\n      phase: payload.phase || '',\n      discipline: payload.discipline || '',\n      activity: payload.activity || '',\n      hours: parseFloat(payload.hours) || 0,\n      note: payload.note || ''\n    };\n\n    if (id) {\n      // Para actualización, usamos la función updateHour existente\n      return await updateHour(id, formattedData);\n    } else {\n      // Para creación\n      const response = await axios.post(`${API_BASE_URL}/hours/`, formattedData);\n      return response.data;\n    }\n  } catch (error) {\n    console.error('Error al enviar/actualizar las horas:', error);\n    throw error;\n  }\n};\n\nexport const getProjects = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/projects/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener proyectos:', error);\n    throw error;\n  }\n};\n\nexport const getEmployees = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/employees/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener empleados:', error);\n    throw error;\n  }\n};\n\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/disciplines`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener disciplinas para el proyecto ${projectCode}, etapa ${stage}:`, error);\n    throw error;\n  }\n};\n\nexport const getActivitiesByDiscipline = async (\n  projectCode: string,\n  stage: string,\n  discipline: string\n) => {\n  try {\n    const params = [\n      encodeURIComponent(projectCode),\n      encodeURIComponent(stage),\n      encodeURIComponent(discipline),\n    ].join('::');\n\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/activities`);\n    return response.data;\n  } catch (error) {\n    console.error(\n      `Error al obtener actividades para el proyecto ${projectCode}, etapa ${stage}, disciplina ${discipline}:`,\n      error\n    );\n    throw error;\n  }\n};\n\nexport const getDailyActivities = async (date: string, employeeId: number) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/daily-activities`, {\n      params: { date, employee_id: employeeId },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching daily activities:', error);\n    throw error;\n  }\n};\n\nexport const getProjectStages = async (projectCode: string) => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    // Usa el endpoint en activities\n    const response = await axios.get(\n      `${API_BASE_URL}/activities/project/${encodedProjectCode}/stages`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener etapas para el proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\n\nexport const updateHour = async (hourId: number, data: any) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/hours/${hourId}`, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al actualizar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\n\nexport const deleteHour = async (hourId: string | number) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\n\nexport const getProjectByCode = async (projectCode: string) => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    const response = await axios.get(`${API_BASE_URL}/projects/${encodedProjectCode}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\n\nexport const loginUser = async (credentials: any) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error en el inicio de sesión:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}