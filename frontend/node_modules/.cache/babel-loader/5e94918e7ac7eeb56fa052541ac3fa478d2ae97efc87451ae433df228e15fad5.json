{"ast":null,"code":"import _objectSpread from \"C:/Users/YeisonDuqueDiaz/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { tzName } from \"../tzName/index.js\";\nimport { TZDateMini } from \"./mini.js\";\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = \"\".concat(sign).concat(hours, \":\").concat(minutes);\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return \"\".concat(this.toDateString(), \" \").concat(this.toTimeString());\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return \"\".concat(day === null || day === void 0 ? void 0 : day.slice(0, -1) /* Remove \",\" */, \" \").concat(month, \" \").concat(date, \" \").concat(year);\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return \"\".concat(time, \" GMT\").concat(sign).concat(hours).concat(minutes, \" (\").concat(tzName(this.timeZone, this), \")\");\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, _objectSpread(_objectSpread({}, options), {}, {\n      timeZone: (options === null || options === void 0 ? void 0 : options.timeZone) || this.timeZone\n    }));\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, _objectSpread(_objectSpread({}, options), {}, {\n      timeZone: (options === null || options === void 0 ? void 0 : options.timeZone) || this.timeZone\n    }));\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, _objectSpread(_objectSpread({}, options), {}, {\n      timeZone: (options === null || options === void 0 ? void 0 : options.timeZone) || this.timeZone\n    }));\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}","map":{"version":3,"names":["tzName","TZDateMini","TZDate","tz","_len","arguments","length","args","Array","_key","Date","now","toISOString","sign","hours","minutes","tzComponents","concat","internal","slice","toString","toDateString","toTimeString","day","date","month","year","toUTCString","split","time","timeZone","toLocaleString","locales","options","prototype","call","_objectSpread","toLocaleDateString","toLocaleTimeString","offset","getTimezoneOffset","String","Math","floor","abs","padStart","withTimeZone","Symbol","for"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/@date-fns/tz/date/index.js"],"sourcesContent":["import { tzName } from \"../tzName/index.js\";\nimport { TZDateMini } from \"./mini.js\";\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}