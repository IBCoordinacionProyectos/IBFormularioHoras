{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SelectField from './SelectField';\n// RUTA DE IMPORTACIÓN CORREGIDA para horasApi\nimport { getProjects, getEmployees } from '../api/horasApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormularioHoras = ({\n  onSuccess\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    employee_id: '',\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: ''\n  });\n  const [projects, setProjects] = useState([]);\n  // Mapa para almacenar proyectos por código\n  const [projectsMap, setProjectsMap] = useState({});\n  const [employees, setEmployees] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [disciplines, setDisciplines] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [loadingProjects, setLoadingProjects] = useState(false);\n  const [loadingEmployees, setLoadingEmployees] = useState(false);\n  const [loadingStages, setLoadingStages] = useState(false);\n  const [loadingDisciplines, setLoadingDisciplines] = useState(false);\n  const [loadingActivities, setLoadingActivities] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoadingProjects(true);\n      try {\n        const projectsData = await getProjects();\n        const projectsList = projectsData.map(p => ({\n          code: p.code,\n          name: p.name\n        }));\n        setProjects(projectsList);\n\n        // Crear mapa de proyectos: { código: nombre }\n        const map = {};\n        projectsList.forEach(project => {\n          map[project.code] = project.name;\n        });\n        setProjectsMap(map);\n      } catch (error) {\n        console.error(\"Fallo al obtener proyectos:\", error);\n      } finally {\n        setLoadingProjects(false);\n      }\n      setLoadingEmployees(true);\n      try {\n        const employeesData = await getEmployees();\n        setEmployees(employeesData.map(e => ({\n          id: e.id,\n          name: e.name\n        })));\n      } catch (error) {\n        console.error(\"Fallo al obtener empleados:\", error);\n      } finally {\n        setLoadingEmployees(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Resto del código se mantiene igual...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Registro de Horas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Proyecto\",\n        name: \"project_code\",\n        value: formData.project_code,\n        onChange: handleChange,\n        required: true,\n        options: projects.map(proj => ({\n          value: proj.code,\n          label: `${proj.code} - ${proj.name}`\n        })),\n        disabled: loadingProjects,\n        isLoading: loadingProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), formData.project_code && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-[-0.5rem] mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: \"Proyecto seleccionado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), \" \", projectsMap[formData.project_code]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(FormularioHoras, \"EDr5QoUXFVzgrpaMuLJlmJtrN5M=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","SelectField","getProjects","getEmployees","jsxDEV","_jsxDEV","FormularioHoras","onSuccess","_s","formData","setFormData","date","Date","toISOString","split","employee_id","project_code","phase","discipline","activity","hours","note","projects","setProjects","projectsMap","setProjectsMap","employees","setEmployees","stages","setStages","disciplines","setDisciplines","activities","setActivities","loadingProjects","setLoadingProjects","loadingEmployees","setLoadingEmployees","loadingStages","setLoadingStages","loadingDisciplines","setLoadingDisciplines","loadingActivities","setLoadingActivities","submitError","setSubmitError","fetchInitialData","projectsData","projectsList","map","p","code","name","forEach","project","error","console","employeesData","e","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","handleSubmit","label","value","onChange","handleChange","required","options","proj","disabled","isLoading","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport InputField from './InputField';\r\nimport SelectField from './SelectField';\r\nimport TextareaField from './TextareaField';\r\nimport DatePicker from './DatePicker';\r\n// RUTA DE IMPORTACIÓN CORREGIDA para horasApi\r\nimport { submitHours, getProjects, getEmployees, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline } from '../api/horasApi';\r\n\r\ninterface FormularioHorasProps {\r\n    onSuccess: () => void;\r\n}\r\n\r\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({ onSuccess }) => {\r\n    const [formData, setFormData] = useState({\r\n        date: new Date().toISOString().split('T')[0],\r\n        employee_id: '',\r\n        project_code: '',\r\n        phase: '',\r\n        discipline: '',\r\n        activity: '',\r\n        hours: '',\r\n        note: ''\r\n    });\r\n\r\n    const [projects, setProjects] = useState<{ code: string; name: string }[]>([]);\r\n    // Mapa para almacenar proyectos por código\r\n    const [projectsMap, setProjectsMap] = useState<Record<string, string>>({});\r\n    const [employees, setEmployees] = useState<{ id: number; name: string }[]>([]);\r\n    const [stages, setStages] = useState<string[]>([]);\r\n    const [disciplines, setDisciplines] = useState<string[]>([]);\r\n    const [activities, setActivities] = useState<string[]>([]);\r\n\r\n    const [loadingProjects, setLoadingProjects] = useState(false);\r\n    const [loadingEmployees, setLoadingEmployees] = useState(false);\r\n    const [loadingStages, setLoadingStages] = useState(false);\r\n    const [loadingDisciplines, setLoadingDisciplines] = useState(false);\r\n    const [loadingActivities, setLoadingActivities] = useState(false);\r\n    const [submitError, setSubmitError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            setLoadingProjects(true);\r\n            try {\r\n                const projectsData = await getProjects();\r\n                const projectsList = projectsData.map((p: any) => ({ code: p.code, name: p.name }));\r\n                setProjects(projectsList);\r\n                \r\n                // Crear mapa de proyectos: { código: nombre }\r\n                const map: Record<string, string> = {};\r\n                projectsList.forEach(project => {\r\n                    map[project.code] = project.name;\r\n                });\r\n                setProjectsMap(map);\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener proyectos:\", error);\r\n            } finally {\r\n                setLoadingProjects(false);\r\n            }\r\n\r\n            setLoadingEmployees(true);\r\n            try {\r\n                const employeesData = await getEmployees();\r\n                setEmployees(employeesData.map((e: any) => ({ id: e.id, name: e.name })));\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener empleados:\", error);\r\n            } finally {\r\n                setLoadingEmployees(false);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    // Resto del código se mantiene igual...\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n            <h2 className=\"text-2xl font-bold mb-6 text-center\">Registro de Horas</h2>\r\n            {submitError && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{submitError}</div>}\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                {/* ... otros campos ... */}\r\n\r\n                <SelectField\r\n                    label=\"Proyecto\"\r\n                    name=\"project_code\"\r\n                    value={formData.project_code}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={projects.map(proj => ({ value: proj.code, label: `${proj.code} - ${proj.name}` }))}\r\n                    disabled={loadingProjects}\r\n                    isLoading={loadingProjects}\r\n                />\r\n                \r\n                {/* Mostrar nombre del proyecto seleccionado */}\r\n                {formData.project_code && (\r\n                    <div className=\"mt-[-0.5rem] mb-2\">\r\n                        <p className=\"text-sm text-gray-600\">\r\n                            <span className=\"font-medium\">Proyecto seleccionado:</span> {projectsMap[formData.project_code]}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n\r\n                {/* ... resto de campos ... */}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormularioHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}