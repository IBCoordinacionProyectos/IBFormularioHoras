{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport InputField from './InputField';\nimport SelectField from './SelectField';\nimport TextareaField from './TextareaField';\nimport DatePicker from './DatePicker';\nimport { submitHours, getProjects, getEmployees, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline, getDailyActivities // Nueva función para obtener actividades del día\n} from '../api/horasApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormularioHoras = ({\n  onSuccess\n}) => {\n  _s();\n  // Estado inicial vacío para todos los campos\n  const [formData, setFormData] = useState({\n    date: '',\n    employee_id: '',\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: ''\n  });\n  const [projects, setProjects] = useState([]);\n  const [projectsMap, setProjectsMap] = useState({});\n  const [employees, setEmployees] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [disciplines, setDisciplines] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [selectedProjectName, setSelectedProjectName] = useState('');\n  const [selectedEmployeeName, setSelectedEmployeeName] = useState('');\n  const [loadingProjects, setLoadingProjects] = useState(false);\n  const [loadingEmployees, setLoadingEmployees] = useState(false);\n  const [loadingStages, setLoadingStages] = useState(false);\n  const [loadingDisciplines, setLoadingDisciplines] = useState(false);\n  const [loadingActivities, setLoadingActivities] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n\n  // Nuevo estado para actividades registradas\n  const [dailyActivities, setDailyActivities] = useState([]);\n  const [loadingDailyActivities, setLoadingDailyActivities] = useState(false);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoadingProjects(true);\n      try {\n        const projectsData = await getProjects();\n        const projectsList = projectsData.map(p => ({\n          code: p.code,\n          name: p.name\n        }));\n        setProjects(projectsList);\n        const map = {};\n        projectsList.forEach(project => {\n          map[project.code] = project.name;\n        });\n        setProjectsMap(map);\n      } catch (error) {\n        console.error(\"Fallo al obtener proyectos:\", error);\n      } finally {\n        setLoadingProjects(false);\n      }\n      setLoadingEmployees(true);\n      try {\n        const employeesData = await getEmployees();\n        setEmployees(employeesData.map(e => ({\n          id: e.id,\n          name: e.name\n        })));\n      } catch (error) {\n        console.error(\"Fallo al obtener empleados:\", error);\n      } finally {\n        setLoadingEmployees(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Función para cargar actividades diarias\n  const fetchDailyActivities = useCallback(async () => {\n    if (formData.date && formData.employee_id) {\n      setLoadingDailyActivities(true);\n      try {\n        const activitiesData = await getDailyActivities(formData.date, parseInt(formData.employee_id));\n        setDailyActivities(activitiesData);\n      } catch (error) {\n        console.error(\"Error al obtener actividades diarias:\", error);\n      } finally {\n        setLoadingDailyActivities(false);\n      }\n    } else {\n      setDailyActivities([]);\n    }\n  }, [formData.date, formData.employee_id]);\n\n  // Cargar actividades cuando cambia la fecha o empleado\n  useEffect(() => {\n    fetchDailyActivities();\n  }, [formData.date, formData.employee_id, fetchDailyActivities]);\n\n  // Actualizar nombre de empleado seleccionado\n  useEffect(() => {\n    if (formData.employee_id) {\n      const employee = employees.find(emp => emp.id.toString() === formData.employee_id);\n      setSelectedEmployeeName((employee === null || employee === void 0 ? void 0 : employee.name) || '');\n    } else {\n      setSelectedEmployeeName('');\n    }\n  }, [formData.employee_id, employees]);\n  useEffect(() => {\n    if (formData.project_code) {\n      setSelectedProjectName(projectsMap[formData.project_code] || '');\n    } else {\n      setSelectedProjectName('');\n    }\n    if (formData.project_code) {\n      setLoadingStages(true);\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: ''\n      }));\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      const fetchStages = async () => {\n        try {\n          const stagesData = await getProjectStages(formData.project_code);\n          setStages(stagesData);\n        } catch (error) {\n          console.error(`Fallo al obtener etapas para ${formData.project_code}:`, error);\n        } finally {\n          setLoadingStages(false);\n        }\n      };\n      fetchStages();\n    } else {\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, projectsMap]);\n  useEffect(() => {\n    if (formData.project_code && formData.phase) {\n      setLoadingDisciplines(true);\n      setFormData(prev => ({\n        ...prev,\n        discipline: '',\n        activity: ''\n      }));\n      setDisciplines([]);\n      setActivities([]);\n      const fetchDisciplines = async () => {\n        try {\n          const disciplinesData = await getDisciplinesByStage(formData.project_code, formData.phase);\n          setDisciplines(disciplinesData);\n        } catch (error) {\n          console.error(`Fallo al obtener disciplinas para el proyecto ${formData.project_code}, etapa ${formData.phase}:`, error);\n        } finally {\n          setLoadingDisciplines(false);\n        }\n      };\n      fetchDisciplines();\n    } else {\n      setDisciplines([]);\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        discipline: '',\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, formData.phase]);\n  useEffect(() => {\n    if (formData.project_code && formData.phase && formData.discipline) {\n      setLoadingActivities(true);\n      setFormData(prev => ({\n        ...prev,\n        activity: ''\n      }));\n      setActivities([]);\n      const fetchActivities = async () => {\n        try {\n          const activitiesData = await getActivitiesByDiscipline(formData.project_code, formData.phase, formData.discipline);\n          setActivities(activitiesData);\n        } catch (error) {\n          console.error(`Fallo al obtener actividades para el proyecto ${formData.project_code}, etapa ${formData.phase}, disciplina ${formData.discipline}:`, error);\n        } finally {\n          setLoadingActivities(false);\n        }\n      };\n      fetchActivities();\n    } else {\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, formData.phase, formData.discipline]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setSubmitError(null);\n  };\n  const handleDateChange = date => {\n    // Convertir a string ISO (YYYY-MM-DD) para el estado\n    const dateString = date ? date.toISOString().split('T')[0] : '';\n    setFormData(prev => ({\n      ...prev,\n      date: dateString\n    }));\n    setSubmitError(null);\n  };\n  const handleProjectCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      project_code: value,\n      phase: '',\n      discipline: '',\n      activity: ''\n    }));\n    setSubmitError(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError(null);\n\n    // Validación básica\n    const requiredFields = ['date', 'employee_id', 'project_code', 'phase', 'discipline', 'activity', 'hours'];\n    for (const field of requiredFields) {\n      if (!formData[field]) {\n        setSubmitError(`Por favor, rellena todos los campos obligatorios. Falta: ${field}`);\n        return;\n      }\n    }\n\n    // Obtener nombre del empleado\n    const employee = employees.find(emp => emp.id.toString() === formData.employee_id);\n    const employeeName = employee ? employee.name : '';\n    const payload = {\n      ...formData,\n      employee: employeeName,\n      employee_id: parseInt(formData.employee_id),\n      hours: parseFloat(formData.hours)\n    };\n    try {\n      await submitHours(payload);\n      alert('Horas registradas exitosamente');\n      // Resetear formulario a estado vacío\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: '',\n        hours: '',\n        note: ''\n      }));\n\n      // Recargar actividades después de registrar\n      fetchDailyActivities();\n      onSuccess();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error al enviar el formulario:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Error al registrar horas.\";\n      setSubmitError(errorMessage);\n    }\n  };\n\n  // Convertir el string de fecha a objeto Date para el DatePicker\n  const selectedDate = formData.date ? new Date(formData.date) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Registro de Horas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Fecha\",\n                selectedDate: selectedDate,\n                onChange: handleDateChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                label: \"Empleado\",\n                name: \"employee_id\",\n                value: formData.employee_id,\n                onChange: handleChange,\n                required: true,\n                options: employees.map(emp => ({\n                  value: emp.id.toString(),\n                  label: emp.name\n                })),\n                disabled: loadingEmployees,\n                isLoading: loadingEmployees\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-4 rounded-lg mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium mr-2\",\n                children: selectedEmployeeName || 'Seleccione un empleado'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\",\n                children: selectedDate ? new Date(selectedDate).toLocaleDateString('es-ES', {\n                  weekday: 'long',\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n                }) : 'Seleccione una fecha'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"Registro de horas para el d\\xEDa seleccionado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                label: \"C\\xF3digo de Proyecto\",\n                name: \"project_code\",\n                value: formData.project_code,\n                onChange: handleProjectCodeChange,\n                required: true,\n                options: projects.map(proj => ({\n                  value: proj.code,\n                  label: proj.code\n                })),\n                disabled: loadingProjects,\n                isLoading: loadingProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-gray-700 text-sm font-bold mb-2\",\n                  children: \"Nombre del Proyecto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: selectedProjectName,\n                  readOnly: true,\n                  className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 bg-gray-100 cursor-not-allowed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                label: \"Fase\",\n                name: \"phase\",\n                value: formData.phase,\n                onChange: handleChange,\n                required: true,\n                options: stages.map(stage => ({\n                  value: stage,\n                  label: stage\n                })),\n                disabled: !formData.project_code || loadingStages,\n                isLoading: loadingStages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                label: \"Disciplina\",\n                name: \"discipline\",\n                value: formData.discipline,\n                onChange: handleChange,\n                required: true,\n                options: disciplines.map(disc => ({\n                  value: disc,\n                  label: disc\n                })),\n                disabled: !formData.phase || loadingDisciplines,\n                isLoading: loadingDisciplines\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectField, {\n                label: \"Actividad\",\n                name: \"activity\",\n                value: formData.activity,\n                onChange: handleChange,\n                required: true,\n                options: activities.map(act => ({\n                  value: act,\n                  label: act\n                })),\n                disabled: !formData.discipline || loadingActivities,\n                isLoading: loadingActivities\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                label: \"Horas\",\n                name: \"hours\",\n                type: \"number\",\n                value: formData.hours,\n                onChange: handleChange,\n                required: true,\n                min: \"0.5\",\n                step: \"0.5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextareaField, {\n                label: \"Nota (Opcional)\",\n                name: \"note\",\n                value: formData.note,\n                onChange: handleChange,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"bg-gray-500 text-white px-6 py-2 rounded-md hover:bg-gray-600 focus:outline-none\",\n              children: \"CANCELAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 focus:outline-none\",\n              children: \"REGISTRAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-6 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4 text-center\",\n          children: \"Actividades Registradas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this), loadingDailyActivities ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-gray-600\",\n            children: \"Cargando actividades...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 25\n        }, this) : dailyActivities.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-16 w-16 mx-auto\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 1.5,\n                d: \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"No hay actividades registradas para este d\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: dailyActivities.map((activity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white border rounded-lg p-4 shadow-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-bold text-blue-700\",\n                children: activity.activity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-green-100 text-green-800 text-xs px-2 py-1 rounded\",\n                children: [activity.hours, \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-semibold\",\n                children: [activity.project, \" (\", activity.project_code, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 gap-1 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-600\",\n                  children: \"Etapa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: activity.phase\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-600\",\n                  children: \"Disciplina:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: activity.discipline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 45\n                }, this), activity.note && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-600\",\n                    children: \"Nota:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: activity.note\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 9\n  }, this);\n};\n_s(FormularioHoras, \"XlZPPqGoDwWWbZ8JvWa0M6IZk54=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","InputField","SelectField","TextareaField","DatePicker","submitHours","getProjects","getEmployees","getProjectStages","getDisciplinesByStage","getActivitiesByDiscipline","getDailyActivities","jsxDEV","_jsxDEV","Fragment","_Fragment","FormularioHoras","onSuccess","_s","formData","setFormData","date","employee_id","project_code","phase","discipline","activity","hours","note","projects","setProjects","projectsMap","setProjectsMap","employees","setEmployees","stages","setStages","disciplines","setDisciplines","activities","setActivities","selectedProjectName","setSelectedProjectName","selectedEmployeeName","setSelectedEmployeeName","loadingProjects","setLoadingProjects","loadingEmployees","setLoadingEmployees","loadingStages","setLoadingStages","loadingDisciplines","setLoadingDisciplines","loadingActivities","setLoadingActivities","submitError","setSubmitError","dailyActivities","setDailyActivities","loadingDailyActivities","setLoadingDailyActivities","fetchInitialData","projectsData","projectsList","map","p","code","name","forEach","project","error","console","employeesData","e","id","fetchDailyActivities","activitiesData","parseInt","employee","find","emp","toString","prev","fetchStages","stagesData","fetchDisciplines","disciplinesData","fetchActivities","handleChange","value","target","handleDateChange","dateString","toISOString","split","handleProjectCodeChange","handleSubmit","preventDefault","requiredFields","field","employeeName","payload","parseFloat","alert","_error$response","_error$response$data","errorMessage","response","data","detail","selectedDate","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","label","onChange","required","options","disabled","isLoading","toLocaleDateString","weekday","day","month","year","proj","type","readOnly","stage","disc","act","min","step","rows","length","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","index","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport InputField from './InputField';\r\nimport SelectField from './SelectField';\r\nimport TextareaField from './TextareaField';\r\nimport DatePicker from './DatePicker';\r\nimport { \r\n  submitHours, \r\n  getProjects, \r\n  getEmployees, \r\n  getProjectStages, \r\n  getDisciplinesByStage, \r\n  getActivitiesByDiscipline,\r\n  getDailyActivities // Nueva función para obtener actividades del día\r\n} from '../api/horasApi';\r\n\r\ninterface FormularioHorasProps {\r\n    onSuccess: () => void;\r\n}\r\n\r\ninterface Project {\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\ninterface Employee {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface Activity {\r\n    id: number;\r\n    project: string;\r\n    project_code: string;\r\n    phase: string;\r\n    discipline: string;\r\n    activity: string;\r\n    hours: number;\r\n    note: string;\r\n    date: string;\r\n}\r\n\r\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({ onSuccess }) => {\r\n    // Estado inicial vacío para todos los campos\r\n    const [formData, setFormData] = useState({\r\n        date: '',\r\n        employee_id: '',\r\n        project_code: '',\r\n        phase: '',\r\n        discipline: '',\r\n        activity: '',\r\n        hours: '',\r\n        note: ''\r\n    });\r\n\r\n    const [projects, setProjects] = useState<Project[]>([]);\r\n    const [projectsMap, setProjectsMap] = useState<Record<string, string>>({});\r\n    const [employees, setEmployees] = useState<Employee[]>([]);\r\n    const [stages, setStages] = useState<string[]>([]);\r\n    const [disciplines, setDisciplines] = useState<string[]>([]);\r\n    const [activities, setActivities] = useState<string[]>([]);\r\n    const [selectedProjectName, setSelectedProjectName] = useState('');\r\n    const [selectedEmployeeName, setSelectedEmployeeName] = useState('');\r\n\r\n    const [loadingProjects, setLoadingProjects] = useState(false);\r\n    const [loadingEmployees, setLoadingEmployees] = useState(false);\r\n    const [loadingStages, setLoadingStages] = useState(false);\r\n    const [loadingDisciplines, setLoadingDisciplines] = useState(false);\r\n    const [loadingActivities, setLoadingActivities] = useState(false);\r\n    const [submitError, setSubmitError] = useState<string | null>(null);\r\n    \r\n    // Nuevo estado para actividades registradas\r\n    const [dailyActivities, setDailyActivities] = useState<Activity[]>([]);\r\n    const [loadingDailyActivities, setLoadingDailyActivities] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            setLoadingProjects(true);\r\n            try {\r\n                const projectsData = await getProjects();\r\n                const projectsList = projectsData.map((p: any) => ({ code: p.code, name: p.name }));\r\n                setProjects(projectsList);\r\n                \r\n                const map: Record<string, string> = {};\r\n                projectsList.forEach((project: Project) => {\r\n                    map[project.code] = project.name;\r\n                });\r\n                setProjectsMap(map);\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener proyectos:\", error);\r\n            } finally {\r\n                setLoadingProjects(false);\r\n            }\r\n\r\n            setLoadingEmployees(true);\r\n            try {\r\n                const employeesData = await getEmployees();\r\n                setEmployees(employeesData.map((e: any) => ({ id: e.id, name: e.name })));\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener empleados:\", error);\r\n            } finally {\r\n                setLoadingEmployees(false);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    // Función para cargar actividades diarias\r\n    const fetchDailyActivities = useCallback(async () => {\r\n        if (formData.date && formData.employee_id) {\r\n            setLoadingDailyActivities(true);\r\n            try {\r\n                const activitiesData = await getDailyActivities(\r\n                    formData.date, \r\n                    parseInt(formData.employee_id)\r\n                );\r\n                setDailyActivities(activitiesData);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener actividades diarias:\", error);\r\n            } finally {\r\n                setLoadingDailyActivities(false);\r\n            }\r\n        } else {\r\n            setDailyActivities([]);\r\n        }\r\n    }, [formData.date, formData.employee_id]);\r\n\r\n    // Cargar actividades cuando cambia la fecha o empleado\r\n    useEffect(() => {\r\n        fetchDailyActivities();\r\n    }, [formData.date, formData.employee_id, fetchDailyActivities]);\r\n\r\n    // Actualizar nombre de empleado seleccionado\r\n    useEffect(() => {\r\n        if (formData.employee_id) {\r\n            const employee = employees.find(emp => emp.id.toString() === formData.employee_id);\r\n            setSelectedEmployeeName(employee?.name || '');\r\n        } else {\r\n            setSelectedEmployeeName('');\r\n        }\r\n    }, [formData.employee_id, employees]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code) {\r\n            setSelectedProjectName(projectsMap[formData.project_code] || '');\r\n        } else {\r\n            setSelectedProjectName('');\r\n        }\r\n\r\n        if (formData.project_code) {\r\n            setLoadingStages(true);\r\n            setFormData(prev => ({ ...prev, phase: '', discipline: '', activity: '' }));\r\n            setStages([]);\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            const fetchStages = async () => {\r\n                try {\r\n                    const stagesData = await getProjectStages(formData.project_code);\r\n                    setStages(stagesData);\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener etapas para ${formData.project_code}:`, error);\r\n                } finally {\r\n                    setLoadingStages(false);\r\n                }\r\n            };\r\n            fetchStages();\r\n        } else {\r\n            setStages([]);\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, phase: '', discipline: '', activity: '' }));\r\n        }\r\n    }, [formData.project_code, projectsMap]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code && formData.phase) {\r\n            setLoadingDisciplines(true);\r\n            setFormData(prev => ({ ...prev, discipline: '', activity: '' }));\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            const fetchDisciplines = async () => {\r\n                try {\r\n                    const disciplinesData = await getDisciplinesByStage(formData.project_code, formData.phase);\r\n                    setDisciplines(disciplinesData);\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener disciplinas para el proyecto ${formData.project_code}, etapa ${formData.phase}:`, error);\r\n                } finally {\r\n                    setLoadingDisciplines(false);\r\n                }\r\n            };\r\n            fetchDisciplines();\r\n        } else {\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, discipline: '', activity: '' }));\r\n        }\r\n    }, [formData.project_code, formData.phase]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code && formData.phase && formData.discipline) {\r\n            setLoadingActivities(true);\r\n            setFormData(prev => ({ ...prev, activity: '' }));\r\n            setActivities([]);\r\n            const fetchActivities = async () => {\r\n                try {\r\n                    const activitiesData = await getActivitiesByDiscipline(formData.project_code, formData.phase, formData.discipline);\r\n                    setActivities(activitiesData);\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener actividades para el proyecto ${formData.project_code}, etapa ${formData.phase}, disciplina ${formData.discipline}:`, error);\r\n                } finally {\r\n                    setLoadingActivities(false);\r\n                }\r\n            };\r\n            fetchActivities();\r\n        } else {\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, activity: '' }));\r\n        }\r\n    }, [formData.project_code, formData.phase, formData.discipline]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleDateChange = (date: Date | null) => {\r\n        // Convertir a string ISO (YYYY-MM-DD) para el estado\r\n        const dateString = date ? date.toISOString().split('T')[0] : '';\r\n        setFormData(prev => ({ ...prev, date: dateString }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleProjectCodeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const { value } = e.target;\r\n        setFormData(prev => ({ \r\n            ...prev, \r\n            project_code: value,\r\n            phase: '',\r\n            discipline: '',\r\n            activity: ''\r\n        }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setSubmitError(null);\r\n\r\n        // Validación básica\r\n        const requiredFields = ['date', 'employee_id', 'project_code', 'phase', 'discipline', 'activity', 'hours'];\r\n        for (const field of requiredFields) {\r\n            if (!formData[field as keyof typeof formData]) {\r\n                setSubmitError(`Por favor, rellena todos los campos obligatorios. Falta: ${field}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Obtener nombre del empleado\r\n        const employee = employees.find(emp => emp.id.toString() === formData.employee_id);\r\n        const employeeName = employee ? employee.name : '';\r\n\r\n        const payload = {\r\n            ...formData,\r\n            employee: employeeName,\r\n            employee_id: parseInt(formData.employee_id),\r\n            hours: parseFloat(formData.hours)\r\n        };\r\n\r\n        try {\r\n            await submitHours(payload);\r\n            alert('Horas registradas exitosamente');\r\n            // Resetear formulario a estado vacío\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                phase: '',\r\n                discipline: '',\r\n                activity: '',\r\n                hours: '',\r\n                note: ''\r\n            }));\r\n            \r\n            // Recargar actividades después de registrar\r\n            fetchDailyActivities();\r\n            \r\n            onSuccess();\r\n        } catch (error: any) {\r\n            console.error('Error al enviar el formulario:', error);\r\n            const errorMessage = error.response?.data?.detail || \"Error al registrar horas.\";\r\n            setSubmitError(errorMessage);\r\n        }\r\n    };\r\n\r\n    // Convertir el string de fecha a objeto Date para el DatePicker\r\n    const selectedDate = formData.date ? new Date(formData.date) : null;\r\n\r\n    return (\r\n        <div className=\"max-w-6xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n            <h2 className=\"text-2xl font-bold mb-6 text-center\">Registro de Horas</h2>\r\n            {submitError && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{submitError}</div>}\r\n            \r\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                {/* Formulario de registro */}\r\n                <div className=\"lg:col-span-2\">\r\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <DatePicker\r\n                                    label=\"Fecha\"\r\n                                    selectedDate={selectedDate}\r\n                                    onChange={handleDateChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <SelectField\r\n                                    label=\"Empleado\"\r\n                                    name=\"employee_id\"\r\n                                    value={formData.employee_id}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    options={employees.map(emp => ({ value: emp.id.toString(), label: emp.name }))}\r\n                                    disabled={loadingEmployees}\r\n                                    isLoading={loadingEmployees}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"bg-gray-50 p-4 rounded-lg mb-4\">\r\n                            <div className=\"flex items-center mb-2\">\r\n                                <div className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium mr-2\">\r\n                                    {selectedEmployeeName || 'Seleccione un empleado'}\r\n                                </div>\r\n                                <div className=\"bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium\">\r\n                                    {selectedDate ? new Date(selectedDate).toLocaleDateString('es-ES', { \r\n                                        weekday: 'long', \r\n                                        day: 'numeric', \r\n                                        month: 'long', \r\n                                        year: 'numeric' \r\n                                    }) : 'Seleccione una fecha'}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-gray-600 text-sm\">\r\n                                Registro de horas para el día seleccionado\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <SelectField\r\n                                    label=\"Código de Proyecto\"\r\n                                    name=\"project_code\"\r\n                                    value={formData.project_code}\r\n                                    onChange={handleProjectCodeChange}\r\n                                    required\r\n                                    options={projects.map(proj => ({ value: proj.code, label: proj.code }))}\r\n                                    disabled={loadingProjects}\r\n                                    isLoading={loadingProjects}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"mb-4\">\r\n                                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                        Nombre del Proyecto\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={selectedProjectName}\r\n                                        readOnly\r\n                                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 bg-gray-100 cursor-not-allowed\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                            <div>\r\n                                <SelectField\r\n                                    label=\"Fase\"\r\n                                    name=\"phase\"\r\n                                    value={formData.phase}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    options={stages.map(stage => ({ value: stage, label: stage }))}\r\n                                    disabled={!formData.project_code || loadingStages}\r\n                                    isLoading={loadingStages}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <SelectField\r\n                                    label=\"Disciplina\"\r\n                                    name=\"discipline\"\r\n                                    value={formData.discipline}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    options={disciplines.map(disc => ({ value: disc, label: disc }))}\r\n                                    disabled={!formData.phase || loadingDisciplines}\r\n                                    isLoading={loadingDisciplines}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <SelectField\r\n                                    label=\"Actividad\"\r\n                                    name=\"activity\"\r\n                                    value={formData.activity}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    options={activities.map(act => ({ value: act, label: act }))}\r\n                                    disabled={!formData.discipline || loadingActivities}\r\n                                    isLoading={loadingActivities}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <InputField\r\n                                    label=\"Horas\"\r\n                                    name=\"hours\"\r\n                                    type=\"number\"\r\n                                    value={formData.hours}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    min=\"0.5\"\r\n                                    step=\"0.5\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <TextareaField\r\n                                    label=\"Nota (Opcional)\"\r\n                                    name=\"note\"\r\n                                    value={formData.note}\r\n                                    onChange={handleChange}\r\n                                    rows={3}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-end space-x-4\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"bg-gray-500 text-white px-6 py-2 rounded-md hover:bg-gray-600 focus:outline-none\"\r\n                            >\r\n                                CANCELAR\r\n                            </button>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 focus:outline-none\"\r\n                            >\r\n                                REGISTRAR\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Listado de actividades */}\r\n                <div className=\"bg-gray-50 p-6 rounded-lg\">\r\n                    <h3 className=\"text-xl font-bold mb-4 text-center\">Actividades Registradas</h3>\r\n                    \r\n                    {loadingDailyActivities ? (\r\n                        <div className=\"text-center py-4\">\r\n                            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\r\n                            <p className=\"mt-2 text-gray-600\">Cargando actividades...</p>\r\n                        </div>\r\n                    ) : dailyActivities.length === 0 ? (\r\n                        <div className=\"text-center py-8\">\r\n                            <div className=\"text-gray-400 mb-2\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\r\n                                </svg>\r\n                            </div>\r\n                            <p className=\"text-gray-500\">No hay actividades registradas para este día</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"space-y-4\">\r\n                            {dailyActivities.map((activity, index) => (\r\n                                <div key={index} className=\"bg-white border rounded-lg p-4 shadow-sm\">\r\n                                    <div className=\"flex justify-between items-start\">\r\n                                        <h4 className=\"font-bold text-blue-700\">{activity.activity}</h4>\r\n                                        <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded\">\r\n                                            {activity.hours} hrs\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"mt-2 text-sm\">\r\n                                        <p className=\"font-semibold\">{activity.project} ({activity.project_code})</p>\r\n                                        <div className=\"grid grid-cols-2 gap-1 mt-2\">\r\n                                            <div className=\"text-gray-600\">Etapa:</div>\r\n                                            <div>{activity.phase}</div>\r\n                                            \r\n                                            <div className=\"text-gray-600\">Disciplina:</div>\r\n                                            <div>{activity.discipline}</div>\r\n                                            \r\n                                            {activity.note && (\r\n                                                <>\r\n                                                    <div className=\"text-gray-600\">Nota:</div>\r\n                                                    <div>{activity.note}</div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormularioHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}