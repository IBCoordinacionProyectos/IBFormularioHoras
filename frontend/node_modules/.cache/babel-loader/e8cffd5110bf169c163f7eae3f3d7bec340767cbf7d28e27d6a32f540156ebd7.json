{"ast":null,"code":"// horasApi.ts\nimport axios from 'axios';\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\nexport const submitHours = async data => {\n  try {\n    if (data.id) {\n      // Si hay un ID, es una actualización\n      const {\n        id,\n        ...dataToSend\n      } = data;\n      return await updateHour(id, dataToSend);\n    } else {\n      // Si no hay ID, es una creación\n      const response = await axios.post(`${API_BASE_URL}/hours/`, data);\n      return response.data;\n    }\n  } catch (error) {\n    console.error('Error al enviar las horas:', error);\n    // Mostrar el error del servidor si está disponible\n    if (axios.isAxiosError(error) && error.response) {\n      console.error('Detalles del error:', error.response.data);\n    }\n    throw error;\n  }\n};\nexport const getProjects = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/projects/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener proyectos:', error);\n    throw error;\n  }\n};\nexport const getEmployees = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/employees/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener empleados:', error);\n    throw error;\n  }\n};\nexport const getDisciplinesByStage = async (projectCode, stage) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/disciplines`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener disciplinas para el proyecto ${projectCode}, etapa ${stage}:`, error);\n    throw error;\n  }\n};\nexport const getActivitiesByDiscipline = async (projectCode, stage, discipline) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage), encodeURIComponent(discipline)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/activities`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener actividades para el proyecto ${projectCode}, etapa ${stage}, disciplina ${discipline}:`, error);\n    throw error;\n  }\n};\nexport const getDailyActivities = async (date, employeeId) => {\n  try {\n    // Convertir la fecha a formato YYYY-MM-DD si es un objeto Date\n    const dateStr = date instanceof Date ? date.toISOString().split('T')[0] : date;\n    const response = await axios.get(`${API_BASE_URL}/daily-activities`, {\n      params: {\n        date: dateStr,\n        employee_id: employeeId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener las actividades del día:', error);\n    throw error;\n  }\n};\n\n// horasApi.ts\nexport const getProjectStages = async projectCode => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    // Usa el nuevo endpoint en activities\n    const response = await axios.get(`${API_BASE_URL}/activities/project/${encodedProjectCode}/stages`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener etapas para el proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\nexport const updateHour = async (hourId, data) => {\n  try {\n    // Asegurarse de que los datos tengan el formato correcto\n    const payload = {\n      ...data,\n      // Asegurarse de que las horas sean un número\n      hours: typeof data.hours === 'string' ? parseFloat(data.hours.replace(',', '.')) : data.hours,\n      // Asegurarse de que el employee_id sea un número\n      employee_id: Number(data.employee_id)\n    };\n    console.log('Enviando datos de actualización:', {\n      hourId,\n      payload\n    });\n    const response = await axios.put(`${API_BASE_URL}/hours/${hourId}`, payload);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al actualizar el registro de horas ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      console.error('Detalles del error del servidor:', error.response.data);\n    }\n    throw error;\n  }\n};\nexport const deleteHour = async hourId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\nexport const getProjectByCode = async projectCode => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    const response = await axios.get(`${API_BASE_URL}/projects/${encodedProjectCode}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error en el inicio de sesión:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","submitHours","data","id","dataToSend","updateHour","response","post","error","console","isAxiosError","getProjects","get","getEmployees","getDisciplinesByStage","projectCode","stage","params","encodeURIComponent","join","getActivitiesByDiscipline","discipline","getDailyActivities","date","employeeId","dateStr","Date","toISOString","split","employee_id","getProjectStages","encodedProjectCode","hourId","payload","hours","parseFloat","replace","Number","log","put","deleteHour","delete","getProjectByCode","loginUser","credentials"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// horasApi.ts\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\nexport const submitHours = async (data: any) => {\n    try {\n        if (data.id) {\n            // Si hay un ID, es una actualización\n            const { id, ...dataToSend } = data;\n            return await updateHour(id, dataToSend);\n        } else {\n            // Si no hay ID, es una creación\n            const response = await axios.post(`${API_BASE_URL}/hours/`, data);\n            return response.data;\n        }\n    } catch (error) {\n        console.error('Error al enviar las horas:', error);\n        // Mostrar el error del servidor si está disponible\n        if (axios.isAxiosError(error) && error.response) {\n            console.error('Detalles del error:', error.response.data);\n        }\n        throw error;\n    }\n};\n\nexport const getProjects = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/projects/`);\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener proyectos:', error);\n        throw error;\n    }\n};\n\nexport const getEmployees = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/employees/`);\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener empleados:', error);\n        throw error;\n    }\n};\n\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\n  try {\n    const params = [\n      encodeURIComponent(projectCode),\n      encodeURIComponent(stage)\n    ].join('::');\n\n    const response = await axios.get(\n      `${API_BASE_URL}/activities/${params}/disciplines`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener disciplinas para el proyecto ${projectCode}, etapa ${stage}:`, error);\n    throw error;\n  }\n};\n\nexport const getActivitiesByDiscipline = async (\n  projectCode: string, \n  stage: string, \n  discipline: string\n) => {\n  try {\n    const params = [\n      encodeURIComponent(projectCode),\n      encodeURIComponent(stage),\n      encodeURIComponent(discipline)\n    ].join('::');\n    \n    const response = await axios.get(\n      `${API_BASE_URL}/activities/${params}/activities`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener actividades para el proyecto ${projectCode}, etapa ${stage}, disciplina ${discipline}:`, error);\n    throw error;\n  }\n};\n\nexport const getDailyActivities = async (date: Date | string, employeeId: number | string) => {\n    try {\n        // Convertir la fecha a formato YYYY-MM-DD si es un objeto Date\n        const dateStr = date instanceof Date \n            ? date.toISOString().split('T')[0] \n            : date;\n            \n        const response = await axios.get(`${API_BASE_URL}/daily-activities`, {\n            params: { \n                date: dateStr, \n                employee_id: employeeId \n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener las actividades del día:', error);\n        throw error;\n    }\n};\n\n// horasApi.ts\nexport const getProjectStages = async (projectCode: string) => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    // Usa el nuevo endpoint en activities\n    const response = await axios.get(\n      `${API_BASE_URL}/activities/project/${encodedProjectCode}/stages`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener etapas para el proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\n\nexport const updateHour = async (hourId: number, data: any) => {\n  try {\n    // Asegurarse de que los datos tengan el formato correcto\n    const payload = {\n      ...data,\n      // Asegurarse de que las horas sean un número\n      hours: typeof data.hours === 'string' ? parseFloat(data.hours.replace(',', '.')) : data.hours,\n      // Asegurarse de que el employee_id sea un número\n      employee_id: Number(data.employee_id)\n    };\n    \n    console.log('Enviando datos de actualización:', { hourId, payload });\n    \n    const response = await axios.put(`${API_BASE_URL}/hours/${hourId}`, payload);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al actualizar el registro de horas ${hourId}:`, error);\n    if (axios.isAxiosError(error) && error.response) {\n      console.error('Detalles del error del servidor:', error.response.data);\n    }\n    throw error;\n  }\n};\n\nexport const deleteHour = async (hourId: number) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\n\nexport const getProjectByCode = async (projectCode: string) => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    const response = await axios.get(\n      `${API_BASE_URL}/projects/${encodedProjectCode}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\n\nexport const loginUser = async (credentials: any) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n        return response.data;\n    } catch (error) {\n        console.error('Error en el inicio de sesión:', error);\n        throw error;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}