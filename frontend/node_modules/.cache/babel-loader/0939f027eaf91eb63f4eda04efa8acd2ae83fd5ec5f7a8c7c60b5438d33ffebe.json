{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport InputField from './InputField';\nimport SelectField from './SelectField';\nimport TextareaField from './TextareaField';\nimport DatePicker from './DatePicker';\nimport { submitHours, getProjects, getEmployees, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline } from '../api/horasApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormularioHoras = ({\n  onSuccess\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    date: new Date().toISOString().split('T')[0],\n    employee_id: '',\n    project_code: '',\n    phase: '',\n    discipline: '',\n    activity: '',\n    hours: '',\n    note: ''\n  });\n  const [projects, setProjects] = useState([]);\n  const [projectsMap, setProjectsMap] = useState({});\n  const [employees, setEmployees] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [disciplines, setDisciplines] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [selectedProjectName, setSelectedProjectName] = useState('');\n  const [loadingProjects, setLoadingProjects] = useState(false);\n  const [loadingEmployees, setLoadingEmployees] = useState(false);\n  const [loadingStages, setLoadingStages] = useState(false);\n  const [loadingDisciplines, setLoadingDisciplines] = useState(false);\n  const [loadingActivities, setLoadingActivities] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      setLoadingProjects(true);\n      try {\n        const projectsData = await getProjects();\n        const projectsList = projectsData.map(p => ({\n          code: p.code,\n          name: p.name\n        }));\n        setProjects(projectsList);\n        const map = {};\n        projectsList.forEach(project => {\n          map[project.code] = project.name;\n        });\n        setProjectsMap(map);\n      } catch (error) {\n        console.error(\"Fallo al obtener proyectos:\", error);\n      } finally {\n        setLoadingProjects(false);\n      }\n      setLoadingEmployees(true);\n      try {\n        const employeesData = await getEmployees();\n        setEmployees(employeesData.map(e => ({\n          id: e.id,\n          name: e.name\n        })));\n      } catch (error) {\n        console.error(\"Fallo al obtener empleados:\", error);\n      } finally {\n        setLoadingEmployees(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  useEffect(() => {\n    if (formData.project_code) {\n      setSelectedProjectName(projectsMap[formData.project_code] || '');\n    } else {\n      setSelectedProjectName('');\n    }\n    if (formData.project_code) {\n      setLoadingStages(true);\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: ''\n      }));\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      const fetchStages = async () => {\n        try {\n          const stagesData = await getProjectStages(formData.project_code);\n          setStages(stagesData);\n        } catch (error) {\n          console.error(`Fallo al obtener etapas para ${formData.project_code}:`, error);\n        } finally {\n          setLoadingStages(false);\n        }\n      };\n      fetchStages();\n    } else {\n      setStages([]);\n      setDisciplines([]);\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        phase: '',\n        discipline: '',\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, projectsMap]);\n  useEffect(() => {\n    if (formData.project_code && formData.phase) {\n      setLoadingDisciplines(true);\n      setFormData(prev => ({\n        ...prev,\n        discipline: '',\n        activity: ''\n      }));\n      setDisciplines([]);\n      setActivities([]);\n      const fetchDisciplines = async () => {\n        try {\n          const disciplinesData = await getDisciplinesByStage(formData.project_code, formData.phase);\n          setDisciplines(disciplinesData);\n        } catch (error) {\n          console.error(`Fallo al obtener disciplinas para el proyecto ${formData.project_code}, etapa ${formData.phase}:`, error);\n        } finally {\n          setLoadingDisciplines(false);\n        }\n      };\n      fetchDisciplines();\n    } else {\n      setDisciplines([]);\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        discipline: '',\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, formData.phase]);\n  useEffect(() => {\n    if (formData.project_code && formData.phase && formData.discipline) {\n      setLoadingActivities(true);\n      setFormData(prev => ({\n        ...prev,\n        activity: ''\n      }));\n      setActivities([]);\n      const fetchActivities = async () => {\n        try {\n          const activitiesData = await getActivitiesByDiscipline(formData.project_code, formData.phase, formData.discipline);\n          setActivities(activitiesData);\n        } catch (error) {\n          console.error(`Fallo al obtener actividades para el proyecto ${formData.project_code}, etapa ${formData.phase}, disciplina ${formData.discipline}:`, error);\n        } finally {\n          setLoadingActivities(false);\n        }\n      };\n      fetchActivities();\n    } else {\n      setActivities([]);\n      setFormData(prev => ({\n        ...prev,\n        activity: ''\n      }));\n    }\n  }, [formData.project_code, formData.phase, formData.discipline]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setSubmitError(null);\n  };\n  const handleDateChange = date => {\n    setFormData(prev => ({\n      ...prev,\n      date: date ? date.toISOString().split('T')[0] : ''\n    }));\n    setSubmitError(null);\n  };\n  const handleProjectCodeChange = e => {\n    const {\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      project_code: value,\n      phase: '',\n      discipline: '',\n      activity: ''\n    }));\n    setSubmitError(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError(null);\n\n    // Validación básica\n    const requiredFields = ['date', 'employee_id', 'project_code', 'phase', 'discipline', 'activity', 'hours'];\n    for (const field of requiredFields) {\n      if (!formData[field]) {\n        setSubmitError(`Por favor, rellena todos los campos obligatorios. Falta: ${field}`);\n        return;\n      }\n    }\n\n    // Obtener nombre del empleado\n    const employee = employees.find(emp => emp.id.toString() === formData.employee_id);\n    const employeeName = employee ? employee.name : '';\n    const payload = {\n      ...formData,\n      employee: employeeName,\n      // Añadir nombre del empleado\n      employee_id: parseInt(formData.employee_id),\n      hours: parseFloat(formData.hours)\n    };\n    try {\n      await submitHours(payload);\n      alert('Horas registradas exitosamente');\n      setFormData({\n        date: new Date().toISOString().split('T')[0],\n        employee_id: '',\n        project_code: '',\n        phase: '',\n        discipline: '',\n        activity: '',\n        hours: '',\n        note: ''\n      });\n      onSuccess();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error al enviar el formulario:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Error al registrar horas.\";\n      setSubmitError(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Registro de Horas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n      role: \"alert\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        label: \"Fecha\",\n        selectedDate: formData.date ? new Date(formData.date) : null,\n        onChange: handleDateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Empleado\",\n        name: \"employee_id\",\n        value: formData.employee_id,\n        onChange: handleChange,\n        required: true,\n        options: employees.map(emp => ({\n          value: emp.id.toString(),\n          label: emp.name\n        })),\n        disabled: loadingEmployees,\n        isLoading: loadingEmployees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"C\\xF3digo de Proyecto\",\n        name: \"project_code\",\n        value: formData.project_code,\n        onChange: handleProjectCodeChange,\n        required: true,\n        options: projects.map(proj => ({\n          value: proj.code,\n          label: proj.code\n        })),\n        disabled: loadingProjects,\n        isLoading: loadingProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Nombre del Proyecto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedProjectName,\n          readOnly: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 bg-gray-100 cursor-not-allowed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Fase\",\n        name: \"phase\",\n        value: formData.phase,\n        onChange: handleChange,\n        required: true,\n        options: stages.map(stage => ({\n          value: stage,\n          label: stage\n        })),\n        disabled: !formData.project_code || loadingStages,\n        isLoading: loadingStages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Disciplina\",\n        name: \"discipline\",\n        value: formData.discipline,\n        onChange: handleChange,\n        required: true,\n        options: disciplines.map(disc => ({\n          value: disc,\n          label: disc\n        })),\n        disabled: !formData.phase || loadingDisciplines,\n        isLoading: loadingDisciplines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        label: \"Actividad\",\n        name: \"activity\",\n        value: formData.activity,\n        onChange: handleChange,\n        required: true,\n        options: activities.map(act => ({\n          value: act,\n          label: act\n        })),\n        disabled: !formData.discipline || loadingActivities,\n        isLoading: loadingActivities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Horas\",\n        name: \"hours\",\n        type: \"number\",\n        value: formData.hours,\n        onChange: handleChange,\n        required: true,\n        min: \"0.5\",\n        step: \"0.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n        label: \"Nota (Opcional)\",\n        name: \"note\",\n        value: formData.note,\n        onChange: handleChange,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n        children: \"Registrar Horas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n_s(FormularioHoras, \"W4H/CjIGoBafz9Oxv0MKNGvS7Xw=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","InputField","SelectField","TextareaField","DatePicker","submitHours","getProjects","getEmployees","getProjectStages","getDisciplinesByStage","getActivitiesByDiscipline","jsxDEV","_jsxDEV","FormularioHoras","onSuccess","_s","formData","setFormData","date","Date","toISOString","split","employee_id","project_code","phase","discipline","activity","hours","note","projects","setProjects","projectsMap","setProjectsMap","employees","setEmployees","stages","setStages","disciplines","setDisciplines","activities","setActivities","selectedProjectName","setSelectedProjectName","loadingProjects","setLoadingProjects","loadingEmployees","setLoadingEmployees","loadingStages","setLoadingStages","loadingDisciplines","setLoadingDisciplines","loadingActivities","setLoadingActivities","submitError","setSubmitError","fetchInitialData","projectsData","projectsList","map","p","code","name","forEach","project","error","console","employeesData","e","id","prev","fetchStages","stagesData","fetchDisciplines","disciplinesData","fetchActivities","activitiesData","handleChange","value","target","handleDateChange","handleProjectCodeChange","handleSubmit","preventDefault","requiredFields","field","employee","find","emp","toString","employeeName","payload","parseInt","parseFloat","alert","_error$response","_error$response$data","errorMessage","response","data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onSubmit","label","selectedDate","onChange","required","options","disabled","isLoading","proj","type","readOnly","stage","disc","act","min","step","rows","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport InputField from './InputField';\r\nimport SelectField from './SelectField';\r\nimport TextareaField from './TextareaField';\r\nimport DatePicker from './DatePicker';\r\nimport { submitHours, getProjects, getEmployees, getProjectStages, getDisciplinesByStage, getActivitiesByDiscipline } from '../api/horasApi';\r\n\r\ninterface FormularioHorasProps {\r\n    onSuccess: () => void;\r\n}\r\n\r\ninterface Project {\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\ninterface Employee {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({ onSuccess }) => {\r\n    const [formData, setFormData] = useState({\r\n        date: new Date().toISOString().split('T')[0],\r\n        employee_id: '',\r\n        project_code: '',\r\n        phase: '',\r\n        discipline: '',\r\n        activity: '',\r\n        hours: '',\r\n        note: ''\r\n    });\r\n\r\n    const [projects, setProjects] = useState<Project[]>([]);\r\n    const [projectsMap, setProjectsMap] = useState<Record<string, string>>({});\r\n    const [employees, setEmployees] = useState<Employee[]>([]);\r\n    const [stages, setStages] = useState<string[]>([]);\r\n    const [disciplines, setDisciplines] = useState<string[]>([]);\r\n    const [activities, setActivities] = useState<string[]>([]);\r\n    const [selectedProjectName, setSelectedProjectName] = useState('');\r\n\r\n    const [loadingProjects, setLoadingProjects] = useState(false);\r\n    const [loadingEmployees, setLoadingEmployees] = useState(false);\r\n    const [loadingStages, setLoadingStages] = useState(false);\r\n    const [loadingDisciplines, setLoadingDisciplines] = useState(false);\r\n    const [loadingActivities, setLoadingActivities] = useState(false);\r\n    const [submitError, setSubmitError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            setLoadingProjects(true);\r\n            try {\r\n                const projectsData = await getProjects();\r\n                const projectsList = projectsData.map((p: any) => ({ code: p.code, name: p.name }));\r\n                setProjects(projectsList);\r\n                \r\n                const map: Record<string, string> = {};\r\n                projectsList.forEach((project: Project) => {\r\n                    map[project.code] = project.name;\r\n                });\r\n                setProjectsMap(map);\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener proyectos:\", error);\r\n            } finally {\r\n                setLoadingProjects(false);\r\n            }\r\n\r\n            setLoadingEmployees(true);\r\n            try {\r\n                const employeesData = await getEmployees();\r\n                setEmployees(employeesData.map((e: any) => ({ id: e.id, name: e.name })));\r\n            } catch (error) {\r\n                console.error(\"Fallo al obtener empleados:\", error);\r\n            } finally {\r\n                setLoadingEmployees(false);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code) {\r\n            setSelectedProjectName(projectsMap[formData.project_code] || '');\r\n        } else {\r\n            setSelectedProjectName('');\r\n        }\r\n\r\n        if (formData.project_code) {\r\n            setLoadingStages(true);\r\n            setFormData(prev => ({ ...prev, phase: '', discipline: '', activity: '' }));\r\n            setStages([]);\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            const fetchStages = async () => {\r\n                try {\r\n                    const stagesData = await getProjectStages(formData.project_code);\r\n                    setStages(stagesData);\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener etapas para ${formData.project_code}:`, error);\r\n                } finally {\r\n                    setLoadingStages(false);\r\n                }\r\n            };\r\n            fetchStages();\r\n        } else {\r\n            setStages([]);\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, phase: '', discipline: '', activity: '' }));\r\n        }\r\n    }, [formData.project_code, projectsMap]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code && formData.phase) {\r\n            setLoadingDisciplines(true);\r\n            setFormData(prev => ({ ...prev, discipline: '', activity: '' }));\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            const fetchDisciplines = async () => {\r\n                try {\r\n                    const disciplinesData = await getDisciplinesByStage(formData.project_code, formData.phase);\r\n                    setDisciplines(disciplinesData);\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener disciplinas para el proyecto ${formData.project_code}, etapa ${formData.phase}:`, error);\r\n                } finally {\r\n                    setLoadingDisciplines(false);\r\n                }\r\n            };\r\n            fetchDisciplines();\r\n        } else {\r\n            setDisciplines([]);\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, discipline: '', activity: '' }));\r\n        }\r\n    }, [formData.project_code, formData.phase]);\r\n\r\n    useEffect(() => {\r\n        if (formData.project_code && formData.phase && formData.discipline) {\r\n            setLoadingActivities(true);\r\n            setFormData(prev => ({ ...prev, activity: '' }));\r\n            setActivities([]);\r\n            const fetchActivities = async () => {\r\n                try {\r\n                    const activitiesData = await getActivitiesByDiscipline(formData.project_code, formData.phase, formData.discipline);\r\n                    setActivities(activitiesData);\r\n                } catch (error) {\r\n                    console.error(`Fallo al obtener actividades para el proyecto ${formData.project_code}, etapa ${formData.phase}, disciplina ${formData.discipline}:`, error);\r\n                } finally {\r\n                    setLoadingActivities(false);\r\n                }\r\n            };\r\n            fetchActivities();\r\n        } else {\r\n            setActivities([]);\r\n            setFormData(prev => ({ ...prev, activity: '' }));\r\n        }\r\n    }, [formData.project_code, formData.phase, formData.discipline]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleDateChange = (date: Date | null) => {\r\n        setFormData(prev => ({ ...prev, date: date ? date.toISOString().split('T')[0] : '' }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleProjectCodeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const { value } = e.target;\r\n        setFormData(prev => ({ \r\n            ...prev, \r\n            project_code: value,\r\n            phase: '',\r\n            discipline: '',\r\n            activity: ''\r\n        }));\r\n        setSubmitError(null);\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setSubmitError(null);\r\n\r\n        // Validación básica\r\n        const requiredFields = ['date', 'employee_id', 'project_code', 'phase', 'discipline', 'activity', 'hours'];\r\n        for (const field of requiredFields) {\r\n            if (!formData[field as keyof typeof formData]) {\r\n                setSubmitError(`Por favor, rellena todos los campos obligatorios. Falta: ${field}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Obtener nombre del empleado\r\n        const employee = employees.find(emp => emp.id.toString() === formData.employee_id);\r\n        const employeeName = employee ? employee.name : '';\r\n\r\n        const payload = {\r\n            ...formData,\r\n            employee: employeeName, // Añadir nombre del empleado\r\n            employee_id: parseInt(formData.employee_id),\r\n            hours: parseFloat(formData.hours)\r\n        };\r\n\r\n        try {\r\n            await submitHours(payload);\r\n            alert('Horas registradas exitosamente');\r\n            setFormData({\r\n                date: new Date().toISOString().split('T')[0],\r\n                employee_id: '',\r\n                project_code: '',\r\n                phase: '',\r\n                discipline: '',\r\n                activity: '',\r\n                hours: '',\r\n                note: ''\r\n            });\r\n            onSuccess();\r\n        } catch (error: any) {\r\n            console.error('Error al enviar el formulario:', error);\r\n            const errorMessage = error.response?.data?.detail || \"Error al registrar horas.\";\r\n            setSubmitError(errorMessage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-xl mx-auto p-6 bg-white rounded-lg shadow-md\">\r\n            <h2 className=\"text-2xl font-bold mb-6 text-center\">Registro de Horas</h2>\r\n            {submitError && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">{submitError}</div>}\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <DatePicker\r\n                    label=\"Fecha\"\r\n                    selectedDate={formData.date ? new Date(formData.date) : null}\r\n                    onChange={handleDateChange}\r\n                    required\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Empleado\"\r\n                    name=\"employee_id\"\r\n                    value={formData.employee_id}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={employees.map(emp => ({ value: emp.id.toString(), label: emp.name }))}\r\n                    disabled={loadingEmployees}\r\n                    isLoading={loadingEmployees}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Código de Proyecto\"\r\n                    name=\"project_code\"\r\n                    value={formData.project_code}\r\n                    onChange={handleProjectCodeChange}\r\n                    required\r\n                    options={projects.map(proj => ({ value: proj.code, label: proj.code }))}\r\n                    disabled={loadingProjects}\r\n                    isLoading={loadingProjects}\r\n                />\r\n                \r\n                <div className=\"mb-4\">\r\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                        Nombre del Proyecto\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={selectedProjectName}\r\n                        readOnly\r\n                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 bg-gray-100 cursor-not-allowed\"\r\n                    />\r\n                </div>\r\n\r\n                <SelectField\r\n                    label=\"Fase\"\r\n                    name=\"phase\"\r\n                    value={formData.phase}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={stages.map(stage => ({ value: stage, label: stage }))}\r\n                    disabled={!formData.project_code || loadingStages}\r\n                    isLoading={loadingStages}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Disciplina\"\r\n                    name=\"discipline\"\r\n                    value={formData.discipline}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={disciplines.map(disc => ({ value: disc, label: disc }))}\r\n                    disabled={!formData.phase || loadingDisciplines}\r\n                    isLoading={loadingDisciplines}\r\n                />\r\n\r\n                <SelectField\r\n                    label=\"Actividad\"\r\n                    name=\"activity\"\r\n                    value={formData.activity}\r\n                    onChange={handleChange}\r\n                    required\r\n                    options={activities.map(act => ({ value: act, label: act }))}\r\n                    disabled={!formData.discipline || loadingActivities}\r\n                    isLoading={loadingActivities}\r\n                />\r\n\r\n                <InputField\r\n                    label=\"Horas\"\r\n                    name=\"hours\"\r\n                    type=\"number\"\r\n                    value={formData.hours}\r\n                    onChange={handleChange}\r\n                    required\r\n                    min=\"0.5\"\r\n                    step=\"0.5\"\r\n                />\r\n\r\n                <TextareaField\r\n                    label=\"Nota (Opcional)\"\r\n                    name=\"note\"\r\n                    value={formData.note}\r\n                    onChange={handleChange}\r\n                    rows={3}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n                >\r\n                    Registrar Horas\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormularioHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}