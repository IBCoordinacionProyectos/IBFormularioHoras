{"ast":null,"code":"/**\n * Returns the next month the user can navigate to, based on the given options.\n *\n * The next month is not always the next calendar month:\n *\n * - If it is after the `calendarEndMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips forward by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next month, or `undefined` if navigation is not possible.\n */\nexport function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {\n  if (options.disableNavigation) {\n    return undefined;\n  }\n  const {\n    pagedNavigation,\n    numberOfMonths = 1\n  } = options;\n  const {\n    startOfMonth,\n    addMonths,\n    differenceInCalendarMonths\n  } = dateLib;\n  const offset = pagedNavigation ? numberOfMonths : 1;\n  const month = startOfMonth(firstDisplayedMonth);\n  if (!calendarEndMonth) {\n    return addMonths(month, offset);\n  }\n  const monthsDiff = differenceInCalendarMonths(calendarEndMonth, firstDisplayedMonth);\n  if (monthsDiff < numberOfMonths) {\n    return undefined;\n  }\n  return addMonths(month, offset);\n}","map":{"version":3,"names":["getNextMonth","firstDisplayedMonth","calendarEndMonth","options","dateLib","disableNavigation","undefined","pagedNavigation","numberOfMonths","startOfMonth","addMonths","differenceInCalendarMonths","offset","month","monthsDiff"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/helpers/getNextMonth.js"],"sourcesContent":["/**\n * Returns the next month the user can navigate to, based on the given options.\n *\n * The next month is not always the next calendar month:\n *\n * - If it is after the `calendarEndMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips forward by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next month, or `undefined` if navigation is not possible.\n */\nexport function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths = 1 } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? numberOfMonths : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarEndMonth) {\n        return addMonths(month, offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(calendarEndMonth, firstDisplayedMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    return addMonths(month, offset);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,mBAAmB,EAAEC,gBAAgB,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAClF,IAAID,OAAO,CAACE,iBAAiB,EAAE;IAC3B,OAAOC,SAAS;EACpB;EACA,MAAM;IAAEC,eAAe;IAAEC,cAAc,GAAG;EAAE,CAAC,GAAGL,OAAO;EACvD,MAAM;IAAEM,YAAY;IAAEC,SAAS;IAAEC;EAA2B,CAAC,GAAGP,OAAO;EACvE,MAAMQ,MAAM,GAAGL,eAAe,GAAGC,cAAc,GAAG,CAAC;EACnD,MAAMK,KAAK,GAAGJ,YAAY,CAACR,mBAAmB,CAAC;EAC/C,IAAI,CAACC,gBAAgB,EAAE;IACnB,OAAOQ,SAAS,CAACG,KAAK,EAAED,MAAM,CAAC;EACnC;EACA,MAAME,UAAU,GAAGH,0BAA0B,CAACT,gBAAgB,EAAED,mBAAmB,CAAC;EACpF,IAAIa,UAAU,GAAGN,cAAc,EAAE;IAC7B,OAAOF,SAAS;EACpB;EACA,OAAOI,SAAS,CAACG,KAAK,EAAED,MAAM,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}