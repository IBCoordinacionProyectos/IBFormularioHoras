{"ast":null,"code":"var _jsxFileName = \"D:\\\\formulario de horas\\\\FormularioHoras Version 1\\\\frontend\\\\src\\\\components\\\\FormularioHoras.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DatePicker from './DatePicker';\nimport InputField from './InputField';\nimport SelectField from './SelectField';\nimport TextareaField from './TextareaField';\nimport ActividadesList from './ActividadesList';\n\n// Define la interfaz para un Proyecto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormularioHoras = ({\n  onSuccess\n}) => {\n  _s();\n  const [fecha, setFecha] = useState(new Date());\n  const [horas, setHoras] = useState('');\n  const [proyectoCodigo, setProyectoCodigo] = useState('');\n  const [etapa, setEtapa] = useState('');\n  const [disciplina, setDisciplina] = useState('');\n  const [actividad, setActividad] = useState('');\n  const [descripcion, setDescripcion] = useState('');\n  const [empleado, setEmpleado] = useState('');\n  const [proyectos, setProyectos] = useState([]); // Usa la interfaz Project\n  const [etapas, setEtapas] = useState([]);\n  const [disciplinas, setDisciplinas] = useState([]);\n  const [actividades, setActividades] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';\n\n  // Estado para el nombre del proyecto seleccionado\n  const [selectedProjectName, setSelectedProjectName] = useState('');\n\n  // Fetch employees\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/employees/`);\n        console.log(\"Employees fetched:\", response.data);\n        setEmployees(response.data);\n      } catch (error) {\n        console.error(\"Error fetching employees:\", error);\n      }\n    };\n    fetchEmployees();\n  }, [API_BASE_URL]);\n  useEffect(() => {\n    const fetchProyectos = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/projects/`);\n        setProyectos(response.data);\n      } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n      }\n    };\n    fetchProyectos();\n  }, [API_BASE_URL]);\n\n  // Nuevo useEffect para actualizar el nombre del proyecto seleccionado\n  useEffect(() => {\n    if (proyectoCodigo && proyectos.length > 0) {\n      const project = proyectos.find(p => p.code === proyectoCodigo);\n      if (project) {\n        setSelectedProjectName(project.name);\n      } else {\n        setSelectedProjectName('');\n      }\n    } else {\n      setSelectedProjectName('');\n    }\n  }, [proyectoCodigo, proyectos]); // Depende de proyectoCodigo y de la lista de proyectos\n\n  useEffect(() => {\n    if (proyectoCodigo) {\n      const fetchEtapas = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/projects/${proyectoCodigo}/stages`);\n          setEtapas(response.data);\n        } catch (error) {\n          console.error(\"Error fetching stages:\", error);\n          setEtapas([]);\n        }\n      };\n      fetchEtapas();\n    } else {\n      setEtapas([]);\n    }\n  }, [proyectoCodigo, API_BASE_URL]);\n  useEffect(() => {\n    if (proyectoCodigo && etapa) {\n      const fetchDisciplinas = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/activities/${proyectoCodigo}/${etapa}/disciplines`);\n          setDisciplinas(response.data);\n        } catch (error) {\n          console.error(\"Error fetching disciplines:\", error);\n          setDisciplinas([]);\n        }\n      };\n      fetchDisciplinas();\n    } else {\n      setDisciplinas([]);\n    }\n  }, [proyectoCodigo, etapa, API_BASE_URL]);\n  useEffect(() => {\n    if (proyectoCodigo && etapa && disciplina) {\n      const fetchActividades = async () => {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/activities/${proyectoCodigo}/${etapa}/${disciplina}/activities`);\n          setActividades(response.data);\n        } catch (error) {\n          console.error(\"Error fetching activities:\", error);\n          setActividades([]);\n        }\n      };\n      fetchActividades();\n    } else {\n      setActividades([]);\n    }\n  }, [proyectoCodigo, etapa, disciplina, API_BASE_URL]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const datosReporte = {\n      date: fecha === null || fecha === void 0 ? void 0 : fecha.toISOString().split('T')[0],\n      hours: horas,\n      project_code: proyectoCodigo,\n      stage: etapa,\n      discipline: disciplina,\n      activity: actividad,\n      description: descripcion,\n      employee_id: empleado\n    };\n    try {\n      await axios.post(`${API_BASE_URL}/hours/`, datosReporte);\n      alert('Horas reportadas con éxito');\n      onSuccess();\n      setFecha(new Date());\n      setHoras('');\n      setProyectoCodigo('');\n      setEtapa('');\n      setDisciplina('');\n      setActividad('');\n      setDescripcion('');\n      setEmpleado('');\n      setSelectedProjectName(''); // Limpiar también el nombre del proyecto\n    } catch (error) {\n      console.error('Error al reportar horas:', error);\n      alert('Error al reportar horas. Consulta la consola para más detalles.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-4 p-4 bg-white rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Reporte de Horas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      label: \"Fecha\",\n      selectedDate: fecha,\n      onChange: setFecha\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      label: \"Horas\",\n      type: \"number\",\n      value: horas,\n      onChange: e => setHoras(parseFloat(e.target.value) || ''),\n      placeholder: \"Ej: 8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"Empleado\",\n      value: empleado,\n      onChange: e => setEmpleado(e.target.value),\n      options: employees.map(emp => ({\n        value: emp.id,\n        label: emp.short_name\n      })),\n      placeholder: \"Seleccione un empleado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"C\\xF3digo de Proyecto\" // Cambiado el label para mayor claridad\n      ,\n      value: proyectoCodigo,\n      onChange: e => {\n        setProyectoCodigo(e.target.value);\n        setEtapa('');\n        setDisciplina('');\n        setActividad('');\n      },\n      options: proyectos.map(p => ({\n        value: p.code,\n        label: p.code\n      })) // Usamos p.code para el value y el label\n      ,\n      placeholder: \"Seleccione un proyecto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), selectedProjectName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-700 text-sm mt-1\",\n      children: [\"Nombre del Proyecto: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold\",\n        children: selectedProjectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this), proyectoCodigo && /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"Etapa\",\n      value: etapa,\n      onChange: e => {\n        setEtapa(e.target.value);\n        setDisciplina('');\n        setActividad('');\n      },\n      options: etapas.map(s => ({\n        value: s,\n        label: s\n      })),\n      placeholder: \"Seleccione una etapa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this), etapa && /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"Disciplina\",\n      value: disciplina,\n      onChange: e => {\n        setDisciplina(e.target.value);\n        setActividad('');\n      },\n      options: disciplinas.map(d => ({\n        value: d,\n        label: d\n      })),\n      placeholder: \"Seleccione una disciplina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this), disciplina && /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"Actividad\",\n      value: actividad,\n      onChange: e => setActividad(e.target.value),\n      options: actividades.map(a => ({\n        value: a,\n        label: a\n      })),\n      placeholder: \"Seleccione una actividad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextareaField, {\n      label: \"Descripci\\xF3n\",\n      value: descripcion,\n      onChange: e => setDescripcion(e.target.value),\n      placeholder: \"Descripci\\xF3n detallada de la actividad realizada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\",\n      children: \"Reportar Horas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ActividadesList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n_s(FormularioHoras, \"smrnaYgOr4vcpp2GUnyw6ipFXf8=\");\n_c = FormularioHoras;\nexport default FormularioHoras;\nvar _c;\n$RefreshReg$(_c, \"FormularioHoras\");","map":{"version":3,"names":["React","useState","useEffect","axios","DatePicker","InputField","SelectField","TextareaField","ActividadesList","jsxDEV","_jsxDEV","FormularioHoras","onSuccess","_s","fecha","setFecha","Date","horas","setHoras","proyectoCodigo","setProyectoCodigo","etapa","setEtapa","disciplina","setDisciplina","actividad","setActividad","descripcion","setDescripcion","empleado","setEmpleado","proyectos","setProyectos","etapas","setEtapas","disciplinas","setDisciplinas","actividades","setActividades","employees","setEmployees","API_BASE_URL","import","meta","env","VITE_API_URL","selectedProjectName","setSelectedProjectName","fetchEmployees","response","get","console","log","data","error","fetchProyectos","length","project","find","p","code","name","fetchEtapas","fetchDisciplinas","fetchActividades","handleSubmit","e","preventDefault","datosReporte","date","toISOString","split","hours","project_code","stage","discipline","activity","description","employee_id","post","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","selectedDate","onChange","type","value","parseFloat","target","placeholder","options","map","emp","id","short_name","s","d","a","_c","$RefreshReg$"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/components/FormularioHoras.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from './DatePicker';\r\nimport InputField from './InputField';\r\nimport SelectField from './SelectField';\r\nimport TextareaField from './TextareaField';\r\nimport ActividadesList from './ActividadesList';\r\n\r\ninterface FormularioHorasProps {\r\n    onSuccess: () => void;\r\n}\r\n\r\ninterface Actividad {\r\n    id: string;\r\n    description: string;\r\n}\r\n\r\ninterface Employee {\r\n    id: string;\r\n    short_name: string;\r\n}\r\n\r\n// Define la interfaz para un Proyecto\r\ninterface Project {\r\n    code: string;\r\n    name: string;\r\n    // Añade otras propiedades si existen en tu objeto de proyecto\r\n}\r\n\r\n\r\nconst FormularioHoras: React.FC<FormularioHorasProps> = ({ onSuccess }) => {\r\n    const [fecha, setFecha] = useState<Date | null>(new Date());\r\n    const [horas, setHoras] = useState<number | ''>('');\r\n    const [proyectoCodigo, setProyectoCodigo] = useState<string>('');\r\n    const [etapa, setEtapa] = useState<string>('');\r\n    const [disciplina, setDisciplina] = useState<string>('');\r\n    const [actividad, setActividad] = useState<string>('');\r\n    const [descripcion, setDescripcion] = useState<string>('');\r\n    const [empleado, setEmpleado] = useState<string>('');\r\n    const [proyectos, setProyectos] = useState<Project[]>([]); // Usa la interfaz Project\r\n    const [etapas, setEtapas] = useState<string[]>([]);\r\n    const [disciplinas, setDisciplinas] = useState<string[]>([]);\r\n    const [actividades, setActividades] = useState<string[]>([]);\r\n    const [employees, setEmployees] = useState<Employee[]>([]);\r\n\r\n    const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';\r\n\r\n    // Estado para el nombre del proyecto seleccionado\r\n    const [selectedProjectName, setSelectedProjectName] = useState<string>('');\r\n\r\n\r\n    // Fetch employees\r\n    useEffect(() => {\r\n        const fetchEmployees = async () => {\r\n            try {\r\n                const response = await axios.get(`${API_BASE_URL}/employees/`);\r\n                console.log(\"Employees fetched:\", response.data);\r\n                setEmployees(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching employees:\", error);\r\n            }\r\n        };\r\n        fetchEmployees();\r\n    }, [API_BASE_URL]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProyectos = async () => {\r\n            try {\r\n                const response = await axios.get(`${API_BASE_URL}/projects/`);\r\n                setProyectos(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching projects:\", error);\r\n            }\r\n        };\r\n        fetchProyectos();\r\n    }, [API_BASE_URL]);\r\n\r\n    // Nuevo useEffect para actualizar el nombre del proyecto seleccionado\r\n    useEffect(() => {\r\n        if (proyectoCodigo && proyectos.length > 0) {\r\n            const project = proyectos.find(p => p.code === proyectoCodigo);\r\n            if (project) {\r\n                setSelectedProjectName(project.name);\r\n            } else {\r\n                setSelectedProjectName('');\r\n            }\r\n        } else {\r\n            setSelectedProjectName('');\r\n        }\r\n    }, [proyectoCodigo, proyectos]); // Depende de proyectoCodigo y de la lista de proyectos\r\n\r\n\r\n    useEffect(() => {\r\n        if (proyectoCodigo) {\r\n            const fetchEtapas = async () => {\r\n                try {\r\n                    const response = await axios.get(`${API_BASE_URL}/projects/${proyectoCodigo}/stages`);\r\n                    setEtapas(response.data);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching stages:\", error);\r\n                    setEtapas([]);\r\n                }\r\n            };\r\n            fetchEtapas();\r\n        } else {\r\n            setEtapas([]);\r\n        }\r\n    }, [proyectoCodigo, API_BASE_URL]);\r\n\r\n    useEffect(() => {\r\n        if (proyectoCodigo && etapa) {\r\n            const fetchDisciplinas = async () => {\r\n                try {\r\n                    const response = await axios.get(`${API_BASE_URL}/activities/${proyectoCodigo}/${etapa}/disciplines`);\r\n                    setDisciplinas(response.data);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching disciplines:\", error);\r\n                    setDisciplinas([]);\r\n                }\r\n            };\r\n            fetchDisciplinas();\r\n        } else {\r\n            setDisciplinas([]);\r\n        }\r\n    }, [proyectoCodigo, etapa, API_BASE_URL]);\r\n\r\n    useEffect(() => {\r\n        if (proyectoCodigo && etapa && disciplina) {\r\n            const fetchActividades = async () => {\r\n                try {\r\n                    const response = await axios.get(`${API_BASE_URL}/activities/${proyectoCodigo}/${etapa}/${disciplina}/activities`);\r\n                    setActividades(response.data);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching activities:\", error);\r\n                    setActividades([]);\r\n                }\r\n            };\r\n            fetchActividades();\r\n        } else {\r\n            setActividades([]);\r\n        }\r\n    }, [proyectoCodigo, etapa, disciplina, API_BASE_URL]);\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const datosReporte = {\r\n            date: fecha?.toISOString().split('T')[0],\r\n            hours: horas,\r\n            project_code: proyectoCodigo,\r\n            stage: etapa,\r\n            discipline: disciplina,\r\n            activity: actividad,\r\n            description: descripcion,\r\n            employee_id: empleado\r\n        };\r\n\r\n        try {\r\n            await axios.post(`${API_BASE_URL}/hours/`, datosReporte);\r\n            alert('Horas reportadas con éxito');\r\n            onSuccess();\r\n            setFecha(new Date());\r\n            setHoras('');\r\n            setProyectoCodigo('');\r\n            setEtapa('');\r\n            setDisciplina('');\r\n            setActividad('');\r\n            setDescripcion('');\r\n            setEmpleado('');\r\n            setSelectedProjectName(''); // Limpiar también el nombre del proyecto\r\n        } catch (error) {\r\n            console.error('Error al reportar horas:', error);\r\n            alert('Error al reportar horas. Consulta la consola para más detalles.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"space-y-4 p-4 bg-white rounded shadow-md\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">Reporte de Horas</h2>\r\n\r\n            <DatePicker label=\"Fecha\" selectedDate={fecha} onChange={setFecha} />\r\n\r\n            <InputField\r\n                label=\"Horas\"\r\n                type=\"number\"\r\n                value={horas}\r\n                onChange={(e) => setHoras(parseFloat(e.target.value) || '')}\r\n                placeholder=\"Ej: 8\"\r\n            />\r\n\r\n            <SelectField\r\n                label=\"Empleado\"\r\n                value={empleado}\r\n                onChange={(e) => setEmpleado(e.target.value)}\r\n                options={employees.map(emp => ({ value: emp.id, label: emp.short_name }))}\r\n                placeholder=\"Seleccione un empleado\"\r\n            />\r\n\r\n            <SelectField\r\n                label=\"Código de Proyecto\" // Cambiado el label para mayor claridad\r\n                value={proyectoCodigo}\r\n                onChange={(e) => {\r\n                    setProyectoCodigo(e.target.value);\r\n                    setEtapa('');\r\n                    setDisciplina('');\r\n                    setActividad('');\r\n                }}\r\n                options={proyectos.map(p => ({ value: p.code, label: p.code }))} // Usamos p.code para el value y el label\r\n                placeholder=\"Seleccione un proyecto\"\r\n            />\r\n\r\n            {/* Nuevo elemento para mostrar el nombre del proyecto */}\r\n            {selectedProjectName && (\r\n                <div className=\"text-gray-700 text-sm mt-1\">\r\n                    Nombre del Proyecto: <span className=\"font-semibold\">{selectedProjectName}</span>\r\n                </div>\r\n            )}\r\n\r\n            {proyectoCodigo && (\r\n                <SelectField\r\n                    label=\"Etapa\"\r\n                    value={etapa}\r\n                    onChange={(e) => { setEtapa(e.target.value); setDisciplina(''); setActividad(''); }}\r\n                    options={etapas.map(s => ({ value: s, label: s }))}\r\n                    placeholder=\"Seleccione una etapa\"\r\n                />\r\n            )}\r\n\r\n            {etapa && (\r\n                <SelectField\r\n                    label=\"Disciplina\"\r\n                    value={disciplina}\r\n                    onChange={(e) => { setDisciplina(e.target.value); setActividad(''); }}\r\n                    options={disciplinas.map(d => ({ value: d, label: d }))}\r\n                    placeholder=\"Seleccione una disciplina\"\r\n                />\r\n            )}\r\n\r\n            {disciplina && (\r\n                <SelectField\r\n                    label=\"Actividad\"\r\n                    value={actividad}\r\n                    onChange={(e) => setActividad(e.target.value)}\r\n                    options={actividades.map(a => ({ value: a, label: a }))}\r\n                    placeholder=\"Seleccione una actividad\"\r\n                />\r\n            )}\r\n\r\n\r\n            <TextareaField\r\n                label=\"Descripción\"\r\n                value={descripcion}\r\n                onChange={(e) => setDescripcion(e.target.value)}\r\n                placeholder=\"Descripción detallada de la actividad realizada\"\r\n            />\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n            >\r\n                Reportar Horas\r\n            </button>\r\n\r\n            <ActividadesList />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormularioHoras;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}