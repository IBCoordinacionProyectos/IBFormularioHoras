{"ast":null,"code":"import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */\nexport function useMulti(props, dateLib) {\n  const {\n    selected: initiallySelected,\n    required,\n    onSelect\n  } = props;\n  const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n  const selected = !onSelect ? internallySelected : initiallySelected;\n  const {\n    isSameDay\n  } = dateLib;\n  const isSelected = date => {\n    var _selected$some;\n    return (_selected$some = selected === null || selected === void 0 ? void 0 : selected.some(d => isSameDay(d, date))) !== null && _selected$some !== void 0 ? _selected$some : false;\n  };\n  const {\n    min,\n    max\n  } = props;\n  const select = (triggerDate, modifiers, e) => {\n    let newDates = [...(selected !== null && selected !== void 0 ? selected : [])];\n    if (isSelected(triggerDate)) {\n      if ((selected === null || selected === void 0 ? void 0 : selected.length) === min) {\n        // Min value reached, do nothing\n        return;\n      }\n      if (required && (selected === null || selected === void 0 ? void 0 : selected.length) === 1) {\n        // Required value already selected do nothing\n        return;\n      }\n      newDates = selected === null || selected === void 0 ? void 0 : selected.filter(d => !isSameDay(d, triggerDate));\n    } else {\n      if ((selected === null || selected === void 0 ? void 0 : selected.length) === max) {\n        // Max value reached, reset the selection to date\n        newDates = [triggerDate];\n      } else {\n        // Add the date to the selection\n        newDates = [...newDates, triggerDate];\n      }\n    }\n    if (!onSelect) {\n      setSelected(newDates);\n    }\n    onSelect === null || onSelect === void 0 || onSelect(newDates, triggerDate, modifiers, e);\n    return newDates;\n  };\n  return {\n    selected,\n    select,\n    isSelected\n  };\n}","map":{"version":3,"names":["useControlledValue","useMulti","props","dateLib","selected","initiallySelected","required","onSelect","internallySelected","setSelected","undefined","isSameDay","isSelected","date","_selected$some","some","d","min","max","select","triggerDate","modifiers","e","newDates","length","filter"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/selection/useMulti.js"],"sourcesContent":["import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */\nexport function useMulti(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (date) => {\n        return selected?.some((d) => isSameDay(d, date)) ?? false;\n    };\n    const { min, max } = props;\n    const select = (triggerDate, modifiers, e) => {\n        let newDates = [...(selected ?? [])];\n        if (isSelected(triggerDate)) {\n            if (selected?.length === min) {\n                // Min value reached, do nothing\n                return;\n            }\n            if (required && selected?.length === 1) {\n                // Required value already selected do nothing\n                return;\n            }\n            newDates = selected?.filter((d) => !isSameDay(d, triggerDate));\n        }\n        else {\n            if (selected?.length === max) {\n                // Max value reached, reset the selection to date\n                newDates = [triggerDate];\n            }\n            else {\n                // Add the date to the selection\n                newDates = [...newDates, triggerDate];\n            }\n        }\n        if (!onSelect) {\n            setSelected(newDates);\n        }\n        onSelect?.(newDates, triggerDate, modifiers, e);\n        return newDates;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,kCAAkC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAEC,OAAO,EAAE;EACrC,MAAM;IAAEC,QAAQ,EAAEC,iBAAiB;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGL,KAAK;EAClE,MAAM,CAACM,kBAAkB,EAAEC,WAAW,CAAC,GAAGT,kBAAkB,CAACK,iBAAiB,EAAEE,QAAQ,GAAGF,iBAAiB,GAAGK,SAAS,CAAC;EACzH,MAAMN,QAAQ,GAAG,CAACG,QAAQ,GAAGC,kBAAkB,GAAGH,iBAAiB;EACnE,MAAM;IAAEM;EAAU,CAAC,GAAGR,OAAO;EAC7B,MAAMS,UAAU,GAAIC,IAAI,IAAK;IAAA,IAAAC,cAAA;IACzB,QAAAA,cAAA,GAAOV,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEW,IAAI,CAAEC,CAAC,IAAKL,SAAS,CAACK,CAAC,EAAEH,IAAI,CAAC,CAAC,cAAAC,cAAA,cAAAA,cAAA,GAAI,KAAK;EAC7D,CAAC;EACD,MAAM;IAAEG,GAAG;IAAEC;EAAI,CAAC,GAAGhB,KAAK;EAC1B,MAAMiB,MAAM,GAAGA,CAACC,WAAW,EAAEC,SAAS,EAAEC,CAAC,KAAK;IAC1C,IAAIC,QAAQ,GAAG,CAAC,IAAInB,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,EAAE,CAAC,CAAC;IACpC,IAAIQ,UAAU,CAACQ,WAAW,CAAC,EAAE;MACzB,IAAI,CAAAhB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoB,MAAM,MAAKP,GAAG,EAAE;QAC1B;QACA;MACJ;MACA,IAAIX,QAAQ,IAAI,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoB,MAAM,MAAK,CAAC,EAAE;QACpC;QACA;MACJ;MACAD,QAAQ,GAAGnB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEqB,MAAM,CAAET,CAAC,IAAK,CAACL,SAAS,CAACK,CAAC,EAAEI,WAAW,CAAC,CAAC;IAClE,CAAC,MACI;MACD,IAAI,CAAAhB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoB,MAAM,MAAKN,GAAG,EAAE;QAC1B;QACAK,QAAQ,GAAG,CAACH,WAAW,CAAC;MAC5B,CAAC,MACI;QACD;QACAG,QAAQ,GAAG,CAAC,GAAGA,QAAQ,EAAEH,WAAW,CAAC;MACzC;IACJ;IACA,IAAI,CAACb,QAAQ,EAAE;MACXE,WAAW,CAACc,QAAQ,CAAC;IACzB;IACAhB,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAGgB,QAAQ,EAAEH,WAAW,EAAEC,SAAS,EAAEC,CAAC,CAAC;IAC/C,OAAOC,QAAQ;EACnB,CAAC;EACD,OAAO;IACHnB,QAAQ;IACRe,MAAM;IACNP;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}