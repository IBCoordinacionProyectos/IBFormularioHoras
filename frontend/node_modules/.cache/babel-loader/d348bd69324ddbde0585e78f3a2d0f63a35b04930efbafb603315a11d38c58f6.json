{"ast":null,"code":"// horasApi.ts\nimport axios from 'axios';\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\nexport const submitHours = async data => {\n  try {\n    // Si el objeto data tiene un ID, es una actualización (PUT), de lo contrario es una creación (POST)\n    const method = data.id ? 'put' : 'post';\n    const url = data.id ? `${API_BASE_URL}/hours/${data.id}` : `${API_BASE_URL}/hours/`;\n\n    // Eliminamos el ID del objeto de datos si existe para la solicitud\n    const {\n      id,\n      ...dataToSend\n    } = data;\n    const response = await axios[method](url, dataToSend);\n    return response.data;\n  } catch (error) {\n    console.error('Error al enviar las horas:', error);\n    throw error;\n  }\n};\nexport const getProjects = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/projects/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener proyectos:', error);\n    throw error;\n  }\n};\nexport const getEmployees = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/employees/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener empleados:', error);\n    throw error;\n  }\n};\nexport const getDisciplinesByStage = async (projectCode, stage) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/disciplines`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener disciplinas para el proyecto ${projectCode}, etapa ${stage}:`, error);\n    throw error;\n  }\n};\nexport const getActivitiesByDiscipline = async (projectCode, stage, discipline) => {\n  try {\n    const params = [encodeURIComponent(projectCode), encodeURIComponent(stage), encodeURIComponent(discipline)].join('::');\n    const response = await axios.get(`${API_BASE_URL}/activities/${params}/activities`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener actividades para el proyecto ${projectCode}, etapa ${stage}, disciplina ${discipline}:`, error);\n    throw error;\n  }\n};\nexport const getDailyActivities = async (date, employeeId) => {\n  try {\n    // Convertir la fecha a formato YYYY-MM-DD si es un objeto Date\n    const dateStr = date instanceof Date ? date.toISOString().split('T')[0] : date;\n    const response = await axios.get(`${API_BASE_URL}/daily-activities`, {\n      params: {\n        date: dateStr,\n        employee_id: employeeId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener las actividades del día:', error);\n    throw error;\n  }\n};\n\n// horasApi.ts\nexport const getProjectStages = async projectCode => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    // Usa el nuevo endpoint en activities\n    const response = await axios.get(`${API_BASE_URL}/activities/project/${encodedProjectCode}/stages`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener etapas para el proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\nexport const updateHour = async (hourId, data) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/hours/${hourId}`, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al actualizar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\nexport const deleteHour = async hourId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\nexport const getProjectByCode = async projectCode => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    const response = await axios.get(`${API_BASE_URL}/projects/${encodedProjectCode}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error en el inicio de sesión:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","submitHours","data","method","id","url","dataToSend","response","error","console","getProjects","get","getEmployees","getDisciplinesByStage","projectCode","stage","params","encodeURIComponent","join","getActivitiesByDiscipline","discipline","getDailyActivities","date","employeeId","dateStr","Date","toISOString","split","employee_id","getProjectStages","encodedProjectCode","updateHour","hourId","put","deleteHour","delete","getProjectByCode","loginUser","credentials","post"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/src/api/horasApi.ts"],"sourcesContent":["// horasApi.ts\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://backend.yeisonduque.top';\n\nexport const submitHours = async (data: any) => {\n    try {\n        // Si el objeto data tiene un ID, es una actualización (PUT), de lo contrario es una creación (POST)\n        const method = data.id ? 'put' : 'post';\n        const url = data.id ? `${API_BASE_URL}/hours/${data.id}` : `${API_BASE_URL}/hours/`;\n        \n        // Eliminamos el ID del objeto de datos si existe para la solicitud\n        const { id, ...dataToSend } = data;\n        \n        const response = await axios[method](url, dataToSend);\n        return response.data;\n    } catch (error) {\n        console.error('Error al enviar las horas:', error);\n        throw error;\n    }\n};\n\nexport const getProjects = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/projects/`);\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener proyectos:', error);\n        throw error;\n    }\n};\n\nexport const getEmployees = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/employees/`);\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener empleados:', error);\n        throw error;\n    }\n};\n\nexport const getDisciplinesByStage = async (projectCode: string, stage: string) => {\n  try {\n    const params = [\n      encodeURIComponent(projectCode),\n      encodeURIComponent(stage)\n    ].join('::');\n\n    const response = await axios.get(\n      `${API_BASE_URL}/activities/${params}/disciplines`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener disciplinas para el proyecto ${projectCode}, etapa ${stage}:`, error);\n    throw error;\n  }\n};\n\nexport const getActivitiesByDiscipline = async (\n  projectCode: string, \n  stage: string, \n  discipline: string\n) => {\n  try {\n    const params = [\n      encodeURIComponent(projectCode),\n      encodeURIComponent(stage),\n      encodeURIComponent(discipline)\n    ].join('::');\n    \n    const response = await axios.get(\n      `${API_BASE_URL}/activities/${params}/activities`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener actividades para el proyecto ${projectCode}, etapa ${stage}, disciplina ${discipline}:`, error);\n    throw error;\n  }\n};\n\nexport const getDailyActivities = async (date: Date | string, employeeId: number | string) => {\n    try {\n        // Convertir la fecha a formato YYYY-MM-DD si es un objeto Date\n        const dateStr = date instanceof Date \n            ? date.toISOString().split('T')[0] \n            : date;\n            \n        const response = await axios.get(`${API_BASE_URL}/daily-activities`, {\n            params: { \n                date: dateStr, \n                employee_id: employeeId \n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error al obtener las actividades del día:', error);\n        throw error;\n    }\n};\n\n// horasApi.ts\nexport const getProjectStages = async (projectCode: string) => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    // Usa el nuevo endpoint en activities\n    const response = await axios.get(\n      `${API_BASE_URL}/activities/project/${encodedProjectCode}/stages`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener etapas para el proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\n\nexport const updateHour = async (hourId: number, data: any) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/hours/${hourId}`, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al actualizar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\n\nexport const deleteHour = async (hourId: number) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/hours/${hourId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error al eliminar el registro de horas ${hourId}:`, error);\n    throw error;\n  }\n};\n\nexport const getProjectByCode = async (projectCode: string) => {\n  try {\n    const encodedProjectCode = encodeURIComponent(projectCode);\n    const response = await axios.get(\n      `${API_BASE_URL}/projects/${encodedProjectCode}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Error al obtener proyecto ${projectCode}:`, error);\n    throw error;\n  }\n};\n\nexport const loginUser = async (credentials: any) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/auth/login`, credentials);\n        return response.data;\n    } catch (error) {\n        console.error('Error en el inicio de sesión:', error);\n        throw error;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}