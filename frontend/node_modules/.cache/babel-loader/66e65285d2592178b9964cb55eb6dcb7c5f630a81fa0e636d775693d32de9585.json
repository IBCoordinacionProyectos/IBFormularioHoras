{"ast":null,"code":"/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(props, navStart, navEnd, dateLib) {\n  const {\n    month,\n    defaultMonth,\n    today = dateLib.today(),\n    numberOfMonths = 1\n  } = props;\n  let initialMonth = month || defaultMonth || today;\n  const {\n    differenceInCalendarMonths,\n    addMonths,\n    startOfMonth\n  } = dateLib;\n  if (navEnd && differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(navEnd, offset);\n  }\n  if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n    initialMonth = navStart;\n  }\n  return startOfMonth(initialMonth);\n}","map":{"version":3,"names":["getInitialMonth","props","navStart","navEnd","dateLib","month","defaultMonth","today","numberOfMonths","initialMonth","differenceInCalendarMonths","addMonths","startOfMonth","offset"],"sources":["D:/formulario de horas/FormularioHoras Version 1/frontend/node_modules/react-day-picker/dist/esm/helpers/getInitialMonth.js"],"sourcesContent":["/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(props, navStart, navEnd, dateLib) {\n    const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1, } = props;\n    let initialMonth = month || defaultMonth || today;\n    const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n    if (navEnd &&\n        differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n        const offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(navEnd, offset);\n    }\n    if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n        initialMonth = navStart;\n    }\n    return startOfMonth(initialMonth);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAC9D,MAAM;IAAEC,KAAK;IAAEC,YAAY;IAAEC,KAAK,GAAGH,OAAO,CAACG,KAAK,CAAC,CAAC;IAAEC,cAAc,GAAG;EAAG,CAAC,GAAGP,KAAK;EACnF,IAAIQ,YAAY,GAAGJ,KAAK,IAAIC,YAAY,IAAIC,KAAK;EACjD,MAAM;IAAEG,0BAA0B;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGR,OAAO;EACvE,IAAID,MAAM,IACNO,0BAA0B,CAACP,MAAM,EAAEM,YAAY,CAAC,GAAGD,cAAc,GAAG,CAAC,EAAE;IACvE,MAAMK,MAAM,GAAG,CAAC,CAAC,IAAIL,cAAc,GAAG,CAAC,CAAC;IACxCC,YAAY,GAAGE,SAAS,CAACR,MAAM,EAAEU,MAAM,CAAC;EAC5C;EACA,IAAIX,QAAQ,IAAIQ,0BAA0B,CAACD,YAAY,EAAEP,QAAQ,CAAC,GAAG,CAAC,EAAE;IACpEO,YAAY,GAAGP,QAAQ;EAC3B;EACA,OAAOU,YAAY,CAACH,YAAY,CAAC;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}